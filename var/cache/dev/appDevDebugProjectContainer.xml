<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</parameter>
    <parameter key="kernel.project_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">app</parameter>
    <parameter key="kernel.cache_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\logs</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</parameter>
      <parameter key="JMSSecurityExtraBundle">JMS\SecurityExtraBundle\JMSSecurityExtraBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</parameter>
      <parameter key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</parameter>
      <parameter key="KnpPaginatorBundle">Knp\Bundle\PaginatorBundle\KnpPaginatorBundle</parameter>
      <parameter key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</parameter>
      <parameter key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</parameter>
      <parameter key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</parameter>
      <parameter key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</parameter>
      <parameter key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</parameter>
      <parameter key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="BazingaHateoasBundle">Bazinga\Bundle\HateoasBundle\BazingaHateoasBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</parameter>
      <parameter key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</parameter>
      <parameter key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</parameter>
      <parameter key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</parameter>
      <parameter key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</parameter>
      <parameter key="SonataClassificationBundle">Sonata\ClassificationBundle\SonataClassificationBundle</parameter>
      <parameter key="SonataDatagridBundle">Sonata\DatagridBundle\SonataDatagridBundle</parameter>
      <parameter key="MopaBootstrapBundle">Mopa\Bundle\BootstrapBundle\MopaBootstrapBundle</parameter>
      <parameter key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</parameter>
      <parameter key="LexikFormFilterBundle">Lexik\Bundle\FormFilterBundle\LexikFormFilterBundle</parameter>
      <parameter key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</parameter>
      <parameter key="KnpGaufretteBundle">Knp\Bundle\GaufretteBundle\KnpGaufretteBundle</parameter>
      <parameter key="WhiteOctoberPagerfantaBundle">WhiteOctober\PagerfantaBundle\WhiteOctoberPagerfantaBundle</parameter>
      <parameter key="DataDogAuditBundle">DataDog\AuditBundle\DataDogAuditBundle</parameter>
      <parameter key="GregwarCaptchaBundle">Gregwar\CaptchaBundle\GregwarCaptchaBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\GesdinetJWTRefreshTokenBundle</parameter>
      <parameter key="AppBundle">AppBundle\AppBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</parameter>
      <parameter key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sensio\framework-extra-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="JMSAopBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\jms\aop-bundle</parameter>
        <parameter key="namespace">JMS\AopBundle</parameter>
      </parameter>
      <parameter key="JMSSecurityExtraBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\jms\security-extra-bundle</parameter>
        <parameter key="namespace">JMS\SecurityExtraBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\doctrine\doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\doctrine\doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="KnpMenuBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu-bundle\src</parameter>
        <parameter key="namespace">Knp\Bundle\MenuBundle</parameter>
      </parameter>
      <parameter key="KnpMarkdownBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-markdown-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\MarkdownBundle</parameter>
      </parameter>
      <parameter key="KnpPaginatorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\PaginatorBundle</parameter>
      </parameter>
      <parameter key="FOSUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle</parameter>
        <parameter key="namespace">FOS\UserBundle</parameter>
      </parameter>
      <parameter key="SonataUserBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle</parameter>
        <parameter key="namespace">Sonata\UserBundle</parameter>
      </parameter>
      <parameter key="SonataMediaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src</parameter>
        <parameter key="namespace">Sonata\MediaBundle</parameter>
      </parameter>
      <parameter key="IvoryCKEditorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\egeloen\ckeditor-bundle</parameter>
        <parameter key="namespace">Ivory\CKEditorBundle</parameter>
      </parameter>
      <parameter key="SonataAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src</parameter>
        <parameter key="namespace">Sonata\AdminBundle</parameter>
      </parameter>
      <parameter key="SonataDoctrineORMAdminBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\doctrine-orm-admin-bundle\src</parameter>
        <parameter key="namespace">Sonata\DoctrineORMAdminBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="BazingaHateoasBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\willdurand\hateoas-bundle</parameter>
        <parameter key="namespace">Bazinga\Bundle\HateoasBundle</parameter>
      </parameter>
      <parameter key="NelmioApiDocBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\nelmio\api-doc-bundle\Nelmio\ApiDocBundle</parameter>
        <parameter key="namespace">Nelmio\ApiDocBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\nelmio\cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\jms\serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="SonataEasyExtendsBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\easy-extends-bundle\src</parameter>
        <parameter key="namespace">Sonata\EasyExtendsBundle</parameter>
      </parameter>
      <parameter key="SonataCoreBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src</parameter>
        <parameter key="namespace">Sonata\CoreBundle</parameter>
      </parameter>
      <parameter key="SonataIntlBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\intl-bundle\src</parameter>
        <parameter key="namespace">Sonata\IntlBundle</parameter>
      </parameter>
      <parameter key="SonataFormatterBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src</parameter>
        <parameter key="namespace">Sonata\FormatterBundle</parameter>
      </parameter>
      <parameter key="SonataBlockBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src</parameter>
        <parameter key="namespace">Sonata\BlockBundle</parameter>
      </parameter>
      <parameter key="SonataClassificationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src</parameter>
        <parameter key="namespace">Sonata\ClassificationBundle</parameter>
      </parameter>
      <parameter key="SonataDatagridBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src</parameter>
        <parameter key="namespace">Sonata\DatagridBundle</parameter>
      </parameter>
      <parameter key="MopaBootstrapBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle</parameter>
        <parameter key="namespace">Mopa\Bundle\BootstrapBundle</parameter>
      </parameter>
      <parameter key="FOSJsRoutingBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\jsrouting-bundle</parameter>
        <parameter key="namespace">FOS\JsRoutingBundle</parameter>
      </parameter>
      <parameter key="LexikFormFilterBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\FormFilterBundle</parameter>
      </parameter>
      <parameter key="LiipImagineBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\liip\imagine-bundle</parameter>
        <parameter key="namespace">Liip\ImagineBundle</parameter>
      </parameter>
      <parameter key="KnpGaufretteBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-gaufrette-bundle</parameter>
        <parameter key="namespace">Knp\Bundle\GaufretteBundle</parameter>
      </parameter>
      <parameter key="WhiteOctoberPagerfantaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle</parameter>
        <parameter key="namespace">WhiteOctober\PagerfantaBundle</parameter>
      </parameter>
      <parameter key="DataDogAuditBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\data-dog\audit-bundle\src\DataDog\AuditBundle</parameter>
        <parameter key="namespace">DataDog\AuditBundle</parameter>
      </parameter>
      <parameter key="GregwarCaptchaBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle</parameter>
        <parameter key="namespace">Gregwar\CaptchaBundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gesdinet\jwt-refresh-token-bundle</parameter>
        <parameter key="namespace">Gesdinet\JWTRefreshTokenBundle</parameter>
      </parameter>
      <parameter key="AppBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\src\AppBundle</parameter>
        <parameter key="namespace">AppBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SensioDistributionBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sensio\distribution-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\DistributionBundle</parameter>
      </parameter>
      <parameter key="SensioGeneratorBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sensio\generator-bundle</parameter>
        <parameter key="namespace">Sensio\Bundle\GeneratorBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="parent">null</parameter>
        <parameter key="path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\WebServerBundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">appDevDebugProjectContainer</parameter>
    <parameter key="database_driver">pdo_mysql</parameter>
    <parameter key="database_host">127.0.0.1</parameter>
    <parameter key="database_port">null</parameter>
    <parameter key="database_name">siunic_etecsa</parameter>
    <parameter key="database_user">root</parameter>
    <parameter key="database_password">null</parameter>
    <parameter key="mailer_transport">smtp</parameter>
    <parameter key="mailer_host">127.0.0.1</parameter>
    <parameter key="mailer_user">service@symfony.com</parameter>
    <parameter key="mailer_password">service</parameter>
    <parameter key="locale">es</parameter>
    <parameter key="secret">692cd6b4574faf02145126fe2f31c3fdbf88a5fc</parameter>
    <parameter key="webapp_host">127.0.0.1:8000</parameter>
    <parameter key="webapp_url">http://127.0.0.1:8000</parameter>
    <parameter key="webapp.logo">logo_etecsa.jpg</parameter>
    <parameter key="webapp.short_title">SIUNIC</parameter>
    <parameter key="webapp.title">Sistema Unificado de Cliente Único</parameter>
    <parameter key="sonata_admin.title">SIUNIC ETECSA</parameter>
    <parameter key="sonata_admin.short_title">SIUNIC</parameter>
    <parameter key="sonata_admin.logo_title">logo_etecsa.jpg</parameter>
    <parameter key="sonata_admin.skin">skin-purple</parameter>
    <parameter key="sonata_media.cdn.host">/uploads/media</parameter>
    <parameter key="sonata_user.google_authenticator.server">app.symfony-sonata-project.com</parameter>
    <parameter key="jwt_private_key_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.key</parameter>
    <parameter key="jwt_public_key_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.crt</parameter>
    <parameter key="jwt_key_pass_phrase">1234</parameter>
    <parameter key="jwt_token_ttl">86400</parameter>
    <parameter key="security.acl.permission.map.class">Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap</parameter>
    <parameter key="security_user_class">AppBundle\Entity\User\User</parameter>
    <parameter key="security_group_class">AppBundle\Entity\User\Group</parameter>
    <parameter key="security_user_group_table">security__user_group</parameter>
    <parameter key="security_user_admin_class">AppBundle\Admin\User\UserAdmin</parameter>
    <parameter key="security_group_admin_class">AppBundle\Admin\User\GroupAdmin</parameter>
    <parameter key="fragment.renderer.hinclude.global_template">hinclude.html.twig</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">692cd6b4574faf02145126fe2f31c3fdbf88a5fc</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">es</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa/var/sessions/dev</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="templating.loader.cache.path">null</parameter>
    <parameter key="templating.engines" type="collection">
      <parameter>twig</parameter>
    </parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">true</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/appDevDebugProjectContainer.xml</parameter>
    <parameter key="router.options.generator_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</parameter>
    <parameter key="router.options.generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</parameter>
    <parameter key="router.options.matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</parameter>
    <parameter key="router.options.matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</parameter>
    <parameter key="router.options.matcher.cache_class">appDevDebugProjectContainerUrlMatcher</parameter>
    <parameter key="router.options.generator.cache_class">appDevDebugProjectContainerUrlGenerator</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">D:\ESTUDIO\siunic_etecsa\siunic_etecsa/app/config/routing_dev.yml</parameter>
    <parameter key="router.cache_class_prefix">appDevDebugProjectContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="SONATA" type="collection"/>
      <parameter key="ROLE_AUDIT_LOGS_ADMIN" type="collection">
        <parameter>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_LIST</parameter>
        <parameter>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_VIEW</parameter>
      </parameter>
      <parameter key="ROLE_USER" type="collection">
        <parameter>ROLE_API</parameter>
        <parameter>ROLE_SONATA_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SONATA_ADMIN" type="collection">
        <parameter>ROLE_SONATA_USER_ADMIN_USER_VIEW</parameter>
        <parameter>ROLE_SONATA_USER_ADMIN_USER_EDIT</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_AUDIT_LOGS_ADMIN</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_AUDIT_LOGS_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
      <parameter key="ROLE_APP_USER" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_DASHBOARD_USER</parameter>
      </parameter>
      <parameter key="ROLE_APP_ADMIN" type="collection">
        <parameter>ROLE_USER</parameter>
        <parameter>ROLE_ADMIN</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">FOS\RestBundle\Controller\ExceptionController::showAction</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>@IvoryCKEditor/Form/ckeditor_widget.html.twig</parameter>
      <parameter>GregwarCaptchaBundle::captcha.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>@MopaBootstrap/Form/fields.html.twig</parameter>
      <parameter>SonataMediaBundle:Form:media_widgets.html.twig</parameter>
      <parameter>@SonataCore/Form/datepicker.html.twig</parameter>
      <parameter>SonataUserBundle:Form:form_admin_fields.html.twig</parameter>
      <parameter>LiipImagineBundle:Form:form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.server_log">null</parameter>
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.class">Swift_Mailer</parameter>
    <parameter key="swiftmailer.transport.sendmail.class">Swift_Transport_SendmailTransport</parameter>
    <parameter key="swiftmailer.transport.mail.class">Swift_Transport_MailTransport</parameter>
    <parameter key="swiftmailer.transport.failover.class">Swift_Transport_FailoverTransport</parameter>
    <parameter key="swiftmailer.plugin.redirecting.class">Swift_Plugins_RedirectingPlugin</parameter>
    <parameter key="swiftmailer.plugin.impersonate.class">Swift_Plugins_ImpersonatePlugin</parameter>
    <parameter key="swiftmailer.plugin.messagelogger.class">Swift_Plugins_MessageLogger</parameter>
    <parameter key="swiftmailer.plugin.antiflood.class">Swift_Plugins_AntiFloodPlugin</parameter>
    <parameter key="swiftmailer.transport.smtp.class">Swift_Transport_EsmtpTransport</parameter>
    <parameter key="swiftmailer.plugin.blackhole.class">Swift_Plugins_BlackholePlugin</parameter>
    <parameter key="swiftmailer.spool.file.class">Swift_FileSpool</parameter>
    <parameter key="swiftmailer.spool.memory.class">Swift_MemorySpool</parameter>
    <parameter key="swiftmailer.email_sender.listener.class">Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener</parameter>
    <parameter key="swiftmailer.data_collector.class">Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">smtp</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.encryption">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.port">25</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.host">127.0.0.1</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.username">service@symfony.com</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.password">service</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.auth_mode">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.timeout">30</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.source_ip">null</parameter>
    <parameter key="swiftmailer.mailer.default.transport.smtp.local_domain">null</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">Sonata\Doctrine\Types\JsonType</parameter>
        <parameter key="commented">true</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="sensio_framework_extra.view.guesser.class">Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser</parameter>
    <parameter key="sensio_framework_extra.controller.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_dir.class">Symfony\Component\Routing\Loader\AnnotationDirectoryLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_file.class">Symfony\Component\Routing\Loader\AnnotationFileLoader</parameter>
    <parameter key="sensio_framework_extra.routing.loader.annot_class.class">Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader</parameter>
    <parameter key="sensio_framework_extra.converter.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener</parameter>
    <parameter key="sensio_framework_extra.converter.manager.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager</parameter>
    <parameter key="sensio_framework_extra.converter.doctrine.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter</parameter>
    <parameter key="sensio_framework_extra.converter.datetime.class">Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter</parameter>
    <parameter key="sensio_framework_extra.view.listener.class">Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener</parameter>
    <parameter key="jms_aop.cache_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/jms_aop</parameter>
    <parameter key="jms_aop.interceptor_loader.class">JMS\AopBundle\Aop\InterceptorLoader</parameter>
    <parameter key="security.secured_services" type="collection"/>
    <parameter key="security.access.method_interceptor.class">JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor</parameter>
    <parameter key="security.access.method_access_control" type="collection"/>
    <parameter key="security.access.remembering_access_decision_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager</parameter>
    <parameter key="security.access.run_as_manager.class">JMS\SecurityExtraBundle\Security\Authorization\RunAsManager</parameter>
    <parameter key="security.authentication.provider.run_as.class">JMS\SecurityExtraBundle\Security\Authentication\Provider\RunAsAuthenticationProvider</parameter>
    <parameter key="security.run_as.key">RunAsToken</parameter>
    <parameter key="security.run_as.role_prefix">ROLE_</parameter>
    <parameter key="security.access.after_invocation_manager.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager</parameter>
    <parameter key="security.access.after_invocation.acl_provider.class">JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AclAfterInvocationProvider</parameter>
    <parameter key="security.access.iddqd_voter.class">JMS\SecurityExtraBundle\Security\Authorization\Voter\IddqdVoter</parameter>
    <parameter key="security.extra.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="security.extra.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="security.extra.driver_chain.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="security.extra.annotation_driver.class">JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="security.extra.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="security.access.secure_all_services">false</parameter>
    <parameter key="security.extra.cache_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/jms_security</parameter>
    <parameter key="security.authenticated_voter.disabled">false</parameter>
    <parameter key="security.role_voter.disabled">false</parameter>
    <parameter key="security.acl_voter.disabled">false</parameter>
    <parameter key="security.extra.iddqd_ignore_roles" type="collection">
      <parameter>ROLE_PREVIOUS_ADMIN</parameter>
    </parameter>
    <parameter key="security.iddqd_aliases" type="collection"/>
    <parameter key="doctrine_migrations.dir_name">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.namespace">Application\Migrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="knp_menu.factory.class">Knp\Menu\MenuFactory</parameter>
    <parameter key="knp_menu.factory_extension.routing.class">Knp\Menu\Integration\Symfony\RoutingExtension</parameter>
    <parameter key="knp_menu.helper.class">Knp\Menu\Twig\Helper</parameter>
    <parameter key="knp_menu.matcher.class">Knp\Menu\Matcher\Matcher</parameter>
    <parameter key="knp_menu.menu_provider.chain.class">Knp\Menu\Provider\ChainProvider</parameter>
    <parameter key="knp_menu.menu_provider.container_aware.class">Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.menu_provider.builder_alias.class">Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider</parameter>
    <parameter key="knp_menu.renderer_provider.class">Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider</parameter>
    <parameter key="knp_menu.renderer.list.class">Knp\Menu\Renderer\ListRenderer</parameter>
    <parameter key="knp_menu.renderer.list.options" type="collection"/>
    <parameter key="knp_menu.listener.voters.class">Knp\Bundle\MenuBundle\EventListener\VoterInitializerListener</parameter>
    <parameter key="knp_menu.voter.router.class">Knp\Menu\Matcher\Voter\RouteVoter</parameter>
    <parameter key="knp_menu.twig.extension.class">Knp\Menu\Twig\MenuExtension</parameter>
    <parameter key="knp_menu.renderer.twig.class">Knp\Menu\Renderer\TwigRenderer</parameter>
    <parameter key="knp_menu.renderer.twig.options" type="collection"/>
    <parameter key="knp_menu.renderer.twig.template">@KnpMenu/menu.html.twig</parameter>
    <parameter key="knp_menu.default_renderer">twig</parameter>
    <parameter key="templating.helper.markdown.class">Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper</parameter>
    <parameter key="knp_paginator.class">Knp\Component\Pager\Paginator</parameter>
    <parameter key="knp_paginator.helper.processor.class">Knp\Bundle\PaginatorBundle\Helper\Processor</parameter>
    <parameter key="knp_paginator.template.pagination">MopaBootstrapBundle:Pagination:sliding.html.twig</parameter>
    <parameter key="knp_paginator.template.filtration">@KnpPaginator/Pagination/filtration.html.twig</parameter>
    <parameter key="knp_paginator.template.sortable">@KnpPaginator/Pagination/sortable_link.html.twig</parameter>
    <parameter key="knp_paginator.page_range">5</parameter>
    <parameter key="fos_user.backend_type_orm">true</parameter>
    <parameter key="fos_user.security.interactive_login_listener.class">FOS\UserBundle\EventListener\LastLoginListener</parameter>
    <parameter key="fos_user.security.login_manager.class">FOS\UserBundle\Security\LoginManager</parameter>
    <parameter key="fos_user.resetting.email.template">@FOSUser/Resetting/email.txt.twig</parameter>
    <parameter key="fos_user.registration.confirmation.template">@FOSUser/Registration/email.txt.twig</parameter>
    <parameter key="fos_user.storage">orm</parameter>
    <parameter key="fos_user.firewall_name">main</parameter>
    <parameter key="fos_user.model_manager_name">null</parameter>
    <parameter key="fos_user.model.user.class">AppBundle\Entity\User\User</parameter>
    <parameter key="fos_user.profile.form.type">AppBundle\Form\User\Type\ProfileFormType</parameter>
    <parameter key="fos_user.profile.form.name">fos_user_profile_form</parameter>
    <parameter key="fos_user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.from_email" type="collection">
      <parameter key="no-reply@symfony.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.registration.confirmation.enabled">true</parameter>
    <parameter key="fos_user.registration.form.type">AppBundle\Form\User\Type\RegistrationFormType</parameter>
    <parameter key="fos_user.registration.form.name">fos_user_registration_form</parameter>
    <parameter key="fos_user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.change_password.form.type">FOS\UserBundle\Form\Type\ChangePasswordFormType</parameter>
    <parameter key="fos_user.change_password.form.name">fos_user_change_password_form</parameter>
    <parameter key="fos_user.change_password.form.validation_groups" type="collection">
      <parameter>ChangePassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.resetting.email.from_email" type="collection">
      <parameter key="no-reply@symfony.com">webmaster</parameter>
    </parameter>
    <parameter key="fos_user.resetting.retry_ttl">7200</parameter>
    <parameter key="fos_user.resetting.token_ttl">86400</parameter>
    <parameter key="fos_user.resetting.form.type">FOS\UserBundle\Form\Type\ResettingFormType</parameter>
    <parameter key="fos_user.resetting.form.name">fos_user_resetting_form</parameter>
    <parameter key="fos_user.resetting.form.validation_groups" type="collection">
      <parameter>ResetPassword</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="fos_user.group_manager.class">FOS\UserBundle\Doctrine\GroupManager</parameter>
    <parameter key="fos_user.model.group.class">AppBundle\Entity\User\Group</parameter>
    <parameter key="fos_user.group.form.type">FOS\UserBundle\Form\Type\GroupFormType</parameter>
    <parameter key="fos_user.group.form.name">fos_user_group_form</parameter>
    <parameter key="fos_user.group.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.admin.groupname">sonata_user</parameter>
    <parameter key="sonata.user.admin.label_catalogue">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.groupicon">&lt;i class='fa fa-users'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.user.admin.user.class">AppBundle\Admin\User\UserAdmin</parameter>
    <parameter key="sonata.user.admin.group.class">AppBundle\Admin\User\GroupAdmin</parameter>
    <parameter key="sonata.user.admin.user.entity">AppBundle\Entity\User\User</parameter>
    <parameter key="sonata.user.admin.group.entity">AppBundle\Entity\User\Group</parameter>
    <parameter key="sonata.user.admin.user.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.group.translation_domain">SonataUserBundle</parameter>
    <parameter key="sonata.user.admin.user.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.admin.group.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.user.default_avatar">bundles/sonatauser/default_avatar.png</parameter>
    <parameter key="sonata.user.impersonating" type="collection">
      <parameter key="route">page_slug</parameter>
      <parameter key="parameters" type="collection">
        <parameter key="path">/</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.google.authenticator.enabled">false</parameter>
    <parameter key="sonata.user.profile.form.type">application_sonata_user_profile</parameter>
    <parameter key="sonata.user.profile.form.name">application_sonata_user_profile_form</parameter>
    <parameter key="sonata.user.profile.form.validation_groups" type="collection">
      <parameter>Profile</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.user.register.confirm.redirect_route">sonata_user_profile_show</parameter>
    <parameter key="sonata.user.register.confirm.redirect_route_params" type="collection"/>
    <parameter key="sonata.user.configuration.profile_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.block.service.text</parameter>
        <parameter key="settings" type="collection">
          <parameter key="content">&lt;h2&gt;Welcome!&lt;/h2&gt; &lt;p&gt;This is a sample user profile dashboard, feel free to override it in the configuration! Want to make this text dynamic? For instance display the user's name? Create a dedicated block and edit the configuration!&lt;/p&gt;</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.user.registration.form.options" type="collection">
      <parameter key="horizontal_input_wrapper_class">col-lg-8</parameter>
      <parameter key="horizontal_label_class">col-lg-4 control-label</parameter>
    </parameter>
    <parameter key="sonata.user.registration.form.type">sonata_user_registration</parameter>
    <parameter key="sonata.user.registration.form.name">sonata_user_registration_form</parameter>
    <parameter key="sonata.user.registration.form.validation_groups" type="collection">
      <parameter>Registration</parameter>
      <parameter>Default</parameter>
    </parameter>
    <parameter key="sonata.media.provider.image.class">Sonata\MediaBundle\Provider\ImageProvider</parameter>
    <parameter key="sonata.media.provider.file.class">Sonata\MediaBundle\Provider\FileProvider</parameter>
    <parameter key="sonata.media.provider.youtube.class">Sonata\MediaBundle\Provider\YouTubeProvider</parameter>
    <parameter key="sonata.media.provider.dailymotion.class">Sonata\MediaBundle\Provider\DailyMotionProvider</parameter>
    <parameter key="sonata.media.provider.vimeo.class">Sonata\MediaBundle\Provider\VimeoProvider</parameter>
    <parameter key="sonata.media.thumbnail.format">Sonata\MediaBundle\Thumbnail\FormatThumbnail</parameter>
    <parameter key="sonata.media.thumbnail.format.default">jpg</parameter>
    <parameter key="sonata.media.thumbnail.liip_imagine">Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail</parameter>
    <parameter key="sonata.media.pool.class">Sonata\MediaBundle\Provider\Pool</parameter>
    <parameter key="sonata.media.resizer.simple.class">Sonata\MediaBundle\Resizer\SimpleResizer</parameter>
    <parameter key="sonata.media.resizer.square.class">Sonata\MediaBundle\Resizer\SquareResizer</parameter>
    <parameter key="sonata.media.adapter.image.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="sonata.media.adapter.image.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="sonata.media.metadata.proxy.class">Sonata\MediaBundle\Metadata\ProxyMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.amazon.class">Sonata\MediaBundle\Metadata\AmazonMetadataBuilder</parameter>
    <parameter key="sonata.media.metadata.noop.class">Sonata\MediaBundle\Metadata\NoopMetadataBuilder</parameter>
    <parameter key="sonata.media.adapater.filesystem.opencloud.class"></parameter>
    <parameter key="sonata.media.block.media.class">Sonata\MediaBundle\Block\MediaBlockService</parameter>
    <parameter key="sonata.media.block.feature_media.class">Sonata\MediaBundle\Block\FeatureMediaBlockService</parameter>
    <parameter key="sonata.media.block.gallery.class">Sonata\MediaBundle\Block\GalleryBlockService</parameter>
    <parameter key="sonata.media.block.gallery_list.class">Sonata\MediaBundle\Block\GalleryListBlockService</parameter>
    <parameter key="sonata.media.manager.media.class">Sonata\MediaBundle\Entity\MediaManager</parameter>
    <parameter key="sonata.media.manager.gallery.class">Sonata\MediaBundle\Entity\GalleryManager</parameter>
    <parameter key="sonata.media.admin.groupname">sonata_media</parameter>
    <parameter key="sonata.media.admin.groupicon">&lt;i class='fa fa-image'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.media.admin.media.class">Sonata\MediaBundle\Admin\ORM\MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.controller">SonataMediaBundle:MediaAdmin</parameter>
    <parameter key="sonata.media.admin.media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery.class">Sonata\MediaBundle\Admin\GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.controller">SonataMediaBundle:GalleryAdmin</parameter>
    <parameter key="sonata.media.admin.gallery.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.class">Sonata\MediaBundle\Admin\GalleryHasMediaAdmin</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.translation_domain">SonataMediaBundle</parameter>
    <parameter key="sonata.media.admin_format" type="collection">
      <parameter key="width">200</parameter>
      <parameter key="height">false</parameter>
      <parameter key="quality">90</parameter>
      <parameter key="format">jpg</parameter>
      <parameter key="constraint">true</parameter>
    </parameter>
    <parameter key="sonata.media.resizer.simple.adapter.mode">inset</parameter>
    <parameter key="sonata.media.resizer.square.adapter.mode">inset</parameter>
    <parameter key="sonata.media.admin.media.entity">AppBundle\Entity\Media\Media</parameter>
    <parameter key="sonata.media.admin.gallery.entity">AppBundle\Entity\Media\Gallery</parameter>
    <parameter key="sonata.media.admin.gallery_has_media.entity">AppBundle\Entity\Media\GalleryHasMedia</parameter>
    <parameter key="sonata.media.media.class">AppBundle\Entity\Media\Media</parameter>
    <parameter key="sonata.media.gallery.class">AppBundle\Entity\Media\Gallery</parameter>
    <parameter key="sonata.admin.twig.extension.x_editable_type_mapping" type="collection">
      <parameter key="choice">select</parameter>
      <parameter key="boolean">select</parameter>
      <parameter key="text">text</parameter>
      <parameter key="textarea">textarea</parameter>
      <parameter key="html">textarea</parameter>
      <parameter key="email">email</parameter>
      <parameter key="string">text</parameter>
      <parameter key="smallint">text</parameter>
      <parameter key="bigint">text</parameter>
      <parameter key="integer">number</parameter>
      <parameter key="decimal">number</parameter>
      <parameter key="currency">number</parameter>
      <parameter key="percent">number</parameter>
      <parameter key="url">url</parameter>
      <parameter key="date">date</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.global_search.empty_boxes">show</parameter>
    <parameter key="sonata.admin.configuration.templates" type="collection">
      <parameter key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</parameter>
      <parameter key="user_block">@SonataUser/Admin/Core/user_block.html.twig</parameter>
      <parameter key="layout">AppBundle:Admin:standard_layout.html.twig</parameter>
      <parameter key="ajax">SonataAdminBundle::ajax_layout.html.twig</parameter>
      <parameter key="list">SonataAdminBundle:CRUD:list.html.twig</parameter>
      <parameter key="show">SonataAdminBundle:CRUD:show.html.twig</parameter>
      <parameter key="edit">SonataAdminBundle:CRUD:edit.html.twig</parameter>
      <parameter key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</parameter>
      <parameter key="dashboard">AppBundle:Admin:dashboard.html.twig</parameter>
      <parameter key="add_block">@SonataAdmin/Core/add_block.html.twig</parameter>
      <parameter key="search">@SonataAdmin/Core/search.html.twig</parameter>
      <parameter key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</parameter>
      <parameter key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</parameter>
      <parameter key="preview">@SonataAdmin/CRUD/preview.html.twig</parameter>
      <parameter key="history">@SonataAdmin/CRUD/history.html.twig</parameter>
      <parameter key="acl">@SonataAdmin/CRUD/acl.html.twig</parameter>
      <parameter key="action">@SonataAdmin/CRUD/action.html.twig</parameter>
      <parameter key="select">@SonataAdmin/CRUD/list__select.html.twig</parameter>
      <parameter key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</parameter>
      <parameter key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</parameter>
      <parameter key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</parameter>
      <parameter key="delete">@SonataAdmin/CRUD/delete.html.twig</parameter>
      <parameter key="batch">@SonataAdmin/CRUD/list__batch.html.twig</parameter>
      <parameter key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</parameter>
      <parameter key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</parameter>
      <parameter key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</parameter>
      <parameter key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</parameter>
      <parameter key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</parameter>
      <parameter key="pager_links">@SonataAdmin/Pager/links.html.twig</parameter>
      <parameter key="pager_results">@SonataAdmin/Pager/results.html.twig</parameter>
      <parameter key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</parameter>
      <parameter key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</parameter>
      <parameter key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</parameter>
      <parameter key="button_acl">@SonataAdmin/Button/acl_button.html.twig</parameter>
      <parameter key="button_create">@SonataAdmin/Button/create_button.html.twig</parameter>
      <parameter key="button_edit">@SonataAdmin/Button/edit_button.html.twig</parameter>
      <parameter key="button_history">@SonataAdmin/Button/history_button.html.twig</parameter>
      <parameter key="button_list">@SonataAdmin/Button/list_button.html.twig</parameter>
      <parameter key="button_show">@SonataAdmin/Button/show_button.html.twig</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.admin_services" type="collection"/>
    <parameter key="sonata.admin.configuration.dashboard_groups" type="collection">
      <parameter key="sonata.admin.group.administration" type="collection">
        <parameter key="label">sonata_administration</parameter>
        <parameter key="label_catalogue">SonataAdminBundle</parameter>
        <parameter key="icon">&lt;i class="glyphicon glyphicon-user"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.site_builder" type="collection">
        <parameter key="label">sonata_page</parameter>
        <parameter key="label_catalogue">SonataPageBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-puzzle-piece"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.classification" type="collection">
        <parameter key="label">sonata_classification</parameter>
        <parameter key="label_catalogue">SonataClassificationBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-sitemap"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.group.content" type="collection">
        <parameter key="label">sonata_media</parameter>
        <parameter key="label_catalogue">SonataMediaBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-th"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="administration" type="collection">
        <parameter key="label">sonata_administration</parameter>
        <parameter key="label_catalogue">SonataAdminBundle</parameter>
        <parameter key="icon">&lt;i class="glyphicon glyphicon-user"&gt;&lt;/i&gt;</parameter>
        <parameter key="items" type="collection">
          <parameter type="collection">
            <parameter key="admin">sonata.user.admin.user</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
          <parameter type="collection">
            <parameter key="admin">sonata.user.admin.group</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
          <parameter type="collection">
            <parameter key="admin">data_dog_audit.admin.audit_log</parameter>
            <parameter key="label"></parameter>
            <parameter key="route"></parameter>
            <parameter key="route_params" type="collection"/>
            <parameter key="route_absolute">false</parameter>
            <parameter key="roles" type="collection"/>
          </parameter>
        </parameter>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
        <parameter key="roles" type="collection"/>
      </parameter>
      <parameter key="admin" type="collection">
        <parameter key="label">admin.dashboard.menu.admin.label</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_ADMIN</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="general" type="collection">
        <parameter key="label">Datos Generales</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_ADMIN</parameter>
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_agencia" type="collection">
        <parameter key="label">Contratos Agencia Persona Jurídica</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_areas" type="collection">
        <parameter key="label">Contratos Áreas de Internet</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_arrendamiento_pizarra" type="collection">
        <parameter key="label">Contratos Arrendamiento de Pizarras</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_arrendamiento_redes" type="collection">
        <parameter key="label">Contratos Arrendamiento de Redes</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_compra_venta_pizarra" type="collection">
        <parameter key="label">Contratos Compra Venta Pizarras</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_compra_venta" type="collection">
        <parameter key="label">Contratos Compra Venta</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_instalacion_pizarra" type="collection">
        <parameter key="label">Contratos Instalacion de Pizarras</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_mantenimiento_pizarra" type="collection">
        <parameter key="label">Contratos Mantenimiento de Pizarras</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_prestacion_servicios_ct" type="collection">
        <parameter key="label">Contratos Prestacion de Servicios CT</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_prestacion_servicios" type="collection">
        <parameter key="label">Contratos Prestacion de Servicios</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="contrato_recarga_pos" type="collection">
        <parameter key="label">Contratos Recarga por POS</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
      <parameter key="user" type="collection">
        <parameter key="label">admin.dashboard.menu.user.label</parameter>
        <parameter key="label_catalogue">AppBundle</parameter>
        <parameter key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</parameter>
        <parameter key="roles" type="collection">
          <parameter>ROLE_USER</parameter>
        </parameter>
        <parameter key="items" type="collection"/>
        <parameter key="on_top">false</parameter>
        <parameter key="keep_open">false</parameter>
        <parameter key="item_adds" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.dashboard_blocks" type="collection">
      <parameter type="collection">
        <parameter key="position">left</parameter>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="settings" type="collection">
          <parameter key="groups" type="collection">
            <parameter>administration</parameter>
            <parameter>contrato_agencia</parameter>
            <parameter>contrato_recarga_pos</parameter>
            <parameter>contrato_prestacion_servicios</parameter>
            <parameter>contrato_compra_venta</parameter>
            <parameter>contrato_arrendamiento_redes</parameter>
            <parameter>contrato_instalacion_pizarra</parameter>
            <parameter>contrato_compra_venta_pizarra</parameter>
            <parameter>contrato_mantenimiento_pizarra</parameter>
          </parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
        <parameter key="class">col-md-4</parameter>
      </parameter>
      <parameter type="collection">
        <parameter key="position">right</parameter>
        <parameter key="type">sonata.admin.block.admin_list</parameter>
        <parameter key="settings" type="collection">
          <parameter key="groups" type="collection">
            <parameter>admin</parameter>
            <parameter>user</parameter>
            <parameter>contrato_prestacion_servicios_ct</parameter>
            <parameter>contrato_areas</parameter>
            <parameter>contrato_arrendamiento_pizarra</parameter>
          </parameter>
        </parameter>
        <parameter key="roles" type="collection"/>
        <parameter key="class">col-md-4</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.sort_admins">false</parameter>
    <parameter key="sonata.admin.configuration.breadcrumbs" type="collection">
      <parameter key="child_admin_route">edit</parameter>
    </parameter>
    <parameter key="sonata.admin.security.acl_user_manager">fos_user.user_manager</parameter>
    <parameter key="sonata.admin.configuration.security.role_admin">ROLE_SONATA_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.role_super_admin">ROLE_SUPER_ADMIN</parameter>
    <parameter key="sonata.admin.configuration.security.information" type="collection">
      <parameter key="EDIT" type="collection">
        <parameter>EDIT</parameter>
      </parameter>
      <parameter key="LIST" type="collection">
        <parameter>LIST</parameter>
      </parameter>
      <parameter key="CREATE" type="collection">
        <parameter>CREATE</parameter>
      </parameter>
      <parameter key="VIEW" type="collection">
        <parameter>VIEW</parameter>
      </parameter>
      <parameter key="DELETE" type="collection">
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="EXPORT" type="collection">
        <parameter>EXPORT</parameter>
      </parameter>
      <parameter key="ALL" type="collection">
        <parameter>ALL</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.admin_permissions" type="collection">
      <parameter>CREATE</parameter>
      <parameter>LIST</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>EXPORT</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
    </parameter>
    <parameter key="sonata.admin.configuration.security.object_permissions" type="collection">
      <parameter>VIEW</parameter>
      <parameter>EDIT</parameter>
      <parameter>DELETE</parameter>
      <parameter>UNDELETE</parameter>
      <parameter>OPERATOR</parameter>
      <parameter>MASTER</parameter>
      <parameter>OWNER</parameter>
    </parameter>
    <parameter key="sonata.admin.security.handler.noop.class">Sonata\AdminBundle\Security\Handler\NoopSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.role.class">Sonata\AdminBundle\Security\Handler\RoleSecurityHandler</parameter>
    <parameter key="sonata.admin.security.handler.acl.class">Sonata\AdminBundle\Security\Handler\AclSecurityHandler</parameter>
    <parameter key="sonata.admin.security.mask.builder.class">Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</parameter>
    <parameter key="sonata.admin.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminAclManipulator</parameter>
    <parameter key="sonata.admin.object.manipulator.acl.admin.class">Sonata\AdminBundle\Util\AdminObjectAclManipulator</parameter>
    <parameter key="sonata.admin.extension.map" type="collection">
      <parameter key="admins" type="collection"/>
      <parameter key="excludes" type="collection"/>
      <parameter key="implements" type="collection"/>
      <parameter key="extends" type="collection"/>
      <parameter key="instanceof" type="collection"/>
      <parameter key="uses" type="collection"/>
    </parameter>
    <parameter key="sonata.admin.configuration.filters.persist">false</parameter>
    <parameter key="sonata.admin.configuration.filters.persister">sonata.admin.filter_persister.session</parameter>
    <parameter key="sonata.admin.configuration.show.mosaic.button">true</parameter>
    <parameter key="sonata.admin.configuration.translate_group_label">false</parameter>
    <parameter key="sonata.admin.manipulator.acl.object.orm.class">Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator</parameter>
    <parameter key="sonata_doctrine_orm_admin.entity_manager">null</parameter>
    <parameter key="sonata_doctrine_orm_admin.templates" type="collection">
      <parameter key="types" type="collection">
        <parameter key="list" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/list_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</parameter>
          <parameter key="date">@SonataIntl/CRUD/list_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/list_time.html.twig</parameter>
          <parameter key="datetime">@SonataIntl/CRUD/list_datetime.html.twig</parameter>
          <parameter key="text">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="textarea">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/list_email.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/list_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="smallint">@SonataIntl/CRUD/list_decimal.html.twig</parameter>
          <parameter key="bigint">@SonataIntl/CRUD/list_decimal.html.twig</parameter>
          <parameter key="integer">@SonataIntl/CRUD/list_decimal.html.twig</parameter>
          <parameter key="decimal">@SonataIntl/CRUD/list_decimal.html.twig</parameter>
          <parameter key="identifier">@SonataAdmin/CRUD/list_string.html.twig</parameter>
          <parameter key="currency">@SonataIntl/CRUD/list_currency.html.twig</parameter>
          <parameter key="percent">@SonataIntl/CRUD/list_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/list_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/list_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/list_html.html.twig</parameter>
        </parameter>
        <parameter key="show" type="collection">
          <parameter key="array">@SonataAdmin/CRUD/show_array.html.twig</parameter>
          <parameter key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</parameter>
          <parameter key="date">@SonataIntl/CRUD/show_date.html.twig</parameter>
          <parameter key="time">@SonataAdmin/CRUD/show_time.html.twig</parameter>
          <parameter key="datetime">@SonataIntl/CRUD/show_datetime.html.twig</parameter>
          <parameter key="text">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="email">@SonataAdmin/CRUD/show_email.html.twig</parameter>
          <parameter key="trans">@SonataAdmin/CRUD/show_trans.html.twig</parameter>
          <parameter key="string">@SonataAdmin/CRUD/base_show_field.html.twig</parameter>
          <parameter key="smallint">@SonataIntl/CRUD/show_decimal.html.twig</parameter>
          <parameter key="bigint">@SonataIntl/CRUD/show_decimal.html.twig</parameter>
          <parameter key="integer">@SonataIntl/CRUD/show_decimal.html.twig</parameter>
          <parameter key="decimal">@SonataIntl/CRUD/show_decimal.html.twig</parameter>
          <parameter key="currency">@SonataIntl/CRUD/show_currency.html.twig</parameter>
          <parameter key="percent">@SonataIntl/CRUD/show_percent.html.twig</parameter>
          <parameter key="choice">@SonataAdmin/CRUD/show_choice.html.twig</parameter>
          <parameter key="url">@SonataAdmin/CRUD/show_url.html.twig</parameter>
          <parameter key="html">@SonataAdmin/CRUD/show_html.html.twig</parameter>
        </parameter>
      </parameter>
      <parameter key="form" type="collection">
        <parameter>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</parameter>
      </parameter>
      <parameter key="filter" type="collection">
        <parameter>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="fos_rest.format_listener.rules">null</parameter>
    <parameter key="hateoas.link_factory.class">Hateoas\Factory\LinkFactory</parameter>
    <parameter key="hateoas.links_factory.class">Hateoas\Factory\LinksFactory</parameter>
    <parameter key="hateoas.embeds_factory.class">Hateoas\Factory\EmbeddedsFactory</parameter>
    <parameter key="hateoas.expression.evaluator.class">Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator</parameter>
    <parameter key="bazinga_hateoas.expression_language.class">Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="hateoas.expression.link.class">Hateoas\Expression\LinkExpressionFunction</parameter>
    <parameter key="hateoas.serializer.xml.class">Hateoas\Serializer\XmlSerializer</parameter>
    <parameter key="hateoas.serializer.json_hal.class">Hateoas\Serializer\JsonHalSerializer</parameter>
    <parameter key="hateoas.serializer.exclusion_manager.class">Hateoas\Serializer\ExclusionManager</parameter>
    <parameter key="hateoas.event_subscriber.xml.class">Hateoas\Serializer\EventSubscriber\XmlEventSubscriber</parameter>
    <parameter key="hateoas.event_subscriber.json.class">Hateoas\Serializer\EventSubscriber\JsonEventSubscriber</parameter>
    <parameter key="hateoas.inline_deferrer.embeds.class">Hateoas\Serializer\Metadata\InlineDeferrer</parameter>
    <parameter key="hateoas.inline_deferrer.links.class">Hateoas\Serializer\Metadata\InlineDeferrer</parameter>
    <parameter key="hateoas.configuration.provider.resolver.chain.class">Hateoas\Configuration\Provider\Resolver\ChainResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.method.class">Hateoas\Configuration\Provider\Resolver\MethodResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.static_method.class">Hateoas\Configuration\Provider\Resolver\StaticMethodResolver</parameter>
    <parameter key="hateoas.configuration.provider.resolver.symfony_container.class">Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver</parameter>
    <parameter key="hateoas.configuration.relation_provider.class">Hateoas\Configuration\Provider\RelationProvider</parameter>
    <parameter key="hateoas.configuration.relations_repository.class">Hateoas\Configuration\RelationsRepository</parameter>
    <parameter key="hateoas.configuration.metadata.yaml_driver.class">Hateoas\Configuration\Metadata\Driver\YamlDriver</parameter>
    <parameter key="hateoas.configuration.metadata.xml_driver.class">Hateoas\Configuration\Metadata\Driver\XmlDriver</parameter>
    <parameter key="hateoas.configuration.metadata.annotation_driver.class">Hateoas\Configuration\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="hateoas.configuration.metadata.extension_driver.class">Hateoas\Configuration\Metadata\Driver\ExtensionDriver</parameter>
    <parameter key="hateoas.generator.registry.class">Hateoas\UrlGenerator\UrlGeneratorRegistry</parameter>
    <parameter key="hateoas.generator.symfony.class">Hateoas\UrlGenerator\SymfonyUrlGenerator</parameter>
    <parameter key="hateoas.helper.link.class">Hateoas\Helper\LinkHelper</parameter>
    <parameter key="hateoas.twig.link.class">Hateoas\Twig\Extension\LinkExtension</parameter>
    <parameter key="nelmio_api_doc.motd.template">NelmioApiDocBundle::Components/motd.html.twig</parameter>
    <parameter key="nelmio_api_doc.exclude_sections" type="collection"/>
    <parameter key="nelmio_api_doc.default_sections_opened">true</parameter>
    <parameter key="nelmio_api_doc.api_name">System API</parameter>
    <parameter key="nelmio_api_doc.sandbox.enabled">true</parameter>
    <parameter key="nelmio_api_doc.sandbox.endpoint">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.accept_type">null</parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.formats" type="collection">
      <parameter>form</parameter>
      <parameter>json</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.sandbox.body_format.default_format">form</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.method">accept_header</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.default_format">json</parameter>
    <parameter key="nelmio_api_doc.sandbox.request_format.formats" type="collection">
      <parameter key="json">application/json</parameter>
      <parameter key="xml">application/xml</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.sandbox.entity_to_choice">true</parameter>
    <parameter key="nelmio_api_doc.formatter.abstract_formatter.class">Nelmio\ApiDocBundle\Formatter\AbstractFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.markdown_formatter.class">Nelmio\ApiDocBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.simple_formatter.class">Nelmio\ApiDocBundle\Formatter\SimpleFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.html_formatter.class">Nelmio\ApiDocBundle\Formatter\HtmlFormatter</parameter>
    <parameter key="nelmio_api_doc.formatter.swagger_formatter.class">Nelmio\ApiDocBundle\Formatter\SwaggerFormatter</parameter>
    <parameter key="nelmio_api_doc.sandbox.authentication" type="collection">
      <parameter key="delivery">http</parameter>
      <parameter key="type">bearer</parameter>
      <parameter key="name">Authorization</parameter>
      <parameter key="custom_endpoint">false</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.extractor.api_doc_extractor.class">Nelmio\ApiDocBundle\Extractor\ApiDocExtractor</parameter>
    <parameter key="nelmio_api_doc.form.extension.description_form_type_extension.class">Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension</parameter>
    <parameter key="nelmio_api_doc.twig.extension.extra_markdown.class">Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension</parameter>
    <parameter key="nelmio_api_doc.doc_comment_extractor.class">Nelmio\ApiDocBundle\Util\DocCommentExtractor</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.fos_rest.class">Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.jms_security.class">Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.sensio_framework_extra.class">Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler</parameter>
    <parameter key="nelmio_api_doc.extractor.handler.phpdoc.class">Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler</parameter>
    <parameter key="nelmio_api_doc.parser.collection_parser.class">Nelmio\ApiDocBundle\Parser\CollectionParser</parameter>
    <parameter key="nelmio_api_doc.parser.form_errors_parser.class">Nelmio\ApiDocBundle\Parser\FormErrorsParser</parameter>
    <parameter key="nelmio_api_doc.parser.json_serializable_parser.class">Nelmio\ApiDocBundle\Parser\JsonSerializableParser</parameter>
    <parameter key="nelmio_api_doc.request_listener.parameter">_doc</parameter>
    <parameter key="nelmio_api_doc.event_listener.request.class">Nelmio\ApiDocBundle\EventListener\RequestListener</parameter>
    <parameter key="nelmio_api_doc.parser.validation_parser.class">Nelmio\ApiDocBundle\Parser\ValidationParser</parameter>
    <parameter key="nelmio_api_doc.swagger.base_path">/api</parameter>
    <parameter key="nelmio_api_doc.swagger.swagger_version">1.2</parameter>
    <parameter key="nelmio_api_doc.swagger.api_version">0.1</parameter>
    <parameter key="nelmio_api_doc.swagger.info" type="collection">
      <parameter key="title">Symfony2</parameter>
      <parameter key="description">My awesome Symfony2 app!</parameter>
      <parameter key="TermsOfServiceUrl">null</parameter>
      <parameter key="contact">null</parameter>
      <parameter key="license">null</parameter>
      <parameter key="licenseUrl">null</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.swagger.model_naming_strategy">dot_notation</parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/api/" type="collection">
        <parameter key="allow_origin">true</parameter>
        <parameter key="allow_headers">true</parameter>
        <parameter key="allow_methods" type="collection">
          <parameter>GET</parameter>
          <parameter>POST</parameter>
          <parameter>PUT</parameter>
          <parameter>PATCH</parameter>
          <parameter>DELETE</parameter>
          <parameter>OPTIONS</parameter>
        </parameter>
        <parameter key="max_age">3600</parameter>
      </parameter>
      <parameter key="^/" type="collection">
        <parameter key="origin_regex">true</parameter>
        <parameter key="allow_origin" type="collection">
          <parameter>^http://localhost:[0-9]+</parameter>
        </parameter>
        <parameter key="allow_headers" type="collection">
          <parameter>x-custom-auth</parameter>
        </parameter>
        <parameter key="allow_methods" type="collection">
          <parameter>GET</parameter>
          <parameter>POST</parameter>
          <parameter>PUT</parameter>
          <parameter>PATCH</parameter>
          <parameter>DELETE</parameter>
          <parameter>OPTIONS</parameter>
        </parameter>
        <parameter key="max_age">3600</parameter>
        <parameter key="hosts" type="collection">
          <parameter>^api\.</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection"/>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection"/>
      <parameter key="expose_headers" type="collection"/>
      <parameter key="allow_methods" type="collection"/>
      <parameter key="max_age">0</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">false</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="jms_serializer.metadata.file_locator.class">Metadata\Driver\FileLocator</parameter>
    <parameter key="jms_serializer.metadata.annotation_driver.class">JMS\Serializer\Metadata\Driver\AnnotationDriver</parameter>
    <parameter key="jms_serializer.metadata.chain_driver.class">Metadata\Driver\DriverChain</parameter>
    <parameter key="jms_serializer.metadata.yaml_driver.class">JMS\Serializer\Metadata\Driver\YamlDriver</parameter>
    <parameter key="jms_serializer.metadata.xml_driver.class">JMS\Serializer\Metadata\Driver\XmlDriver</parameter>
    <parameter key="jms_serializer.metadata.php_driver.class">JMS\Serializer\Metadata\Driver\PhpDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrineTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.doctrine_phpcr_type_driver.class">JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver</parameter>
    <parameter key="jms_serializer.metadata.lazy_loading_driver.class">Metadata\Driver\LazyLoadingDriver</parameter>
    <parameter key="jms_serializer.metadata.metadata_factory.class">Metadata\MetadataFactory</parameter>
    <parameter key="jms_serializer.metadata.cache.file_cache.class">Metadata\Cache\FileCache</parameter>
    <parameter key="jms_serializer.event_dispatcher.class">JMS\Serializer\EventDispatcher\LazyEventDispatcher</parameter>
    <parameter key="jms_serializer.camel_case_naming_strategy.class">JMS\Serializer\Naming\CamelCaseNamingStrategy</parameter>
    <parameter key="jms_serializer.identical_property_naming_strategy.class">JMS\Serializer\Naming\IdenticalPropertyNamingStrategy</parameter>
    <parameter key="jms_serializer.serialized_name_annotation_strategy.class">JMS\Serializer\Naming\SerializedNameAnnotationStrategy</parameter>
    <parameter key="jms_serializer.cache_naming_strategy.class">JMS\Serializer\Naming\CacheNamingStrategy</parameter>
    <parameter key="jms_serializer.doctrine_object_constructor.class">JMS\Serializer\Construction\DoctrineObjectConstructor</parameter>
    <parameter key="jms_serializer.unserialize_object_constructor.class">JMS\Serializer\Construction\UnserializeObjectConstructor</parameter>
    <parameter key="jms_serializer.version_exclusion_strategy.class">JMS\Serializer\Exclusion\VersionExclusionStrategy</parameter>
    <parameter key="jms_serializer.serializer.class">JMS\Serializer\Serializer</parameter>
    <parameter key="jms_serializer.twig_extension.class">JMS\Serializer\Twig\SerializerExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension.class">JMS\Serializer\Twig\SerializerRuntimeExtension</parameter>
    <parameter key="jms_serializer.twig_runtime_extension_helper.class">JMS\Serializer\Twig\SerializerRuntimeHelper</parameter>
    <parameter key="jms_serializer.templating.helper.class">JMS\SerializerBundle\Templating\SerializerHelper</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.class">JMS\Serializer\JsonSerializationVisitor</parameter>
    <parameter key="jms_serializer.json_serialization_visitor.options">0</parameter>
    <parameter key="jms_serializer.json_deserialization_visitor.class">JMS\Serializer\JsonDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_serialization_visitor.class">JMS\Serializer\XmlSerializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.class">JMS\Serializer\XmlDeserializationVisitor</parameter>
    <parameter key="jms_serializer.xml_deserialization_visitor.doctype_whitelist" type="collection"/>
    <parameter key="jms_serializer.xml_serialization_visitor.format_output">true</parameter>
    <parameter key="jms_serializer.yaml_serialization_visitor.class">JMS\Serializer\YamlSerializationVisitor</parameter>
    <parameter key="jms_serializer.handler_registry.class">JMS\Serializer\Handler\LazyHandlerRegistry</parameter>
    <parameter key="jms_serializer.datetime_handler.class">JMS\Serializer\Handler\DateHandler</parameter>
    <parameter key="jms_serializer.array_collection_handler.class">JMS\Serializer\Handler\ArrayCollectionHandler</parameter>
    <parameter key="jms_serializer.php_collection_handler.class">JMS\Serializer\Handler\PhpCollectionHandler</parameter>
    <parameter key="jms_serializer.form_error_handler.class">FOS\RestBundle\Serializer\Normalizer\FormErrorHandler</parameter>
    <parameter key="jms_serializer.constraint_violation_handler.class">JMS\Serializer\Handler\ConstraintViolationHandler</parameter>
    <parameter key="jms_serializer.doctrine_proxy_subscriber.class">JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber</parameter>
    <parameter key="jms_serializer.stopwatch_subscriber.class">JMS\SerializerBundle\Serializer\StopwatchEventSubscriber</parameter>
    <parameter key="jms_serializer.configured_context_factory.class">JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory</parameter>
    <parameter key="jms_serializer.expression_evaluator.class">JMS\Serializer\Expression\ExpressionEvaluator</parameter>
    <parameter key="jms_serializer.expression_language.class">Symfony\Component\ExpressionLanguage\ExpressionLanguage</parameter>
    <parameter key="jms_serializer.expression_language.function_provider.class">JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider</parameter>
    <parameter key="jms_serializer.accessor_strategy.default.class">JMS\Serializer\Accessor\DefaultAccessorStrategy</parameter>
    <parameter key="jms_serializer.accessor_strategy.expression.class">JMS\Serializer\Accessor\ExpressionAccessorStrategy</parameter>
    <parameter key="jms_serializer.cache.cache_warmer.class">JMS\SerializerBundle\Cache\CacheWarmer</parameter>
    <parameter key="sonata.core.flashmessage.manager.class">Sonata\CoreBundle\FlashMessage\FlashManager</parameter>
    <parameter key="sonata.core.twig.extension.flashmessage.class">Sonata\CoreBundle\Twig\Extension\FlashMessageExtension</parameter>
    <parameter key="sonata.core.form_type">standard</parameter>
    <parameter key="sonata.core.form.mapping.type" type="collection"/>
    <parameter key="sonata.core.form.mapping.extension" type="collection"/>
    <parameter key="sonata.intl.locale_detector.request.class">Sonata\IntlBundle\Locale\RequestDetector</parameter>
    <parameter key="sonata.intl.locale_detector.session.class">Sonata\IntlBundle\Locale\SessionDetector</parameter>
    <parameter key="sonata.intl.templating.helper.locale.class">Sonata\IntlBundle\Templating\Helper\LocaleHelper</parameter>
    <parameter key="sonata.intl.templating.helper.number.class">Sonata\IntlBundle\Templating\Helper\NumberHelper</parameter>
    <parameter key="sonata.intl.templating.helper.datetime.class">Sonata\IntlBundle\Templating\Helper\DateTimeHelper</parameter>
    <parameter key="sonata.intl.timezone_detector.chain.class">Sonata\IntlBundle\Timezone\ChainTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.user.class">Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.timezone_detector.locale.class">Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector</parameter>
    <parameter key="sonata.intl.twig.helper.locale.class">Sonata\IntlBundle\Twig\Extension\LocaleExtension</parameter>
    <parameter key="sonata.intl.twig.helper.number.class">Sonata\IntlBundle\Twig\Extension\NumberExtension</parameter>
    <parameter key="sonata.intl.twig.helper.datetime.class">Sonata\IntlBundle\Twig\Extension\DateTimeExtension</parameter>
    <parameter key="sonata_intl.timezone.detectors" type="collection">
      <parameter>sonata.intl.timezone_detector.user</parameter>
      <parameter>sonata.intl.timezone_detector.locale</parameter>
    </parameter>
    <parameter key="sonata.formatter.text.markdown.class">Sonata\FormatterBundle\Formatter\MarkdownFormatter</parameter>
    <parameter key="sonata.formatter.text.text.class">Sonata\FormatterBundle\Formatter\TextFormatter</parameter>
    <parameter key="sonata.formatter.text.raw.class">Sonata\FormatterBundle\Formatter\RawFormatter</parameter>
    <parameter key="sonata.formatter.text.twigengine.class">Sonata\FormatterBundle\Formatter\TwigFormatter</parameter>
    <parameter key="sonata.formatter.block.formatter.class">Sonata\FormatterBundle\Block\FormatterBlockService</parameter>
    <parameter key="sonata.formatter.ckeditor.extension.class">Sonata\FormatterBundle\Admin\CkeditorAdminExtension</parameter>
    <parameter key="sonata.formatter.ckeditor.configuration.templates" type="collection">
      <parameter key="browser">SonataFormatterBundle:Ckeditor:browser.html.twig</parameter>
      <parameter key="upload">SonataFormatterBundle:Ckeditor:upload.html.twig</parameter>
    </parameter>
    <parameter key="sonata.block.service.container.class">Sonata\BlockBundle\Block\Service\ContainerBlockService</parameter>
    <parameter key="sonata.block.service.empty.class">Sonata\BlockBundle\Block\Service\EmptyBlockService</parameter>
    <parameter key="sonata.block.service.text.class">Sonata\BlockBundle\Block\Service\TextBlockService</parameter>
    <parameter key="sonata.block.service.rss.class">Sonata\BlockBundle\Block\Service\RssBlockService</parameter>
    <parameter key="sonata.block.service.menu.class">Sonata\BlockBundle\Block\Service\MenuBlockService</parameter>
    <parameter key="sonata.block.service.template.class">Sonata\BlockBundle\Block\Service\TemplateBlockService</parameter>
    <parameter key="sonata.block.exception.strategy.manager.class">Sonata\BlockBundle\Exception\Strategy\StrategyManager</parameter>
    <parameter key="sonata.block.container.types" type="collection">
      <parameter>sonata.block.service.container</parameter>
      <parameter>sonata.page.block.container</parameter>
      <parameter>sonata.dashboard.block.container</parameter>
      <parameter>cmf.block.container</parameter>
      <parameter>cmf.block.slideshow</parameter>
    </parameter>
    <parameter key="sonata_block.blocks" type="collection">
      <parameter key="sonata.admin.block.stats" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.admin_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.text" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.container" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.rss" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.block.service.template" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.container" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.children_pages" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.ajax" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.context_manager" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.breadcrumb" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.shared_block" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.page.block.pagelist" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.gallery" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.feature_media" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.media.block.gallery_list" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.account" type="collection">
        <parameter key="cache">sonata.page.cache.js_async</parameter>
        <parameter key="contexts" type="collection">
          <parameter>user</parameter>
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.menu" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>user</parameter>
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.breadcrumb_index" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.user.block.breadcrumb_profile" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.email.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.like_box" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.like_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.send_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.facebook.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.pinterest.pin_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.share_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.follow_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.hashtag_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.mention_button" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.twitter.embed" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.formatter.block.formatter" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.seo.block.breadcrumb.homepage" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>sonata_page_bundle</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
      <parameter key="sonata.admin.block.search_result" type="collection">
        <parameter key="contexts" type="collection">
          <parameter>admin</parameter>
        </parameter>
        <parameter key="templates" type="collection"/>
        <parameter key="cache">sonata.cache.noop</parameter>
        <parameter key="settings" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="sonata_block.blocks_by_class" type="collection"/>
    <parameter key="sonata_block.cache_blocks" type="collection">
      <parameter key="by_type" type="collection">
        <parameter key="sonata.admin.block.stats">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.admin_list">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.text">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.container">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.rss">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.block.service.template">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.container">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.children_pages">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.ajax">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.context_manager">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.breadcrumb">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.shared_block">sonata.cache.noop</parameter>
        <parameter key="sonata.page.block.pagelist">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.media">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.gallery">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.feature_media">sonata.cache.noop</parameter>
        <parameter key="sonata.media.block.gallery_list">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.account">sonata.page.cache.js_async</parameter>
        <parameter key="sonata.user.block.menu">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.breadcrumb_index">sonata.cache.noop</parameter>
        <parameter key="sonata.user.block.breadcrumb_profile">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.email.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.like_box">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.like_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.send_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.facebook.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.share_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.twitter.embed">sonata.cache.noop</parameter>
        <parameter key="sonata.formatter.block.formatter">sonata.cache.noop</parameter>
        <parameter key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</parameter>
        <parameter key="sonata.admin.block.search_result">sonata.cache.noop</parameter>
      </parameter>
    </parameter>
    <parameter key="sonata.classification.manager.category.class">Sonata\ClassificationBundle\Entity\CategoryManager</parameter>
    <parameter key="sonata.classification.manager.tag.class">Sonata\ClassificationBundle\Entity\TagManager</parameter>
    <parameter key="sonata.classification.manager.collection.class">Sonata\ClassificationBundle\Entity\CollectionManager</parameter>
    <parameter key="sonata.classification.manager.context.class">Sonata\ClassificationBundle\Entity\ContextManager</parameter>
    <parameter key="sonata.classification.admin.groupname">sonata_classification</parameter>
    <parameter key="sonata.classification.admin.groupicon">&lt;i class='fa fa-tags'&gt;&lt;/i&gt;</parameter>
    <parameter key="sonata.classification.admin.tag.entity">AppBundle\Entity\Classification\Tag</parameter>
    <parameter key="sonata.classification.admin.category.entity">AppBundle\Entity\Classification\Category</parameter>
    <parameter key="sonata.classification.admin.collection.entity">AppBundle\Entity\Classification\Collection</parameter>
    <parameter key="sonata.classification.admin.context.entity">AppBundle\Entity\Classification\Context</parameter>
    <parameter key="sonata.classification.manager.tag.entity">AppBundle\Entity\Classification\Tag</parameter>
    <parameter key="sonata.classification.manager.category.entity">AppBundle\Entity\Classification\Category</parameter>
    <parameter key="sonata.classification.manager.collection.entity">AppBundle\Entity\Classification\Collection</parameter>
    <parameter key="sonata.classification.manager.context.entity">AppBundle\Entity\Classification\Context</parameter>
    <parameter key="sonata.classification.admin.category.class">Sonata\ClassificationBundle\Admin\CategoryAdmin</parameter>
    <parameter key="sonata.classification.admin.category.controller">SonataClassificationBundle:CategoryAdmin</parameter>
    <parameter key="sonata.classification.admin.category.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.tag.class">Sonata\ClassificationBundle\Admin\TagAdmin</parameter>
    <parameter key="sonata.classification.admin.tag.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.tag.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.collection.class">Sonata\ClassificationBundle\Admin\CollectionAdmin</parameter>
    <parameter key="sonata.classification.admin.collection.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.collection.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="sonata.classification.admin.context.class">Sonata\ClassificationBundle\Admin\ContextAdmin</parameter>
    <parameter key="sonata.classification.admin.context.controller">SonataAdminBundle:CRUD</parameter>
    <parameter key="sonata.classification.admin.context.translation_domain">SonataClassificationBundle</parameter>
    <parameter key="mopa_bootstrap.bootstrap.install_path">Resources/public/bootstrap</parameter>
    <parameter key="mopa_bootstrap.twig.extension.form.class">Mopa\Bundle\BootstrapBundle\Twig\FormExtension</parameter>
    <parameter key="mopa_bootstrap.twig.extension.icon.class">Mopa\Bundle\BootstrapBundle\Twig\IconExtension</parameter>
    <parameter key="mopa_bootstrap.twig.extension.flash.class">Mopa\Bundle\BootstrapBundle\Twig\FlashExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.embed_form.class">Mopa\Bundle\BootstrapBundle\Form\Extension\EmbedFormExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.static_text.class">Mopa\Bundle\BootstrapBundle\Form\Extension\StaticTextExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.offset_button.class">Mopa\Bundle\BootstrapBundle\Form\Extension\OffsetButtonExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.button.class">Mopa\Bundle\BootstrapBundle\Form\Extension\IconButtonExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.help.class">Mopa\Bundle\BootstrapBundle\Form\Extension\HelpFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.legend.class">Mopa\Bundle\BootstrapBundle\Form\Extension\LegendFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.error.class">Mopa\Bundle\BootstrapBundle\Form\Extension\ErrorTypeFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.widget.class">Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.layout.class">Mopa\Bundle\BootstrapBundle\Form\Extension\LayoutFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.widget_collection.class">Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetCollectionFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.date.class">Mopa\Bundle\BootstrapBundle\Form\Extension\DateTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.datetime.class">Mopa\Bundle\BootstrapBundle\Form\Extension\DatetimeTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.time.class">Mopa\Bundle\BootstrapBundle\Form\Extension\TimeTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type_extension.tabbed.class">Mopa\Bundle\BootstrapBundle\Form\Extension\TabbedFormTypeExtension</parameter>
    <parameter key="mopa_bootstrap.form.type.tab.class">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</parameter>
    <parameter key="mopa_bootstrap.form.type.form_actions.class">Mopa\Bundle\BootstrapBundle\Form\Type\FormActionsType</parameter>
    <parameter key="mopa_bootstrap.form.show_legend">false</parameter>
    <parameter key="mopa_bootstrap.form.render_optional_text">false</parameter>
    <parameter key="mopa_bootstrap.form.render_required_asterisk">true</parameter>
    <parameter key="mopa_bootstrap.form.allow_legacy">false</parameter>
    <parameter key="mopa_bootstrap.form.templating">@MopaBootstrap/Form/fields.html.twig</parameter>
    <parameter key="mopa_bootstrap.form.layout">horizontal</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_label_class">col-sm-3</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_label_div_class">null</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_label_offset_class">col-sm-offset-3</parameter>
    <parameter key="mopa_bootstrap.form.horizontal_input_wrapper_class">col-sm-9</parameter>
    <parameter key="mopa_bootstrap.form.date_wrapper_class.year">col-xs-4</parameter>
    <parameter key="mopa_bootstrap.form.date_wrapper_class.month">col-xs-4</parameter>
    <parameter key="mopa_bootstrap.form.date_wrapper_class.day">col-xs-4</parameter>
    <parameter key="mopa_bootstrap.form.render_fieldset">true</parameter>
    <parameter key="mopa_bootstrap.form.render_collection_item">true</parameter>
    <parameter key="mopa_bootstrap.form.show_child_legend">false</parameter>
    <parameter key="mopa_bootstrap.form.legend_tag">legend</parameter>
    <parameter key="mopa_bootstrap.form.checkbox_label">both</parameter>
    <parameter key="mopa_bootstrap.form.error_type">null</parameter>
    <parameter key="mopa_bootstrap.form.tabs.class">nav nav-tabs</parameter>
    <parameter key="mopa_bootstrap.form.help_widget.popover" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="content">null</parameter>
      <parameter key="trigger">hover</parameter>
      <parameter key="toggle">popover</parameter>
      <parameter key="placement">right</parameter>
      <parameter key="selector">null</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_label.tooltip" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_label.popover" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="content">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_block.tooltip" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.help_block.popover" type="collection">
      <parameter key="title">null</parameter>
      <parameter key="content">null</parameter>
      <parameter key="text">null</parameter>
      <parameter key="icon">info-sign</parameter>
      <parameter key="placement">top</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.collection.widget_remove_btn" type="collection">
      <parameter key="attr" type="collection">
        <parameter key="class">btn btn-default</parameter>
      </parameter>
      <parameter key="wrapper_div" type="collection">
        <parameter key="class">form-group</parameter>
      </parameter>
      <parameter key="horizontal_wrapper_div" type="collection">
        <parameter key="class">col-sm-3 col-sm-offset-3</parameter>
      </parameter>
      <parameter key="label">remove_item</parameter>
      <parameter key="translation_domain">null</parameter>
      <parameter key="icon">null</parameter>
      <parameter key="icon_inverted">false</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.form.collection.widget_add_btn" type="collection">
      <parameter key="attr" type="collection">
        <parameter key="class">btn btn-default</parameter>
      </parameter>
      <parameter key="label">add_item</parameter>
      <parameter key="translation_domain">null</parameter>
      <parameter key="icon">null</parameter>
      <parameter key="icon_inverted">false</parameter>
    </parameter>
    <parameter key="mopa_bootstrap.icons.icon_set">glyphicons</parameter>
    <parameter key="mopa_bootstrap.icons.shortcut">icon</parameter>
    <parameter key="fos_js_routing.extractor.class">FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor</parameter>
    <parameter key="fos_js_routing.controller.class">FOS\JsRoutingBundle\Controller\Controller</parameter>
    <parameter key="fos_js_routing.cache_control" type="collection">
      <parameter key="enabled">false</parameter>
    </parameter>
    <parameter key="lexik_form_filter.query_builder_updater.class">Lexik\Bundle\FormFilterBundle\Filter\FilterBuilderUpdater</parameter>
    <parameter key="lexik_form_filter.form_data_extractor.class">Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\FormDataExtractor</parameter>
    <parameter key="lexik_form_filter.data_extraction_method.default.class">Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\DefaultExtractionMethod</parameter>
    <parameter key="lexik_form_filter.data_extraction_method.text.class">Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\TextExtractionMethod</parameter>
    <parameter key="lexik_form_filter.data_extraction_method.key_values.class">Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\ValueKeysExtractionMethod</parameter>
    <parameter key="lexik_form_filter.filter_prepare.class">Lexik\Bundle\FormFilterBundle\Event\Listener\PrepareListener</parameter>
    <parameter key="lexik_form_filter.type.filter_text.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\TextFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_number.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_number_range.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberRangeFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_checkbox.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CheckboxFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_boolean.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\BooleanFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_choice.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\ChoiceFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_date.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_date_range.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateRangeFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_datetime.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_datetime_range.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeRangeFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_collection_adapter.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CollectionAdapterFilterType</parameter>
    <parameter key="lexik_form_filter.type.filter_sharedable.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\SharedableFilterType</parameter>
    <parameter key="lexik_form_filter.type_extension.filter_extension.class">Lexik\Bundle\FormFilterBundle\Filter\Form\FilterTypeExtension</parameter>
    <parameter key="lexik_form_filter.get_filter.doctrine_orm.class">Lexik\Bundle\FormFilterBundle\Event\Subscriber\DoctrineORMSubscriber</parameter>
    <parameter key="lexik_form_filter.apply_filter.doctrine_orm.class">Lexik\Bundle\FormFilterBundle\Event\Listener\DoctrineApplyFilterListener</parameter>
    <parameter key="lexik_form_filter.type.filter_entity.class">Lexik\Bundle\FormFilterBundle\Filter\Form\Type\EntityFilterType</parameter>
    <parameter key="lexik_form_filter.where_method">and</parameter>
    <parameter key="lexik_form_filter.text.condition_pattern">1</parameter>
    <parameter key="liip_imagine.filter.configuration.class">Liip\ImagineBundle\Imagine\Filter\FilterConfiguration</parameter>
    <parameter key="liip_imagine.filter.manager.class">Liip\ImagineBundle\Imagine\Filter\FilterManager</parameter>
    <parameter key="liip_imagine.data.manager.class">Liip\ImagineBundle\Imagine\Data\DataManager</parameter>
    <parameter key="liip_imagine.cache.manager.class">Liip\ImagineBundle\Imagine\Cache\CacheManager</parameter>
    <parameter key="liip_imagine.cache.signer.class">Liip\ImagineBundle\Imagine\Cache\Signer</parameter>
    <parameter key="liip_imagine.binary.mime_type_guesser.class">Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser</parameter>
    <parameter key="liip_imagine.controller.class">Liip\ImagineBundle\Controller\ImagineController</parameter>
    <parameter key="liip_imagine.twig.extension.class">Liip\ImagineBundle\Templating\ImagineExtension</parameter>
    <parameter key="liip_imagine.templating.helper.class">Liip\ImagineBundle\Templating\Helper\ImagineHelper</parameter>
    <parameter key="liip_imagine.gd.class">Imagine\Gd\Imagine</parameter>
    <parameter key="liip_imagine.imagick.class">Imagine\Imagick\Imagine</parameter>
    <parameter key="liip_imagine.gmagick.class">Imagine\Gmagick\Imagine</parameter>
    <parameter key="liip_imagine.filter.loader.relative_resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.resize.class">Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.thumbnail.class">Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.crop.class">Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.grayscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.paste.class">Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.watermark.class">Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.strip.class">Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.background.class">Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.scale.class">Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.upscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.downscale.class">Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.auto_rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.rotate.class">Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.flip.class">Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.interlace.class">Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader</parameter>
    <parameter key="liip_imagine.filter.loader.resample.class">Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader</parameter>
    <parameter key="liip_imagine.binary.loader.filesystem.class">Liip\ImagineBundle\Binary\Loader\FileSystemLoader</parameter>
    <parameter key="liip_imagine.binary.loader.stream.class">Liip\ImagineBundle\Binary\Loader\StreamLoader</parameter>
    <parameter key="liip_imagine.binary.loader.flysystem.class">Liip\ImagineBundle\Binary\Loader\FlysystemLoader</parameter>
    <parameter key="liip_imagine.binary.loader.chain.class">Liip\ImagineBundle\Binary\Loader\ChainLoader</parameter>
    <parameter key="liip_imagine.binary.locator.filesystem.class">Liip\ImagineBundle\Binary\Locator\FileSystemLocator</parameter>
    <parameter key="liip_imagine.binary.locator.filesystem_insecure.class">Liip\ImagineBundle\Binary\Locator\FileSystemInsecureLocator</parameter>
    <parameter key="liip_imagine.cache.resolver.web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.no_cache_web_path.class">Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.aws_s3.class">Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver</parameter>
    <parameter key="liip_imagine.cache.resolver.cache.class">Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.flysystem.class">Liip\ImagineBundle\Imagine\Cache\Resolver\FlysystemResolver</parameter>
    <parameter key="liip_imagine.cache.resolver.proxy.class">Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver</parameter>
    <parameter key="liip_imagine.form.type.image.class">Liip\ImagineBundle\Form\Type\ImageType</parameter>
    <parameter key="liip_imagine.meta_data.reader.class">Imagine\Image\Metadata\ExifMetadataReader</parameter>
    <parameter key="liip_imagine.filter.post_processor.jpegoptim.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor</parameter>
    <parameter key="liip_imagine.jpegoptim.binary">/usr/bin/jpegoptim</parameter>
    <parameter key="liip_imagine.jpegoptim.stripall">true</parameter>
    <parameter key="liip_imagine.jpegoptim.max">null</parameter>
    <parameter key="liip_imagine.jpegoptim.progressive">true</parameter>
    <parameter key="liip_imagine.jpegoptim.tempdir">null</parameter>
    <parameter key="liip_imagine.filter.post_processor.optipng.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor</parameter>
    <parameter key="liip_imagine.optipng.binary">/usr/bin/optipng</parameter>
    <parameter key="liip_imagine.optipng.level">7</parameter>
    <parameter key="liip_imagine.optipng.stripall">true</parameter>
    <parameter key="liip_imagine.optipng.tempdir">null</parameter>
    <parameter key="liip_imagine.filter.post_processor.pngquant.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor</parameter>
    <parameter key="liip_imagine.pngquant.binary">/usr/bin/pngquant</parameter>
    <parameter key="liip_imagine.filter.post_processor.mozjpeg.class">Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor</parameter>
    <parameter key="liip_imagine.mozjpeg.binary">/opt/mozjpeg/bin/cjpeg</parameter>
    <parameter key="liip_imagine.cache.resolver.default">web_path</parameter>
    <parameter key="liip_imagine.default_image">null</parameter>
    <parameter key="liip_imagine.filter_sets" type="collection">
      <parameter key="thumbnail_50x40" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="relative_resize" type="collection">
            <parameter key="widen">50</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_90x60" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>90</parameter>
              <parameter>60</parameter>
            </parameter>
            <parameter key="mode">outbound</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_200x200" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="relative_resize" type="collection">
            <parameter key="widen">200</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_262x255" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="thumbnail" type="collection">
            <parameter key="size" type="collection">
              <parameter>265</parameter>
              <parameter>255</parameter>
            </parameter>
            <parameter key="mode">inset</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_310x300" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="relative_resize" type="collection">
            <parameter key="widen">310</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
      <parameter key="thumbnail_610x600" type="collection">
        <parameter key="filters" type="collection">
          <parameter key="relative_resize" type="collection">
            <parameter key="widen">610</parameter>
          </parameter>
        </parameter>
        <parameter key="quality">100</parameter>
        <parameter key="jpeg_quality">null</parameter>
        <parameter key="png_compression_level">null</parameter>
        <parameter key="png_compression_filter">null</parameter>
        <parameter key="format">null</parameter>
        <parameter key="animated">false</parameter>
        <parameter key="cache">null</parameter>
        <parameter key="data_loader">null</parameter>
        <parameter key="default_image">null</parameter>
        <parameter key="post_processors" type="collection"/>
      </parameter>
    </parameter>
    <parameter key="liip_imagine.binary.loader.default">filesystem</parameter>
    <parameter key="liip_imagine.controller.filter_action">liip_imagine.controller:filterAction</parameter>
    <parameter key="liip_imagine.controller.filter_runtime_action">liip_imagine.controller:filterRuntimeAction</parameter>
    <parameter key="liip_imagine.controller.redirect_response_code">301</parameter>
    <parameter key="knp_gaufrette.filesystem_map.class">Knp\Bundle\GaufretteBundle\FilesystemMap</parameter>
    <parameter key="white_october_pagerfanta.default_view">default</parameter>
    <parameter key="white_october_pagerfanta.view_factory.class">Pagerfanta\View\ViewFactory</parameter>
    <parameter key="gregwar_captcha.captcha_type.class">Gregwar\CaptchaBundle\Type\CaptchaType</parameter>
    <parameter key="gregwar_captcha.captcha_generator.class">Gregwar\CaptchaBundle\Generator\CaptchaGenerator</parameter>
    <parameter key="gregwar_captcha.image_file_handler.class">Gregwar\CaptchaBundle\Generator\ImageFileHandler</parameter>
    <parameter key="gregwar_captcha.captcha_builder.class">Gregwar\Captcha\CaptchaBuilder</parameter>
    <parameter key="gregwar_captcha.phrase_builder.class">Gregwar\Captcha\PhraseBuilder</parameter>
    <parameter key="gregwar_captcha.config" type="collection">
      <parameter key="width">200</parameter>
      <parameter key="height">50</parameter>
      <parameter key="length">4</parameter>
      <parameter key="font">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle\DependencyInjection/../Generator/Font/captcha.ttf</parameter>
      <parameter key="keep_value">false</parameter>
      <parameter key="charset">abcdefhjkmnprstuvwxyz23456789</parameter>
      <parameter key="as_file">false</parameter>
      <parameter key="as_url">false</parameter>
      <parameter key="reload">false</parameter>
      <parameter key="image_folder">captcha</parameter>
      <parameter key="web_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</parameter>
      <parameter key="gc_freq">100</parameter>
      <parameter key="expiration">60</parameter>
      <parameter key="quality">50</parameter>
      <parameter key="invalid_message">Bad code value</parameter>
      <parameter key="bypass_code">null</parameter>
      <parameter key="whitelist_key">captcha_whitelist_key</parameter>
      <parameter key="humanity">0</parameter>
      <parameter key="distortion">true</parameter>
      <parameter key="max_front_lines">null</parameter>
      <parameter key="max_behind_lines">null</parameter>
      <parameter key="interpolation">true</parameter>
      <parameter key="text_color" type="collection"/>
      <parameter key="background_color" type="collection"/>
      <parameter key="background_images" type="collection"/>
      <parameter key="disabled">false</parameter>
      <parameter key="ignore_all_effects">false</parameter>
    </parameter>
    <parameter key="gregwar_captcha.config.image_folder">captcha</parameter>
    <parameter key="gregwar_captcha.config.web_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</parameter>
    <parameter key="gregwar_captcha.config.gc_freq">100</parameter>
    <parameter key="gregwar_captcha.config.expiration">60</parameter>
    <parameter key="gregwar_captcha.config.whitelist_key">captcha_whitelist_key</parameter>
    <parameter key="lexik_jwt_authentication.private_key_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.key</parameter>
    <parameter key="lexik_jwt_authentication.public_key_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.crt</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">1234</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">86400</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="lexik_jwt_authentication.encoder.crypto_engine">openssl</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.refresh_token.class">Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl">86400</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl_update">true</parameter>
    <parameter key="gesdinet_jwt_refresh_token.security.firewall">api</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_provider">null</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.entity_manager.id">doctrine.orm.entity_manager</parameter>
    <parameter key="web_profiler.debug_toolbar.position">bottom</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="sonata.block.data_collector" type="collection">
        <parameter>block</parameter>
        <parameter>@SonataBlock/Profiler/block.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter key="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand">console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_containscommand">doctrine_cache.contains_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_deletecommand">doctrine_cache.delete_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_flushcommand">doctrine_cache.flush_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinecachebundle_command_statscommand">doctrine_cache.stats_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_createdatabasedoctrinecommand">doctrine.database_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_dropdatabasedoctrinecommand">doctrine.database_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_generateentitiesdoctrinecommand">doctrine.generate_entities_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_importmappingdoctrinecommand">doctrine.mapping_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearmetadatacachedoctrinecommand">doctrine.cache_clear_metadata_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearquerycachedoctrinecommand">doctrine.cache_clear_query_cache_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_clearresultcachedoctrinecommand">doctrine.cache_clear_result_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_collectionregiondoctrinecommand">doctrine.cache_collection_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_convertmappingdoctrinecommand">doctrine.mapping_convert_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_createschemadoctrinecommand">doctrine.schema_create_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_dropschemadoctrinecommand">doctrine.schema_drop_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_ensureproductionsettingsdoctrinecommand">doctrine.ensure_production_settings_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_entityregioncachedoctrinecommand">doctrine.clear_entity_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_importdoctrinecommand">doctrine.database_import_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_infodoctrinecommand">doctrine.mapping_info_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_queryregioncachedoctrinecommand">doctrine.clear_query_region_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_rundqldoctrinecommand">doctrine.query_dql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_runsqldoctrinecommand">doctrine.query_sql_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_updateschemadoctrinecommand">doctrine.schema_update_command</parameter>
      <parameter key="console.command.doctrine_bundle_doctrinebundle_command_proxy_validateschemacommand">doctrine.schema_validate_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsdiffdoctrinecommand">doctrine_migrations.diff_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsexecutedoctrinecommand">doctrine_migrations.execute_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsgeneratedoctrinecommand">doctrine_migrations.generate_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationslatestdoctrinecommand">doctrine_migrations.latest_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsmigratedoctrinecommand">doctrine_migrations.migrate_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsstatusdoctrinecommand">doctrine_migrations.status_command</parameter>
      <parameter key="console.command.doctrine_bundle_migrationsbundle_command_migrationsversiondoctrinecommand">doctrine_migrations.version_command</parameter>
      <parameter key="console.command.fos_userbundle_command_activateusercommand">fos_user.command.activate_user</parameter>
      <parameter key="console.command.fos_userbundle_command_changepasswordcommand">fos_user.command.change_password</parameter>
      <parameter key="console.command.fos_userbundle_command_createusercommand">fos_user.command.create_user</parameter>
      <parameter key="console.command.fos_userbundle_command_deactivateusercommand">fos_user.command.deactivate_user</parameter>
      <parameter key="console.command.fos_userbundle_command_demoteusercommand">fos_user.command.demote_user</parameter>
      <parameter key="console.command.fos_userbundle_command_promoteusercommand">fos_user.command.promote_user</parameter>
      <parameter key="console.command.sonata_mediabundle_command_addmassmediacommand">Sonata\MediaBundle\Command\AddMassMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_addmediacommand">Sonata\MediaBundle\Command\AddMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_cleanmediacommand">Sonata\MediaBundle\Command\CleanMediaCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_fixmediacontextcommand">Sonata\MediaBundle\Command\FixMediaContextCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_migratetojsontypecommand">Sonata\MediaBundle\Command\MigrateToJsonTypeCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_refreshmetadatacommand">Sonata\MediaBundle\Command\RefreshMetadataCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_removethumbscommand">Sonata\MediaBundle\Command\RemoveThumbsCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_syncthumbscommand">Sonata\MediaBundle\Command\SyncThumbsCommand</parameter>
      <parameter key="console.command.sonata_mediabundle_command_updatecdnstatuscommand">Sonata\MediaBundle\Command\UpdateCdnStatusCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_createclasscachecommand">Sonata\AdminBundle\Command\CreateClassCacheCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_explainadmincommand">Sonata\AdminBundle\Command\ExplainAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateadmincommand">Sonata\AdminBundle\Command\GenerateAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_generateobjectaclcommand">Sonata\AdminBundle\Command\GenerateObjectAclCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_listadmincommand">Sonata\AdminBundle\Command\ListAdminCommand</parameter>
      <parameter key="console.command.sonata_adminbundle_command_setupaclcommand">Sonata\AdminBundle\Command\SetupAclCommand</parameter>
      <parameter key="console.command.sonata_easyextendsbundle_command_dumpmappingcommand">Sonata\EasyExtendsBundle\Command\DumpMappingCommand</parameter>
      <parameter key="console.command.sonata_easyextendsbundle_command_generatecommand">Sonata\EasyExtendsBundle\Command\GenerateCommand</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatadumpdoctrinemetacommand">Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand</parameter>
      <parameter key="console.command.sonata_corebundle_command_sonatalistformmappingcommand">Sonata\CoreBundle\Command\SonataListFormMappingCommand</parameter>
      <parameter key="console.command.sonata_blockbundle_command_debugblockscommand">Sonata\BlockBundle\Command\DebugBlocksCommand</parameter>
      <parameter key="console.command.lexik_bundle_jwtauthenticationbundle_command_checkconfigcommand">lexik_jwt_authentication.check_config_command</parameter>
      <parameter key="console.command.sensiolabs_security_command_securitycheckercommand">sensio_distribution.security_checker.command</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverruncommand">console.command.symfony_bundle_webserverbundle_command_serverruncommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstartcommand">console.command.symfony_bundle_webserverbundle_command_serverstartcommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstopcommand">console.command.symfony_bundle_webserverbundle_command_serverstopcommand</parameter>
      <parameter key="console.command.symfony_bundle_webserverbundle_command_serverstatuscommand">console.command.symfony_bundle_webserverbundle_command_serverstatuscommand</parameter>
    </parameter>
    <parameter key="nelmio_api_doc.parser.form_type_parser.class">Nelmio\ApiDocBundle\Parser\FormTypeParser</parameter>
    <parameter key="nelmio_api_doc.parser.jms_metadata_parser.class">Nelmio\ApiDocBundle\Parser\JmsMetadataParser</parameter>
    <parameter key="sonata.core.form.types" type="collection">
      <parameter>application_user.registration.form.type</parameter>
      <parameter>application_user.profile.form.type</parameter>
      <parameter>application_sonata_user.profile.authentication.form.type</parameter>
      <parameter>form.type.form</parameter>
      <parameter>form.type.choice</parameter>
      <parameter>form.type.entity</parameter>
      <parameter>fos_user.username_form_type</parameter>
      <parameter>fos_user.profile.form.type</parameter>
      <parameter>fos_user.registration.form.type</parameter>
      <parameter>fos_user.change_password.form.type</parameter>
      <parameter>fos_user.resetting.form.type</parameter>
      <parameter>fos_user.group.form.type</parameter>
      <parameter>sonata.user.form.type.security_roles</parameter>
      <parameter>sonata.user.profile.form.type</parameter>
      <parameter>sonata.user.form.gender_list</parameter>
      <parameter>sonata.user.registration.form.type</parameter>
      <parameter>sonata.user.api.form.type.group</parameter>
      <parameter>sonata.user.api.form.type.user</parameter>
      <parameter>sonata.media.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.doctrine.media</parameter>
      <parameter>sonata.media.api.form.type.media</parameter>
      <parameter>sonata.media.api.form.type.gallery</parameter>
      <parameter>sonata.media.api.form.type.gallery_has_media</parameter>
      <parameter>ivory_ck_editor.form.type</parameter>
      <parameter>sonata.admin.form.type.admin</parameter>
      <parameter>sonata.admin.form.type.model_choice</parameter>
      <parameter>sonata.admin.form.type.model_list</parameter>
      <parameter>sonata.admin.form.type.model_reference</parameter>
      <parameter>sonata.admin.form.type.model_hidden</parameter>
      <parameter>sonata.admin.form.type.model_autocomplete</parameter>
      <parameter>sonata.admin.form.type.collection</parameter>
      <parameter>sonata.admin.doctrine_orm.form.type.choice_field_mask</parameter>
      <parameter>sonata.admin.form.filter.type.number</parameter>
      <parameter>sonata.admin.form.filter.type.choice</parameter>
      <parameter>sonata.admin.form.filter.type.default</parameter>
      <parameter>sonata.admin.form.filter.type.date</parameter>
      <parameter>sonata.admin.form.filter.type.daterange</parameter>
      <parameter>sonata.admin.form.filter.type.datetime</parameter>
      <parameter>sonata.admin.form.filter.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.array</parameter>
      <parameter>sonata.core.form.type.boolean</parameter>
      <parameter>sonata.core.form.type.collection</parameter>
      <parameter>sonata.core.form.type.translatable_choice</parameter>
      <parameter>sonata.core.form.type.date_range</parameter>
      <parameter>sonata.core.form.type.datetime_range</parameter>
      <parameter>sonata.core.form.type.date_picker</parameter>
      <parameter>sonata.core.form.type.datetime_picker</parameter>
      <parameter>sonata.core.form.type.date_range_picker</parameter>
      <parameter>sonata.core.form.type.datetime_range_picker</parameter>
      <parameter>sonata.core.form.type.equal</parameter>
      <parameter>sonata.core.form.type.color_selector</parameter>
      <parameter>sonata.core.form.type.color</parameter>
      <parameter>sonata.formatter.form.type.selector</parameter>
      <parameter>sonata.formatter.form.type.simple</parameter>
      <parameter>sonata.block.form.type.block</parameter>
      <parameter>sonata.block.form.type.container_template</parameter>
      <parameter>sonata.classification.form.type.category_selector</parameter>
      <parameter>sonata.classification.api.form.type.category</parameter>
      <parameter>sonata.classification.api.form.type.collection</parameter>
      <parameter>sonata.classification.api.form.type.tag</parameter>
      <parameter>sonata.classification.api.form.type.context</parameter>
      <parameter>mopa_bootstrap.form.type.tab</parameter>
      <parameter>mopa_bootstrap.form.type.form_actions</parameter>
      <parameter>lexik_form_filter.type.filter_text</parameter>
      <parameter>lexik_form_filter.type.filter_number</parameter>
      <parameter>lexik_form_filter.type.filter_number_range</parameter>
      <parameter>lexik_form_filter.type.filter_checkbox</parameter>
      <parameter>lexik_form_filter.type.filter_boolean</parameter>
      <parameter>lexik_form_filter.type.filter_choice</parameter>
      <parameter>lexik_form_filter.type.filter_date</parameter>
      <parameter>lexik_form_filter.type.filter_date_range</parameter>
      <parameter>lexik_form_filter.type.filter_datetime</parameter>
      <parameter>lexik_form_filter.type.filter_datetime_range</parameter>
      <parameter>lexik_form_filter.type.filter_collection_adapter</parameter>
      <parameter>lexik_form_filter.type.filter_sharedable</parameter>
      <parameter>lexik_form_filter.type.filter_entity</parameter>
      <parameter>liip_imagine.form.type.image</parameter>
      <parameter>captcha.type</parameter>
    </parameter>
    <parameter key="sonata.core.form.type_extensions" type="collection">
      <parameter>form.type_extension.form.http_foundation</parameter>
      <parameter>form.type_extension.form.validator</parameter>
      <parameter>form.type_extension.repeated.validator</parameter>
      <parameter>form.type_extension.submit.validator</parameter>
      <parameter>form.type_extension.upload.validator</parameter>
      <parameter>form.type_extension.csrf</parameter>
      <parameter>form.type_extension.form.data_collector</parameter>
      <parameter>sonata.admin.form.extension.field</parameter>
      <parameter>sonata.admin.form.extension.choice</parameter>
      <parameter>fos_rest.form.extension.csrf_disable</parameter>
      <parameter>nelmio_api_doc.form.extension.description_form_type_extension</parameter>
      <parameter>mopa_bootstrap.form.type_extension.embed_form</parameter>
      <parameter>mopa_bootstrap.form.type_extension.static_text</parameter>
      <parameter>mopa_bootstrap.form.type_extension.offset_button</parameter>
      <parameter>mopa_bootstrap.form.type_extension.button</parameter>
      <parameter>mopa_bootstrap.form.type_extension.help</parameter>
      <parameter>mopa_bootstrap.form.type_extension.legend</parameter>
      <parameter>mopa_bootstrap.form.type_extension.error</parameter>
      <parameter>mopa_bootstrap.form.type_extension.widget</parameter>
      <parameter>mopa_bootstrap.form.type_extension.horizontal</parameter>
      <parameter>mopa_bootstrap.form.type_extension.widget_collection</parameter>
      <parameter>mopa_bootstrap.form.type_extension.date</parameter>
      <parameter>mopa_bootstrap.form.type_extension.datetime</parameter>
      <parameter>mopa_bootstrap.form.type_extension.time</parameter>
      <parameter>mopa_bootstrap.form.type_extension.tabbed</parameter>
      <parameter>lexik_form_filter.type_extension.filter_extension</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" synthetic="true"/>
    <service id="AppBundle\AppBundle" class="AppBundle\AppBundle" public="false" autowire="true" autoconfigure="true"/>
    <service id="AppBundle\Controller\Api\SecurityApiController" class="AppBundle\Controller\Api\SecurityApiController" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="AppBundle\Controller\ContratoAgenciaController" class="AppBundle\Controller\ContratoAgenciaController" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="AppBundle\Controller\DefaultController" class="AppBundle\Controller\DefaultController" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
    </service>
    <service id="AppBundle\DependencyInjection\AppExtension" class="AppBundle\DependencyInjection\AppExtension" public="false" autowire="true" autoconfigure="true"/>
    <service id="AppBundle\DependencyInjection\Configuration" class="AppBundle\DependencyInjection\Configuration" public="false" autowire="true" autoconfigure="true"/>
    <service id="datadog.logout.handler.session" class="AppBundle\EventHandler\Audit\DataDogSessionLogoutHandler" public="false">
      <argument type="service" id="security.context"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="twig.audit.extension" class="AppBundle\Twig\Extension\AuditExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="data_dog_audit.admin.audit_log" class="AppBundle\Admin\Audit\AuditLogAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="datadog_admin" label="System Logs" label_catalogue="ApplicationDataDogAuditBundle" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>data_dog_audit.admin.audit_log</argument>
      <argument>DataDog\AuditBundle\Entity\AuditLog</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>AppBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>System Logs</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="data_dog_audit.admin.audit_log.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="application_user.registration.form.type" class="AppBundle\Form\User\Type\RegistrationFormType">
      <tag name="form.type" alias="application_user_registration"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="application_user.profile.form.type" class="AppBundle\Form\User\Type\ProfileFormType">
      <tag name="form.type" alias="application_user_profile"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="application_sonata_user.profile.authentication.form.type" class="AppBundle\Form\User\Type\ProfileAuthenticationFormType">
      <tag name="form.type" alias="application_user_profile_authentication"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="application_user.locale_listener" class="AppBundle\EventListener\User\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument>es</argument>
    </service>
    <service id="application_user.user_locale_listener" class="AppBundle\EventListener\User\UserLocaleListener">
      <tag name="kernel.event_listener" event="security.interactive_login" method="onInteractiveLogin"/>
      <argument type="service" id="session"/>
    </service>
    <service id="controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="100"/>
    </service>
    <service id="argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="50"/>
    </service>
    <service id="argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="service_locator.717bc613acdb6c8c838334d17e5a2b7a"/>
    </service>
    <service id="argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-100"/>
    </service>
    <service id="argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="-150"/>
    </service>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="request_stack"/>
      <argument>es</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="controller_name_converter"/>
    </service>
    <service id="2_c96ae0422b1c97f376c0bdbe6aae9aae67afb2b1a5eb7f331b0f8109dcf05b7f" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="1_c96ae0422b1c97f376c0bdbe6aae9aae67afb2b1a5eb7f331b0f8109dcf05b7f" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack"/>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate">
      <argument type="collection">
        <argument type="service" id="templating.cache_warmer.template_paths"/>
        <argument type="service" id="validator.mapping.cache_warmer"/>
        <argument type="service" id="translation.warmer"/>
        <argument type="service" id="router.cache_warmer"/>
        <argument type="service" id="annotations.cache_warmer"/>
        <argument type="service" id="twig.cache_warmer"/>
        <argument type="service" id="twig.template_cache_warmer"/>
        <argument type="service" id="doctrine.orm.proxy_cache_warmer"/>
        <argument type="service" id="sonata.admin.route.cache_warmup"/>
      </argument>
    </service>
    <service id="kernel.class_cache.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ClassCacheCacheWarmer">
      <argument type="collection">
        <argument>Symfony\Component\HttpFoundation\ParameterBag</argument>
        <argument>Symfony\Component\HttpFoundation\HeaderBag</argument>
        <argument>Symfony\Component\HttpFoundation\FileBag</argument>
        <argument>Symfony\Component\HttpFoundation\ServerBag</argument>
        <argument>Symfony\Component\HttpFoundation\Request</argument>
        <argument>Symfony\Component\HttpKernel\Kernel</argument>
      </argument>
      <deprecated>The "%service_id%" option is deprecated since version 3.3, to be removed in 4.0.</deprecated>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer">
      <argument type="collection">
        <argument type="service" id="cache.default_clearer"/>
      </argument>
    </service>
    <service id="kernel" synthetic="true"/>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator">
      <argument type="service" id="kernel"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources</argument>
      <argument type="collection">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
      </argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>692cd6b4574faf02145126fe2f31c3fdbf88a5fc</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory">
      <argument type="iterator">
        <argument type="service" id="1_c96ae0422b1c97f376c0bdbe6aae9aae67afb2b1a5eb7f331b0f8109dcf05b7f"/>
        <argument type="service" id="2_c96ae0422b1c97f376c0bdbe6aae9aae67afb2b1a5eb7f331b0f8109dcf05b7f"/>
      </argument>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler">
      <argument></argument>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>hinclude.html.twig</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer" unlazy="1"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer">
      <tag name="kernel.cache_clearer"/>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false"/>
    <service id="1_ecb9f3e5e09550c3de1e21744ccf95010c2dd68e0ba4f80f5f0f48d6d8300efe" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
      <argument type="service" id="session.storage.native"/>
      <argument type="service" id="session.attribute_bag"/>
      <argument type="service" id="session.flash_bag"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage">
      <argument type="collection">
        <argument key="cookie_httponly">true</argument>
        <argument key="gc_probability">1</argument>
      </argument>
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage">
      <argument type="service" id="session.handler.native_file"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false"/>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false"/>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa/var/sessions/dev</argument>
    </service>
    <service id="session.handler.write_check" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\WriteCheckSessionHandler" public="false"/>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="1_ecb9f3e5e09550c3de1e21744ccf95010c2dd68e0ba4f80f5f0f48d6d8300efe"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy">
      <argument type="service" id="1_db393106710b4ecca94c4b525e25dfa728fd58f52b39121a25f5e50561ecd290"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory">
      <argument type="service" id="form.registry"/>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.birthday" class="Symfony\Component\Form\Extension\Core\Type\BirthdayType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.checkbox" class="Symfony\Component\Form\Extension\Core\Type\CheckboxType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.collection" class="Symfony\Component\Form\Extension\Core\Type\CollectionType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.country" class="Symfony\Component\Form\Extension\Core\Type\CountryType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.date" class="Symfony\Component\Form\Extension\Core\Type\DateType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.datetime" class="Symfony\Component\Form\Extension\Core\Type\DateTimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.email" class="Symfony\Component\Form\Extension\Core\Type\EmailType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.hidden" class="Symfony\Component\Form\Extension\Core\Type\HiddenType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.integer" class="Symfony\Component\Form\Extension\Core\Type\IntegerType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.language" class="Symfony\Component\Form\Extension\Core\Type\LanguageType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.locale" class="Symfony\Component\Form\Extension\Core\Type\LocaleType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.money" class="Symfony\Component\Form\Extension\Core\Type\MoneyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.number" class="Symfony\Component\Form\Extension\Core\Type\NumberType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.password" class="Symfony\Component\Form\Extension\Core\Type\PasswordType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.percent" class="Symfony\Component\Form\Extension\Core\Type\PercentType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.radio" class="Symfony\Component\Form\Extension\Core\Type\RadioType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.range" class="Symfony\Component\Form\Extension\Core\Type\RangeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.repeated" class="Symfony\Component\Form\Extension\Core\Type\RepeatedType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.search" class="Symfony\Component\Form\Extension\Core\Type\SearchType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.textarea" class="Symfony\Component\Form\Extension\Core\Type\TextareaType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.text" class="Symfony\Component\Form\Extension\Core\Type\TextType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.time" class="Symfony\Component\Form\Extension\Core\Type\TimeType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.timezone" class="Symfony\Component\Form\Extension\Core\Type\TimezoneType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.url" class="Symfony\Component\Form\Extension\Core\Type\UrlType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.button" class="Symfony\Component\Form\Extension\Core\Type\ButtonType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.submit" class="Symfony\Component\Form\Extension\Core\Type\SubmitType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.reset" class="Symfony\Component\Form\Extension\Core\Type\ResetType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type.currency" class="Symfony\Component\Form\Extension\Core\Type\CurrencyType">
      <deprecated>The "%service_id%" service is deprecated since Symfony 3.1 and will be removed in 4.0.</deprecated>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\RepeatedType" extended-type="Symfony\Component\Form\Extension\Core\Type\RepeatedType"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="deprecated.form.registry" class="stdClass">
      <property name="registry" type="collection">
        <property type="service" id="form.type_guesser.validator"/>
        <property type="service" id="form.type.choice"/>
        <property type="service" id="form.type.form"/>
        <property type="service" id="form.type_extension.form.http_foundation"/>
        <property type="service" id="form.type_extension.form.validator"/>
        <property type="service" id="form.type_extension.repeated.validator"/>
        <property type="service" id="form.type_extension.submit.validator"/>
        <property type="service" id="form.type_extension.upload.validator"/>
      </property>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="deprecated.form.registry.csrf" class="stdClass">
      <property name="registry" type="collection">
        <property type="service" id="form.type_extension.csrf"/>
      </property>
      <deprecated>The service "%service_id%" is internal and deprecated since Symfony 3.3 and will be removed in Symfony 4.0</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="templating.engine.delegating" class="Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection"/>
    </service>
    <service id="templating.name_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="templating.filename_parser" class="Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser"/>
    <service id="templating.locator" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator" public="false">
      <argument type="service" id="file_locator"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev</argument>
    </service>
    <service id="templating.finder" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder" public="false">
      <argument type="service" id="kernel"/>
      <argument type="service" id="templating.filename_parser"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources</argument>
    </service>
    <service id="templating.cache_warmer.template_paths" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="20"/>
      <argument type="service" id="templating.finder"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.filesystem" class="Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader" public="false">
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="templating.loader.cache" class="Symfony\Component\Templating\Loader\CacheLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <argument type="service" id="templating.loader.wrapped"/>
      <argument>null</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="templating.loader.chain" class="Symfony\Component\Templating\Loader\ChainLoader" public="false">
      <tag name="monolog.logger" channel="templating"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.templating" on-invalid="ignore"/>
      </call>
    </service>
    <service id="2_12ad0d0313c449277c44f8a46988c68527bd3c81b15d28890db470f3e37dc95c" class="Doctrine\Common\Cache\ApcCache" public="false">
      <call method="setNamespace">
        <argument></argument>
      </call>
    </service>
    <service id="1_12ad0d0313c449277c44f8a46988c68527bd3c81b15d28890db470f3e37dc95c" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator" class="Symfony\Component\Validator\Validator\ValidatorInterface">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilderInterface">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/config/validation.xml</argument>
          <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/config/validation.xml</argument>
          <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/config/validation.xml</argument>
          <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
          <argument type="service" id="fos_user.validator.initializer"/>
        </argument>
      </call>
      <call method="addXmlMapping">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle\DependencyInjection\Compiler/../../Resources/config/storage-validation/orm.xml</argument>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="1_12ad0d0313c449277c44f8a46988c68527bd3c81b15d28890db470f3e37dc95c"/>
    </service>
    <service id="validator.mapping.cache.doctrine.apc" class="Symfony\Component\Validator\Mapping\Cache\DoctrineCache" public="false">
      <argument type="service" id="2_12ad0d0313c449277c44f8a46988c68527bd3c81b15d28890db470f3e37dc95c"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id="service_locator.c636d5b8b2a3fc0aab283c6eda73cd95"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>false</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator">
      <argument type="service" id="service_locator.20ccd3ddf0f78b2202986f924e362585"/>
      <argument type="service" id="translator.selector"/>
      <argument>es</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.af.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.af.yml</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ar.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ar.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ar.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.ar.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ar.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ar.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.ar.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.ar.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.ar.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.ar.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.ar.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.ar.yml</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.az.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.az.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.az.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.az.xliff</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.bg.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.bg.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.bg.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.bg.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.bg.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.bg.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.bg.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.bg.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.bg.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.bg.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.bg.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.bg.yml</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ca.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ca.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ca.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ca.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ca.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ca.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.ca.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.ca.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.ca.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.ca.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.ca.xliff</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cs.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.cs.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.cs.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.cs.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.cs.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.cs.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.cs.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.cs.yml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.da.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.da.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.da.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.da.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.da.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.da.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.da.xliff</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.de.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.de.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.de.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.de.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.de.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\validators.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.de.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.de.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.de.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.de.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.de.yml</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.el.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.el.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.el.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.el.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.el.yml</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.en.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.en.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.en.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\validators.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.en.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/DataDogAuditBundle/translations\DataDogAuditBundle.en.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.en.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/AppBundle/translations\AppBundle.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.es.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.es.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.es.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataUserBundle/translations\SonataUserBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataMediaBundle/translations\SonataMediaBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/DataDogAuditBundle/translations\DataDogAuditBundle.es.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.es.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/GregwarCaptchaBundle/translations\GregwarCaptchaBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/AppBundle/translations\AppBundle.es.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/translations\messages.es.xliff</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.et.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.et.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.et.yml</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.eu.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.eu.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.eu.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.eu.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.eu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.eu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.eu.xliff</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fa.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fa.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fa.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fa.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fa.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.fa.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.fa.xliff</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fi.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fi.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fi.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fi.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.fi.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fi.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.fi.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.fi.xliff</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.fr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.fr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.fr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.fr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.fr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\validators.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.fr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.fr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.fr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/DataDogAuditBundle/translations\messages.fr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.fr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.fr.yml</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.gl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.gl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.gl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.gl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.gl.xliff</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.he.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.he.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.he.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.he.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.he.yml</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.hr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.hr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.hr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.hr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.hr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.hr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.hr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.hr.xliff</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hu.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hu.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.hu.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.hu.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.hu.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.hu.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.hu.xliff</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.hy.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.id.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.id.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.id.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.id.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.id.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.id.yml</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.it.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.it.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.it.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.it.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.it.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\FOSUserBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.it.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.it.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.it.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.it.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.it.yml</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ja.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ja.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ja.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ja.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ja.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.ja.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.ja.yml</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lb.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.lb.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.lb.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.lb.xliff</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lt.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lt.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lt.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lt.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.lt.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.lt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.lt.yml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.lv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.lv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.lv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.lv.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.lv.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.lv.xliff</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.mn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.nb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.nb.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.nb.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.nb.yml</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.nl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.nl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.nl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.nl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.nl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.nl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.nl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.nl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.nl.yml</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.nn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.nn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.no.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.no.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.no.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.no.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.no.xliff</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.pl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.pl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.pl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.pl.yml</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pt.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pt.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataUserBundle/translations\SonataUserBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataMediaBundle/translations\SonataMediaBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.pt.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.pt.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/AppBundle/translations\AppBundle.pt.xliff</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.pt_BR.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.pt_BR.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.pt_BR.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.pt_BR.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.pt_BR.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.pt_BR.yml</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ro.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ro.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ro.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ro.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ro.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.ro.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.ro.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.ro.yml</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.ru.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.ru.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ru.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ru.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ru.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/translations\SonataBlockBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/translations\SonataClassificationBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.ru.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.ru.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.ru.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.ru.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.ru.yml</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sk.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sk.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sk.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.sk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.sk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.sk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.sk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.sk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.sk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.sk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.sk.xliff</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/translations\SonataFormatterBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.sl.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.sl.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.sl.xliff</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Cyrl.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.sr_Cyrl.xliff</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sr_Latn.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sr_Latn.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sr_Latn.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.sr_Latn.xliff</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.sv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.sv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.sv.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.sv.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.sv.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.sv.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.sv.yml</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.th.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.th.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.th.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.th.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.th.xliff</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.tr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.tr.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.tr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.tr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.tr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.tr.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.tr.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.tr.yml</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.uk.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.uk.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.uk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.uk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/translations\SonataMediaBundle.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/translations\pagination.uk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.uk.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.uk.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.uk.yml</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.vi.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.vi.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.vi.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.vi.yml</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.zh_CN.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.zh_CN.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.zh_CN.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/translations\SonataCoreBundle.zh_CN.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/translations\SonataDatagridBundle.zh_CN.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.zh_CN.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\gregwar_captcha.zh_CN.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/translations\validators.zh_CN.yml</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Validator/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/translations\SonataUserBundle.zh_TW.xliff</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.pt_PT.xlf</argument>
          </argument>
          <argument key="ua" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Component\Security\Core/Resources/translations\security.ua.xlf</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/translations\LexikFormFilterBundle.ua.yml</argument>
          </argument>
          <argument key="ky" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.ky.xliff</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.ky.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.ky.yml</argument>
          </argument>
          <argument key="sw" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/translations\KnpPaginatorBundle.sw.xliff</argument>
          </argument>
          <argument key="bn" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.bn.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.bn.yml</argument>
          </argument>
          <argument key="bn_BD" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.bn_BD.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.bn_BD.yml</argument>
          </argument>
          <argument key="eo" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\FOSUserBundle.eo.yml</argument>
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/translations\validators.eo.yml</argument>
          </argument>
          <argument key="sv_SE" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/translations\SonataAdminBundle.sv_SE.xliff</argument>
          </argument>
          <argument key="oc" type="collection">
            <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\white-october\pagerfanta-bundle/Resources/translations\pagerfanta.oc.xliff</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>es</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.default"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader">
      <tag name="translation.loader" alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.loader" class="Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="translator.default"/>
    </service>
    <service id="translator_listener" class="Symfony\Component\HttpKernel\EventListener\TranslatorListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler">
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="sonata.block.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Bundle\FrameworkBundle\DataCollector\RequestDataCollector">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/appDevDebugProjectContainer</argument>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
    </service>
    <service id="1_db393106710b4ecca94c4b525e25dfa728fd58f52b39121a25f5e50561ecd290" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.logging"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="c66c8daa4fa4dead6a562ed2c4bdb322" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="8464c6758298cf75d30c4f689fb7886d" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>-1</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch"/>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa</argument>
      <argument>/_profiler/open?file=%%f&amp;line=%%l#line%%l</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher">
      <tag name="monolog.logger" channel="event"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="application_user.user_locale_listener"/>
          <argument>onInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.mime_type_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.format_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>34</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.param_fetcher_listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>5</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_api_doc.event_listener.request"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sonata.block.cache.handler.default"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_filter.prepare</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.filter_prepare"/>
          <argument>onFilterBuilderPrepare</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_filter.apply_filters.orm</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.apply_filter.doctrine_orm"/>
          <argument>onApplyFilterCondition</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service" id="gesdinet.jwtrefreshtoken.send_token"/>
          <argument>attachRefreshToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="application_user.locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="resolve_controller_name_subscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session.save_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="translator_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="twig.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.security.implicit_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onImplicitLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.security.interactive_login_listener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.confirmed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.authentication"/>
          <argument>authenticate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.change_password.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.create.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.delete.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.group.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.profile.edit.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.completed</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.flash"/>
          <argument>addSuccessFlash</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.registration.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.email_confirmation"/>
          <argument>onRegistrationSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.initialize</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetInitialize</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.success</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetSuccess</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>fos_user.resetting.reset.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_user.listener.resetting"/>
          <argument>onResettingResetRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.view_response_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_boolean</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterBoolean</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_checkbox</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterCheckbox</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_choice</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_date</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_date_range</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDateRange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_datetime</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDateTime</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_datetime_range</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDateTimeRange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_entity</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterEntity</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_number</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterNumber</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_number_range</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterNumberRange</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.filter_text</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterText</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.text</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterText</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.email</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.integer</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.money</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.number</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.percent</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.search</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.url</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.choice</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.entity</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterEntity</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.country</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.language</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.locale</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.timezone</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.date</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.datetime</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.birthday</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterDate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.checkbox</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_form_filter.apply.orm.radio</argument>
        <argument type="collection">
          <argument type="service" id="lexik_form_filter.get_filter.doctrine_orm"/>
          <argument>filterValue</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener"/>
          <argument>onException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="pagerfanta.convert_not_valid_current_page_to_not_found_listener"/>
          <argument>onException</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.paginate"/>
          <argument>before</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.paginate"/>
          <argument>pagination</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.sortable"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.before</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.filtration"/>
          <argument>before</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>knp_pager.pagination</argument>
        <argument type="collection">
          <argument type="service" id="knp_paginator.subscriber.sliding_pagination"/>
          <argument>pagination</argument>
        </argument>
        <argument>1</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false"/>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.service"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_dir"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sensio_framework_extra.routing.loader.annot_file"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="sonata.admin.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.controller"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Config\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader">
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="routing.resolver"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <argument type="service" id="service_container"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa/app/config/routing_dev.yml</argument>
      <argument type="collection">
        <argument key="cache_dir">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_base_class">Symfony\Component\Routing\Generator\UrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\PhpGeneratorDumper</argument>
        <argument key="generator_cache_class">appDevDebugProjectContainerUrlGenerator</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_base_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\PhpMatcherDumper</argument>
        <argument key="matcher_cache_class">appDevDebugProjectContainerUrlMatcher</argument>
        <argument key="strict_requirements">true</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="2_a1018a1411405b7c9335b357dcc816c80b6238dab7bca1febe85669e8ce04f01" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="1_a1018a1411405b7c9335b357dcc816c80b6238dab7bca1febe85669e8ce04f01" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id="1_a1018a1411405b7c9335b357dcc816c80b6238dab7bca1febe85669e8ce04f01"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="2_a1018a1411405b7c9335b357dcc816c80b6238dab7bca1febe85669e8ce04f01"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage"/>
    <service id="security.user_value_resolver" class="Symfony\Bundle\SecurityBundle\SecurityUserValueResolver" public="false">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.admin"/>
        <argument type="service" id="security.authentication.provider.anonymous.api_docs"/>
        <argument type="service" id="security.authentication.provider.dao.api_login"/>
        <argument type="service" id="security.authentication.provider.anonymous.api_login"/>
        <argument type="service" id="security.authentication.provider.anonymous.api_token_refresh"/>
        <argument type="service" id="security.authentication.provider.jwt.api"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.rememberme.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>Symfony\Component\Security\Core\Authentication\Token\AnonymousToken</argument>
      <argument>Symfony\Component\Security\Core\Authentication\Token\RememberMeToken</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="AppBundle\Entity\User\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\BCryptPasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>13</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false"/>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy">
      <argument type="collection">
        <argument key="SONATA" type="collection"/>
        <argument key="ROLE_AUDIT_LOGS_ADMIN" type="collection">
          <argument>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_LIST</argument>
          <argument>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_VIEW</argument>
        </argument>
        <argument key="ROLE_USER" type="collection">
          <argument>ROLE_API</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument key="ROLE_SONATA_ADMIN" type="collection">
          <argument>ROLE_SONATA_USER_ADMIN_USER_VIEW</argument>
          <argument>ROLE_SONATA_USER_ADMIN_USER_EDIT</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_AUDIT_LOGS_ADMIN</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_AUDIT_LOGS_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="ROLE_APP_USER" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_DASHBOARD_USER</argument>
        </argument>
        <argument key="ROLE_APP_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
      </argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall" class="Symfony\Bundle\SecurityBundle\EventListener\FirewallListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id="service_locator.75250e2d7ece2c6a5de6ca93ac042b71"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id="security.request_matcher.7ac43c2928bafe5e56041919eb68135d15908028f87b29ff662dd62c7dfc4828c2b84310"/>
        <argument key="security.firewall.map.context.admin" type="service" id="security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1"/>
        <argument key="security.firewall.map.context.api_docs" type="service" id="security.request_matcher.f3ac44e1614cf5ff5908eb685aac69fdb2e0fb89eced77a37757f1a693fb469818019bc6"/>
        <argument key="security.firewall.map.context.api_login" type="service" id="security.request_matcher.696d471d5730f1bcec02c3783880cea90d37764b964a7f52f71cf02d6f8bacb4f24ccd69"/>
        <argument key="security.firewall.map.context.api_token_refresh" type="service" id="security.request_matcher.bc5225be894e901e543ffcf3380500276da6125173096f94adf786461ce2e0f193452c7f"/>
        <argument key="security.firewall.map.context.api" type="service" id="security.request_matcher.83414b4f59ab53f8865b08d5074e037efbb06e57ccba58ede5e1ed417a9ddcd1b645c11b"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <call method="registerListener">
        <argument>admin</argument>
        <argument>/admin/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>user</argument>
      </call>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Security\Core\User\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.authentication.digest_entry_point" class="Symfony\Component\Security\Http\EntryPoint\DigestAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id="security.request_matcher.f314fe2c0ed118622d97411731157b2662cd7190673a853ca4bb1e8f3ceeb765b41fc0d3"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.024501895a6fe6e05d5e27748ad872bf0dff899d61f4ea617a5679e74abeb96d71ebcb02"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.c7ddd1a07912e0956324ecc705d3da82e21e726ade41991da320225b2a27e803991d3450"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.f6ef2ebb0f9879b6bc092ef37a8875049b967c194a1923beb1b86a56f9a25f38197fb3ba"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.484961c840d291a86f41040b41773df298e9c011027af0e139877b562057b0e752d0a73e"/>
        <argument type="collection">
          <argument>ROLE_USER</argument>
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.5051db92fde5d7149fc1c441a8fa0b8277c1e702c46f45f565d798961235cfa7bc5aa0eb"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.5d42dba4184b51c669b691bcb68c69181fac1345b5ed25891182587a4f35270f30b6e944"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.5fd225ddb529c5ce4d4d1517be3004cef410a9744d6864bf7dc1635b5745b7d1f4053adb"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.a505401f4dd265f870b79e979722969ca616b9bffebf03b407294dafaad7db27da4daa46"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.2e8261dcf7836fee51378fcc77af524509556edf04ffd4913ac21021b22e73104a72729e"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.d82b9dff80a693fb1be1db952db8346e4a558b09fd3389a6dc228c45638dfd795b4f2292"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.2274a6987428e36812d454da52d819e0f16602a9b9f68f42444fa1310de521acfb73b985"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
          <argument>ROLE_API</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.9a71cc6b1bf66753c247a8ae51d2778bab312f1189a80b8f2580adfdbc2d2ac72b4d06f5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id="security.request_matcher.223cdb66275ebb51dab92c8879a2e51fb628498107206b43233ee92d4b406d30db09bfce"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.digest" class="Symfony\Component\Security\Http\Firewall\DigestAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="templating.helper.logout_url" class="Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper">
      <tag name="templating.helper" alias="logout_url"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="templating.helper.security" class="Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper">
      <tag name="templating.helper" alias="security"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.7ac43c2928bafe5e56041919eb68135d15908028f87b29ff662dd62c7dfc4828c2b84310</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.request_matcher.7ac43c2928bafe5e56041919eb68135d15908028f87b29ff662dd62c7dfc4828c2b84310" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js|admin/_(wdt|profiler)|api/_(wdt|profiler))/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>admin</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.admin</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.6192eb66f667b945c5faa9068fbc96bd7724861bdcab98d92c6625b683ff302aff6d14d1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>/admin(.*)</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>user</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.logout_listener.admin" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.admin"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/admin/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.admin" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.dao.admin" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>admin</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>admin</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.admin.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/admin/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.admin" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="admin" provider="security.user.provider.concrete.fos_userbundle"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.success_handler.admin.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.admin.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/admin/login_check</argument>
        <argument key="require_previous_session">true</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.admin" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/admin/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.admin" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5da21d6fb1c1d2.71455373</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.admin" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5da21d6fb1c1d2.71455373</argument>
    </service>
    <service id="security.exception_listener.admin" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>admin</argument>
      <argument type="service" id="security.authentication.form_entry_point.admin"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.admin" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.admin"/>
        <argument type="service" id="security.authentication.listener.form.admin"/>
        <argument type="service" id="security.authentication.listener.anonymous.admin"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.admin"/>
      <argument type="service" id="security.firewall.map.config.admin"/>
    </service>
    <service id="security.firewall.map.config.api_docs" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api_docs</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.f3ac44e1614cf5ff5908eb685aac69fdb2e0fb89eced77a37757f1a693fb469818019bc6</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>api_docs</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.f3ac44e1614cf5ff5908eb685aac69fdb2e0fb89eced77a37757f1a693fb469818019bc6" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_doc</argument>
    </service>
    <service id="security.context_listener.1" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>api_docs</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.authentication.listener.anonymous.api_docs" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5da21d6fb1c1d2.71455373</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api_docs" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5da21d6fb1c1d2.71455373</argument>
    </service>
    <service id="security.exception_listener.api_docs" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api_docs</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.api_docs" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.1"/>
        <argument type="service" id="security.authentication.listener.anonymous.api_docs"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api_docs"/>
      <argument type="service" id="security.firewall.map.config.api_docs"/>
    </service>
    <service id="security.firewall.map.config.api_login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api_login</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.696d471d5730f1bcec02c3783880cea90d37764b964a7f52f71cf02d6f8bacb4f24ccd69</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>null</argument>
      <argument>security.authentication.form_entry_point.api_login</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.696d471d5730f1bcec02c3783880cea90d37764b964a7f52f71cf02d6f8bacb4f24ccd69" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_login_check</argument>
    </service>
    <service id="security.authentication.provider.dao.api_login" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>api_login</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.api_login.form_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="collection">
        <argument key="always_use_default_target_path">false</argument>
        <argument key="default_target_path">/</argument>
        <argument key="login_path">/login</argument>
        <argument key="target_path_parameter">_target_path</argument>
        <argument key="use_referer">false</argument>
      </argument>
      <argument>api_login</argument>
    </service>
    <service id="security.authentication.failure_handler.api_login.form_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="collection">
        <argument key="login_path">/login</argument>
        <argument key="failure_path">null</argument>
        <argument key="failure_forward">false</argument>
        <argument key="failure_path_parameter">_failure_path</argument>
      </argument>
    </service>
    <service id="security.authentication.listener.form.api_login" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api_login" provider="fos_user.user_provider.username"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api_login</argument>
      <argument type="service" id="security.authentication.success_handler.api_login.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.api_login.form_login"/>
      <argument type="collection">
        <argument key="check_path">/api/_login_check</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">username</argument>
        <argument key="password_parameter">password</argument>
        <argument key="use_forward">false</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>null</argument>
    </service>
    <service id="security.authentication.form_entry_point.api_login" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.api_login" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5da21d6fb1c1d2.71455373</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api_login" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5da21d6fb1c1d2.71455373</argument>
    </service>
    <service id="security.exception_listener.api_login" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api_login</argument>
      <argument type="service" id="security.authentication.form_entry_point.api_login"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api_login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.form.api_login"/>
        <argument type="service" id="security.authentication.listener.anonymous.api_login"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api_login"/>
      <argument type="service" id="security.firewall.map.config.api_login"/>
    </service>
    <service id="security.firewall.map.config.api_token_refresh" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api_token_refresh</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.bc5225be894e901e543ffcf3380500276da6125173096f94adf786461ce2e0f193452c7f</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.bc5225be894e901e543ffcf3380500276da6125173096f94adf786461ce2e0f193452c7f" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_token/refresh</argument>
    </service>
    <service id="security.authentication.listener.anonymous.api_token_refresh" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5da21d6fb1c1d2.71455373</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api_token_refresh" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5da21d6fb1c1d2.71455373</argument>
    </service>
    <service id="security.exception_listener.api_token_refresh" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api_token_refresh</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api_token_refresh" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.anonymous.api_token_refresh"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api_token_refresh"/>
      <argument type="service" id="security.firewall.map.config.api_token_refresh"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.83414b4f59ab53f8865b08d5074e037efbb06e57ccba58ede5e1ed417a9ddcd1b645c11b</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>null</argument>
      <argument>lexik_jwt_authentication.security.authentication.entry_point.api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>lexik_jwt</argument>
      </argument>
    </service>
    <service id="security.request_matcher.83414b4f59ab53f8865b08d5074e037efbb06e57ccba58ede5e1ed417a9ddcd1b645c11b" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.authentication.provider.jwt.api" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="security.authentication.listener.jwt.api" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="collection">
        <argument key="authorization_header" type="collection">
          <argument key="enabled">true</argument>
          <argument key="prefix">Bearer</argument>
          <argument key="name">Authorization</argument>
        </argument>
        <argument key="cookie" type="collection">
          <argument key="enabled">false</argument>
          <argument key="name">BEARER</argument>
        </argument>
        <argument key="query_parameter" type="collection">
          <argument key="enabled">false</argument>
          <argument key="name">bearer</argument>
        </argument>
        <argument key="throw_exceptions">false</argument>
        <argument key="create_entry_point">true</argument>
        <argument key="authentication_provider">lexik_jwt_authentication.security.authentication.provider</argument>
        <argument key="authentication_listener">lexik_jwt_authentication.security.authentication.listener</argument>
      </argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="addTokenExtractor">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor.api"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point.api" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint" public="false">
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor.api" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="lexik_jwt_authentication.security.authentication.entry_point.api"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.jwt.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>fos_user.user_provider.username</argument>
      <argument>user</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>logout</argument>
        <argument>form_login</argument>
        <argument>remember_me</argument>
        <argument>anonymous</argument>
      </argument>
    </service>
    <service id="security.request_matcher.7cfa9b08003afaadb4ea3bcbe010a26276dbfcad3be257643ceb6b25a29b80166d7d63fd" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>.*</argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="fos_user.user_provider.username"/>
      <argument type="service" id="security.user_checker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
          <argument key="use_referer">false</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">/login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.fos_userbundle"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="use_forward">false</argument>
        <argument key="check_path">/login_check</argument>
        <argument key="require_previous_session">true</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <call method="setRememberMeServices">
        <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      </call>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>/login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.provider.rememberme.main" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false">
      <argument type="service" id="security.user_checker"/>
      <argument>692cd6b4574faf02145126fe2f31c3fdbf88a5fc</argument>
      <argument>main</argument>
    </service>
    <service id="security.authentication.rememberme.services.simplehash.main" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false">
      <argument type="collection">
        <argument type="service" id="fos_user.user_provider.username"/>
      </argument>
      <argument>692cd6b4574faf02145126fe2f31c3fdbf88a5fc</argument>
      <argument>main</argument>
      <argument type="collection">
        <argument key="lifetime">86400</argument>
        <argument key="path">/</argument>
        <argument key="name">REMEMBERME</argument>
        <argument key="domain">null</argument>
        <argument key="secure">false</argument>
        <argument key="httponly">true</argument>
        <argument key="always_remember_me">false</argument>
        <argument key="remember_me_parameter">_remember_me</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.rememberme.main" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>true</argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument>5da21d6fb1c1d2.71455373</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>5da21d6fb1c1d2.71455373</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext">
      <argument type="collection">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.logout_listener.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.rememberme.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id="service_locator.75250e2d7ece2c6a5de6ca93ac042b71" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.admin" type="service" id="security.firewall.map.context.admin"/>
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.api_docs" type="service" id="security.firewall.map.context.api_docs"/>
        <argument key="security.firewall.map.context.api_login" type="service" id="security.firewall.map.context.api_login"/>
        <argument key="security.firewall.map.context.api_token_refresh" type="service" id="security.firewall.map.context.api_token_refresh"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id="security.console.user_password_encoder_command" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>AppBundle\Entity\User\User</argument>
      </argument>
    </service>
    <service id="security.request_matcher.f314fe2c0ed118622d97411731157b2662cd7190673a853ca4bb1e8f3ceeb765b41fc0d3" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login$</argument>
    </service>
    <service id="security.request_matcher.024501895a6fe6e05d5e27748ad872bf0dff899d61f4ea617a5679e74abeb96d71ebcb02" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/logout$</argument>
    </service>
    <service id="security.request_matcher.c7ddd1a07912e0956324ecc705d3da82e21e726ade41991da320225b2a27e803991d3450" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/login-check$</argument>
    </service>
    <service id="security.request_matcher.f6ef2ebb0f9879b6bc092ef37a8875049b967c194a1923beb1b86a56f9a25f38197fb3ba" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/user/resetting</argument>
    </service>
    <service id="security.request_matcher.484961c840d291a86f41040b41773df298e9c011027af0e139877b562057b0e752d0a73e" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin/</argument>
    </service>
    <service id="security.request_matcher.5051db92fde5d7149fc1c441a8fa0b8277c1e702c46f45f565d798961235cfa7bc5aa0eb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/user/profile/</argument>
    </service>
    <service id="security.request_matcher.5d42dba4184b51c669b691bcb68c69181fac1345b5ed25891182587a4f35270f30b6e944" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/resetting</argument>
    </service>
    <service id="security.request_matcher.5fd225ddb529c5ce4d4d1517be3004cef410a9744d6864bf7dc1635b5745b7d1f4053adb" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/register</argument>
    </service>
    <service id="security.request_matcher.a505401f4dd265f870b79e979722969ca616b9bffebf03b407294dafaad7db27da4daa46" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_doc</argument>
    </service>
    <service id="security.request_matcher.2e8261dcf7836fee51378fcc77af524509556edf04ffd4913ac21021b22e73104a72729e" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_login</argument>
    </service>
    <service id="security.request_matcher.d82b9dff80a693fb1be1db952db8346e4a558b09fd3389a6dc228c45638dfd795b4f2292" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/_token/refresh</argument>
    </service>
    <service id="security.request_matcher.2274a6987428e36812d454da52d819e0f16602a9b9f68f42444fa1310de521acfb73b985" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api.*</argument>
    </service>
    <service id="security.request_matcher.9a71cc6b1bf66753c247a8ae51d2778bab312f1189a80b8f2580adfdbc2d2ac72b4d06f5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/.*</argument>
    </service>
    <service id="security.request_matcher.223cdb66275ebb51dab92c8879a2e51fb628498107206b43233ee92d4b406d30db09bfce" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="twig" class="Twig\Environment">
      <argument type="service" id="twig.loader.filesystem"/>
      <argument type="collection">
        <argument key="paths" type="collection">
          <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views">null</argument>
        </argument>
        <argument key="base_template_class">Sonata\CacheBundle\Twig\TwigTemplate14</argument>
        <argument key="form_themes" type="collection">
          <argument>form_div_layout.html.twig</argument>
          <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
          <argument>@SonataCore/Form/datepicker.html.twig</argument>
        </argument>
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="exception_controller">FOS\RestBundle\Controller\ExceptionController::showAction</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
        <argument key="date" type="collection">
          <argument key="format">F j, Y H:i</argument>
          <argument key="interval_format">%d days</argument>
          <argument key="timezone">null</argument>
        </argument>
        <argument key="number_format" type="collection">
          <argument key="decimals">0</argument>
          <argument key="decimal_point">.</argument>
          <argument key="thousands_separator">,</argument>
        </argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.audit.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_menu.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.exercise.twig"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="knp_paginator.twig.extension.pagination"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.media.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="ivory_ck_editor.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.templates.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="hateoas.twig.link"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_api_doc.twig.extension.extra_markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.flashmessage.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.wrapping"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.extension.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.status_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.deprecated_template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.core.twig.template_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.intl.twig.extension.locale"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.intl.twig.extension.number"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.intl.twig.extension.datetime"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.text.twig"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.block.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="mopa_bootstrap.twig.extension.bootstrap_form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="mopa_bootstrap.twig.extension.bootstrap_icon"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="mopa_bootstrap.twig.extension.bootstrap_flash"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="liip_imagine.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.pagerfanta"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin_short_title</argument>
        <argument>SIUNIC</argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin_skin</argument>
        <argument>skin-purple</argument>
      </call>
      <call method="addGlobal">
        <argument>app_kernel_root_dir</argument>
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
      </call>
      <call method="addGlobal">
        <argument>app_kernel_web_dir</argument>
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</argument>
      </call>
      <call method="addGlobal">
        <argument>webapp_logo</argument>
        <argument>logo_etecsa.jpg</argument>
      </call>
      <call method="addGlobal">
        <argument>webapp_short_title</argument>
        <argument>SIUNIC</argument>
      </call>
      <call method="addGlobal">
        <argument>webapp_title</argument>
        <argument>Sistema Unificado de Cliente Único</argument>
      </call>
      <call method="addGlobal">
        <argument>sonata_user</argument>
        <argument type="service" id="sonata.user.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_media</argument>
        <argument type="service" id="sonata.media.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_admin</argument>
        <argument type="service" id="sonata.admin.twig.global"/>
      </call>
      <call method="addGlobal">
        <argument>sonata_block</argument>
        <argument type="service" id="sonata.block.twig.global"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.service_subscriber.locator" id="service_locator.26ac001b3ede28481ac0de703666b4d7"/>
      <argument type="service" id="service_locator.26ac001b3ede28481ac0de703666b4d7"/>
      <argument type="service" id="templating.finder" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views">null</argument>
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
      <argument type="collection">
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views">null</argument>
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form">null</argument>
      </argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <argument type="collection"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa</argument>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu-bundle\src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/views</argument>
        <argument>KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/FOSUserBundle/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataUserBundle/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataMediaBundle/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\egeloen\ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataDoctrineORMAdminBundle/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\doctrine-orm-admin-bundle\src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/NelmioApiDocBundle/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\nelmio\api-doc-bundle\Nelmio\ApiDocBundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\intl-bundle\src/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/views</argument>
        <argument>SonataClassification</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/views</argument>
        <argument>SonataDatagrid</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/views</argument>
        <argument>MopaBootstrap</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/views</argument>
        <argument>LexikFormFilter</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\liip\imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/GregwarCaptchaBundle/views</argument>
        <argument>GregwarCaptcha</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/views</argument>
        <argument>GregwarCaptcha</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/AppBundle/views</argument>
        <argument>App</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>FOS\RestBundle\Controller\ExceptionController::showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController">
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController">
      <argument type="service" id="http_kernel"/>
      <argument>FOS\RestBundle\Controller\ExceptionController::showAction</argument>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id="service_locator.1ecb5190ba61ab773cdad8cb2cc65478"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument type="collection">
        <argument>@IvoryCKEditor/Form/ckeditor_widget.html.twig</argument>
        <argument>GregwarCaptchaBundle::captcha.html.twig</argument>
        <argument>form_div_layout.html.twig</argument>
        <argument>@MopaBootstrap/Form/fields.html.twig</argument>
        <argument>SonataMediaBundle:Form:media_widgets.html.twig</argument>
        <argument>@SonataCore/Form/datepicker.html.twig</argument>
        <argument>SonataUserBundle:Form:form_admin_fields.html.twig</argument>
        <argument>LiipImagineBundle:Form:form_div_layout.html.twig</argument>
      </argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Bridge\Twig\Form\TwigRenderer">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.loader.filesystem" class="Symfony\Bundle\TwigBundle\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="service" id="templating.locator"/>
      <argument type="service" id="templating.name_parser"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa</argument>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu\src\Knp\Menu/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\FrameworkBundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\SecurityBundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\TwigBundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-menu-bundle\src/Resources/views</argument>
        <argument>KnpMenu</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\knplabs\knp-paginator-bundle/Resources/views</argument>
        <argument>KnpPaginator</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/FOSUserBundle/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle/Resources/views</argument>
        <argument>FOSUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataUserBundle/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/views</argument>
        <argument>SonataUser</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataMediaBundle/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/views</argument>
        <argument>SonataMedia</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\egeloen\ckeditor-bundle/Resources/views</argument>
        <argument>IvoryCKEditor</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataAdminBundle/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\admin-bundle\src/Resources/views</argument>
        <argument>SonataAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/SonataDoctrineORMAdminBundle/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\doctrine-orm-admin-bundle\src/Resources/views</argument>
        <argument>SonataDoctrineORMAdmin</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/NelmioApiDocBundle/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\nelmio\api-doc-bundle\Nelmio\ApiDocBundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\core-bundle\src/Resources/views</argument>
        <argument>SonataCore</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\intl-bundle\src/Resources/views</argument>
        <argument>SonataIntl</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\formatter-bundle\src/Resources/views</argument>
        <argument>SonataFormatter</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/views</argument>
        <argument>SonataBlock</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/views</argument>
        <argument>SonataClassification</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/views</argument>
        <argument>SonataDatagrid</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\mopa\bootstrap-bundle\Mopa\Bundle\BootstrapBundle/Resources/views</argument>
        <argument>MopaBootstrap</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\lexik\form-filter-bundle/Resources/views</argument>
        <argument>LexikFormFilter</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\liip\imagine-bundle/Resources/views</argument>
        <argument>LiipImagine</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/GregwarCaptchaBundle/views</argument>
        <argument>GregwarCaptcha</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle/Resources/views</argument>
        <argument>GregwarCaptcha</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/AppBundle/views</argument>
        <argument>App</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\DebugBundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bundle\WebProfilerBundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/Resources/views</argument>
      </call>
      <call method="addPath">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\symfony\symfony\src\Symfony\Bridge\Twig/Resources/views/Form</argument>
      </call>
    </service>
    <service id="templating.engine.twig" class="Symfony\Bundle\TwigBundle\TwigEngine" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="templating.name_parser"/>
      <argument type="service" id="templating.locator"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\logs/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
    </service>
    <service id="monolog.handler.server_log" class="Symfony\Bridge\Monolog\Handler\ServerLogHandler">
      <argument>127.0.0.1:9911</argument>
      <argument>100</argument>
      <argument>true</argument>
    </service>
    <service id="3_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id="2_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id="1_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" abstract="true">
      <argument type="service" id="swiftmailer.transport"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.mail.abstract" class="Swift_Transport_MailTransport" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.mailinvoker"/>
    </service>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.mailinvoker" class="Swift_Transport_SimpleMailInvoker" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id="1_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
        <argument type="service" id="2_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
        <argument type="service" id="3_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../data/swiftmailer/spool</argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.authhandler" class="Swift_Transport_Esmtp_AuthHandler" public="false">
      <argument type="collection">
        <argument type="service" id="1_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
        <argument type="service" id="2_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
        <argument type="service" id="3_e8e44578d6fe2f230733eec4ece5f6aab48fbadfac8ed4ef908635e7972c11df"/>
      </argument>
      <call method="setUsername">
        <argument>service@symfony.com</argument>
      </call>
      <call method="setPassword">
        <argument>service</argument>
      </call>
      <call method="setAuthMode">
        <argument>null</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.buffer" class="Swift_Transport_StreamBuffer" public="false">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.configurator.default" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false">
      <argument>null</argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
    </service>
    <service id="swiftmailer.mailer.default.transport.smtp" class="Swift_Transport_EsmtpTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.buffer"/>
      <argument type="collection">
        <argument type="service" id="swiftmailer.mailer.default.transport.authhandler"/>
      </argument>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <call method="setHost">
        <argument>127.0.0.1</argument>
      </call>
      <call method="setPort">
        <argument>25</argument>
      </call>
      <call method="setEncryption">
        <argument>null</argument>
      </call>
      <call method="setTimeout">
        <argument>30</argument>
      </call>
      <call method="setSourceIp">
        <argument>null</argument>
      </call>
      <configurator service="swiftmailer.transport.configurator.default" method="configure"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection">
        <argument key="json" type="collection">
          <argument key="class">Sonata\Doctrine\Types\JsonType</argument>
          <argument key="commented">true</argument>
        </argument>
      </argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="default">doctrine.dbal.default_connection</argument>
      </argument>
      <argument type="collection">
        <argument key="default">doctrine.orm.default_entity_manager</argument>
      </argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
    </service>
    <service id="doctrine.generate_entities_command" class="Doctrine\Bundle\DoctrineBundle\Command\GenerateEntitiesDoctrineCommand">
      <tag name="console.command" command="doctrine:generate:entities"/>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id="service_container"/>
      <call method="addEventSubscriber">
        <argument type="service" id="datadog.event_subscriber.audit"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.easy_extends.doctrine.mapper"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="fos_user.user_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="sonata.media.doctrine.event_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="doctrine.orm.listeners.resolve_target_entity"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">127.0.0.1</argument>
        <argument key="port">null</argument>
        <argument key="dbname">siunic_etecsa</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="charset">UTF8</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id="service_locator.6f24348b77840ec12a20c22a3f985cf7"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <call method="addResolveTargetEntity">
        <argument>Sonata\MediaBundle\Entity\BaseMedia</argument>
        <argument>AppBundle\Entity\Media\Media</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Sonata\UserBundle\Entity\BaseUser</argument>
        <argument>AppBundle\Entity\Security\User</argument>
        <argument type="collection"/>
      </call>
      <call method="addResolveTargetEntity">
        <argument>Sonata\UserBundle\Entity\BaseGroup</argument>
        <argument>AppBundle\Entity\Security\Group</argument>
        <argument type="collection"/>
      </call>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="SonataMediaBundle">Sonata\MediaBundle\Entity</argument>
          <argument key="SonataUserBundle">Sonata\UserBundle\Entity</argument>
          <argument key="SonataClassificationBundle">Sonata\ClassificationBundle\Entity</argument>
          <argument key="DataDogAuditBundle">DataDog\AuditBundle\Entity</argument>
          <argument key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
          <argument key="AppBundle">AppBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_xml_metadata_driver" class="Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver" public="false">
      <argument type="collection">
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src\Resources\config\doctrine">Sonata\MediaBundle\Entity</argument>
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle\Resources\config\doctrine">Sonata\UserBundle\Entity</argument>
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src\Resources\config\doctrine">Sonata\ClassificationBundle\Entity</argument>
        <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\data-dog\audit-bundle\src\DataDog\AuditBundle\Resources\config\doctrine">DataDog\AuditBundle\Entity</argument>
      </argument>
      <call method="setGlobalBasename">
        <argument>mapping</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gesdinet\jwt-refresh-token-bundle\Entity</argument>
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\src\AppBundle\Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Common\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\MediaBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\UserBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>Sonata\ClassificationBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_xml_metadata_driver"/>
        <argument>DataDog\AuditBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>AppBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Common\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\friendsofsymfony\user-bundle\Resources\config\doctrine-mapping">FOS\UserBundle\Model</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>FOS\UserBundle\Model</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_metadata_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_e5247b5c21e6481cb5d327147f103603570b54b7f667aabe023e9aa946556b58</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_result_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_e5247b5c21e6481cb5d327147f103603570b54b7f667aabe023e9aa946556b58</argument>
      </call>
    </service>
    <service id="doctrine_cache.providers.doctrine.orm.default_query_cache" class="Doctrine\Common\Cache\ArrayCache">
      <call method="setNamespace">
        <argument>sf_orm_default_e5247b5c21e6481cb5d327147f103603570b54b7f667aabe023e9aa946556b58</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerAwareEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.metadata_factory" class="Doctrine\Common\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager.metadata_factory"/>
    </service>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_class" class="Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_dir" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.routing.loader.annot_file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="sensio_framework_extra.routing.loader.annot_class"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.datetime"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sensio_framework_extra.converter.datetime" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <argument>null</argument>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage" public="false"/>
    <service id="jms_aop.pointcut_container" class="JMS\AopBundle\Aop\PointcutContainer"/>
    <service id="jms_aop.interceptor_loader" class="JMS\AopBundle\Aop\InterceptorLoader">
      <argument type="service" id="service_container"/>
    </service>
    <service id="security.access.run_as_manager" class="JMS\SecurityExtraBundle\Security\Authorization\RunAsManager" public="false">
      <argument>RunAsToken</argument>
      <argument>ROLE_</argument>
    </service>
    <service id="security.access.method_interceptor" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\MethodSecurityInterceptor">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access.after_invocation_manager"/>
      <argument type="service" id="security.access.run_as_manager"/>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access.pointcut" class="JMS\SecurityExtraBundle\Security\Authorization\Interception\SecurityPointcut">
      <tag name="jms_aop.pointcut" interceptor="security.access.method_interceptor"/>
      <argument type="service" id="security.extra.metadata_factory"/>
      <argument>false</argument>
      <argument type="collection"/>
      <call method="setSecuredClasses">
        <argument type="collection"/>
      </call>
    </service>
    <service id="security.access.after_invocation_manager" class="JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AfterInvocationManager" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.access.after_invocation.acl_provider" class="JMS\SecurityExtraBundle\Security\Authorization\AfterInvocation\AclAfterInvocationProvider" public="false">
      <tag name="security.after_invocation.provider"/>
      <argument type="service" id="security.acl.provider"/>
      <argument type="service" id="security.acl.object_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.security_identity_retrieval_strategy"/>
      <argument type="service" id="security.acl.permission.map"/>
    </service>
    <service id="security.extra.iddqd_voter" class="JMS\SecurityExtraBundle\Security\Authorization\Voter\IddqdVoter" public="false">
      <argument type="collection"/>
      <argument type="collection">
        <argument>ROLE_PREVIOUS_ADMIN</argument>
      </argument>
    </service>
    <service id="security.extra.driver_chain" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="security.extra.annotation_driver"/>
      </argument>
    </service>
    <service id="security.extra.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>security.extra.metadata_driver</argument>
    </service>
    <service id="security.extra.annotation_driver" class="JMS\SecurityExtraBundle\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="security.extra.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/jms_security</argument>
      <argument>true</argument>
    </service>
    <service id="security.extra.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="security.extra.lazy_loading_driver"/>
      <call method="setCache">
        <argument type="service" id="security.extra.file_cache"/>
      </call>
      <call method="setIncludeInterfaces">
        <argument>true</argument>
      </call>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
    </service>
    <service id="knp_menu.factory" class="Knp\Menu\MenuFactory">
      <call method="addExtension">
        <argument type="service" id="knp_menu.factory_extension.routing"/>
        <argument>0</argument>
      </call>
    </service>
    <service id="knp_menu.factory_extension.routing" class="Knp\Menu\Integration\Symfony\RoutingExtension" public="false">
      <tag name="knp_menu.factory_extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="knp_menu.helper" class="Knp\Menu\Twig\Helper" public="false">
      <argument type="service" id="knp_menu.renderer_provider"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="knp_menu.manipulator"/>
      <argument type="service" id="knp_menu.matcher"/>
    </service>
    <service id="knp_menu.matcher" class="Knp\Menu\Matcher\Matcher">
      <argument type="iterator">
        <argument type="service" id="knp_menu.voter.router"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.admin"/>
        <argument type="service" id="sonata.admin.menu.matcher.voter.active"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.chain" class="Knp\Menu\Provider\ChainProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="knp_menu.menu_provider.lazy"/>
        <argument type="service" id="knp_menu.menu_provider.builder_alias"/>
        <argument type="service" id="sonata.admin.menu.group_provider"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.lazy" class="Knp\Menu\Provider\LazyProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="collection">
        <argument key="sonata_admin_sidebar" type="service" id="sonata.admin.sidebar_menu"/>
      </argument>
    </service>
    <service id="knp_menu.menu_provider.builder_alias" class="Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="knp_menu.factory"/>
    </service>
    <service id="knp_menu.renderer_provider" class="Knp\Menu\Renderer\PsrProvider">
      <argument type="service" id="service_locator.e29cefb79ad8454e4f2f441657799a44"/>
      <argument>twig</argument>
    </service>
    <service id="knp_menu.renderer.list" class="Knp\Menu\Renderer\ListRenderer">
      <tag name="knp_menu.renderer" alias="list"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
      <argument>UTF-8</argument>
    </service>
    <service id="knp_menu.voter.router" class="Knp\Menu\Matcher\Voter\RouteVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="knp_menu.manipulator" class="Knp\Menu\Util\MenuManipulator" public="false"/>
    <service id="knp_menu.twig.extension" class="Knp\Menu\Twig\MenuExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_menu.helper"/>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="service" id="knp_menu.manipulator"/>
    </service>
    <service id="knp_menu.renderer.twig" class="Knp\Menu\Renderer\TwigRenderer">
      <tag name="knp_menu.renderer" alias="twig"/>
      <argument type="service" id="twig"/>
      <argument>@KnpMenu/menu.html.twig</argument>
      <argument type="service" id="knp_menu.matcher"/>
      <argument type="collection"/>
    </service>
    <service id="markdown.parser.min" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Min" public="false">
      <tag name="markdown.parser" alias="min"/>
    </service>
    <service id="markdown.parser.light" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Light" public="false">
      <tag name="markdown.parser" alias="light"/>
    </service>
    <service id="markdown.parser.medium" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Medium" public="false">
      <tag name="markdown.parser" alias="medium"/>
    </service>
    <service id="markdown.parser.max" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Max" public="false">
      <tag name="markdown.parser" alias="max"/>
    </service>
    <service id="markdown.parser.flavored" class="Knp\Bundle\MarkdownBundle\Parser\Preset\Flavored" public="false">
      <tag name="markdown.parser" alias="flavored"/>
    </service>
    <service id="markdown.parser.parser_manager" class="Knp\Bundle\MarkdownBundle\Parser\ParserManager" public="false">
      <call method="addParser">
        <argument type="service" id="markdown.parser.min"/>
        <argument>min</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser.light"/>
        <argument>light</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser.medium"/>
        <argument>medium</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser.max"/>
        <argument>default</argument>
      </call>
      <call method="addParser">
        <argument type="service" id="markdown.parser.flavored"/>
        <argument>flavored</argument>
      </call>
    </service>
    <service id="templating.helper.markdown" class="Knp\Bundle\MarkdownBundle\Helper\MarkdownHelper">
      <tag name="templating.helper" alias="markdown"/>
      <argument type="service" id="markdown.parser.parser_manager"/>
    </service>
    <service id="twig.extension.exercise.twig" class="Knp\Bundle\MarkdownBundle\Twig\Extension\MarkdownTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="markdown.parser.parser_manager"/>
    </service>
    <service id="knp_paginator" class="Knp\Component\Pager\Paginator" lazy="true">
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setDefaultPaginatorOptions">
        <argument type="collection">
          <argument key="pageParameterName">page</argument>
          <argument key="sortFieldParameterName">sort</argument>
          <argument key="sortDirectionParameterName">direction</argument>
          <argument key="filterFieldParameterName">filterField</argument>
          <argument key="filterValueParameterName">filterValue</argument>
          <argument key="distinct">true</argument>
        </argument>
      </call>
    </service>
    <service id="knp_paginator.subscriber.paginate" class="Knp\Component\Pager\Event\Subscriber\Paginate\PaginationSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sortable" class="Knp\Component\Pager\Event\Subscriber\Sortable\SortableSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.filtration" class="Knp\Component\Pager\Event\Subscriber\Filtration\FiltrationSubscriber">
      <tag name="knp_paginator.subscriber"/>
    </service>
    <service id="knp_paginator.subscriber.sliding_pagination" class="Knp\Bundle\PaginatorBundle\Subscriber\SlidingPaginationSubscriber">
      <tag name="knp_paginator.subscriber"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="collection">
        <argument key="defaultPaginationTemplate">MopaBootstrapBundle:Pagination:sliding.html.twig</argument>
        <argument key="defaultSortableTemplate">@KnpPaginator/Pagination/sortable_link.html.twig</argument>
        <argument key="defaultFiltrationTemplate">@KnpPaginator/Pagination/filtration.html.twig</argument>
        <argument key="defaultPageRange">5</argument>
      </argument>
    </service>
    <service id="knp_paginator.helper.processor" class="Knp\Bundle\PaginatorBundle\Helper\Processor">
      <argument type="service" id="router.default"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="knp_paginator.twig.extension.pagination" class="Knp\Bundle\PaginatorBundle\Twig\Extension\PaginationExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="knp_paginator.helper.processor"/>
    </service>
    <service id="fos_user.user_manager.default" class="FOS\UserBundle\Doctrine\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="fos_user.object_manager" class="Doctrine\Common\Persistence\ObjectManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="fos_user.user_listener" class="FOS\UserBundle\Doctrine\UserListener" public="false">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.validator.initializer" class="FOS\UserBundle\Validator\Initializer" public="false">
      <tag name="validator.initializer"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
    </service>
    <service id="fos_user.security.interactive_login_listener" class="FOS\UserBundle\EventListener\LastLoginListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.security.login_manager" class="FOS\UserBundle\Security\LoginManager">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="security.authentication.rememberme.services.simplehash.main"/>
    </service>
    <service id="fos_user.user_provider.username" class="FOS\UserBundle\Security\UserProvider" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.user_provider.username_email" class="FOS\UserBundle\Security\EmailUserProvider" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.security.controller" class="FOS\UserBundle\Controller\SecurityController">
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.util.canonicalizer.default" class="FOS\UserBundle\Util\Canonicalizer" public="false"/>
    <service id="fos_user.util.user_manipulator" class="FOS\UserBundle\Util\UserManipulator">
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="fos_user.util.token_generator.default" class="FOS\UserBundle\Util\TokenGenerator" public="false"/>
    <service id="fos_user.util.password_updater" class="FOS\UserBundle\Util\PasswordUpdater" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="fos_user.util.canonical_fields_updater" class="FOS\UserBundle\Util\CanonicalFieldsUpdater" public="false">
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
      <argument type="service" id="fos_user.util.canonicalizer.default"/>
    </service>
    <service id="fos_user.mailer.default" class="FOS\UserBundle\Mailer\Mailer" public="false">
      <tag name="fos_user.requires_swift"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="collection">
        <argument key="confirmation.template">@FOSUser/Registration/email.txt.twig</argument>
        <argument key="resetting.template">@FOSUser/Resetting/email.txt.twig</argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="no-reply@symfony.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="no-reply@symfony.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.twig_swift" class="FOS\UserBundle\Mailer\TwigSwiftMailer" public="false">
      <tag name="fos_user.requires_swift"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="template" type="collection">
          <argument key="confirmation">@FOSUser/Registration/email.txt.twig</argument>
          <argument key="resetting">@FOSUser/Resetting/email.txt.twig</argument>
        </argument>
        <argument key="from_email" type="collection">
          <argument key="confirmation" type="collection">
            <argument key="no-reply@symfony.com">webmaster</argument>
          </argument>
          <argument key="resetting" type="collection">
            <argument key="no-reply@symfony.com">webmaster</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="fos_user.mailer.noop" class="FOS\UserBundle\Mailer\NoopMailer" public="false"/>
    <service id="fos_user.listener.authentication" class="FOS\UserBundle\EventListener\AuthenticationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.security.login_manager"/>
      <argument>main</argument>
    </service>
    <service id="fos_user.command.activate_user" class="FOS\UserBundle\Command\ActivateUserCommand">
      <tag name="console.command" command="fos:user:activate"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.command.change_password" class="FOS\UserBundle\Command\ChangePasswordCommand">
      <tag name="console.command" command="fos:user:change-password"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.command.create_user" class="FOS\UserBundle\Command\CreateUserCommand">
      <tag name="console.command" command="fos:user:create"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.command.deactivate_user" class="FOS\UserBundle\Command\DeactivateUserCommand">
      <tag name="console.command" command="fos:user:deactivate"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.command.demote_user" class="FOS\UserBundle\Command\DemoteUserCommand">
      <tag name="console.command" command="fos:user:demote"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.command.promote_user" class="FOS\UserBundle\Command\PromoteUserCommand">
      <tag name="console.command" command="fos:user:promote"/>
      <argument type="service" id="fos_user.util.user_manipulator"/>
    </service>
    <service id="fos_user.listener.flash" class="FOS\UserBundle\EventListener\FlashListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="fos_user.username_form_type" class="FOS\UserBundle\Form\Type\UsernameFormType">
      <tag name="form.type" alias="fos_user_username"/>
      <argument type="service" id="fos_user.user_to_username_transformer"/>
    </service>
    <service id="fos_user.user_to_username_transformer" class="FOS\UserBundle\Form\DataTransformer\UserToUsernameTransformer" public="false">
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="fos_user.profile.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_profile_form</argument>
      <argument>AppBundle\Form\User\Type\ProfileFormType</argument>
      <argument type="collection">
        <argument>Profile</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.profile.form.type" class="FOS\UserBundle\Form\Type\ProfileFormType">
      <tag name="form.type" alias="fos_user_profile"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="fos_user.profile.controller" class="FOS\UserBundle\Controller\ProfileController">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.profile.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.registration.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_registration_form</argument>
      <argument>AppBundle\Form\User\Type\RegistrationFormType</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.registration.form.type" class="FOS\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="fos_user_registration"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="fos_user.registration.controller" class="FOS\UserBundle\Controller\RegistrationController">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.registration.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="security.token_storage"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.listener.email_confirmation" class="FOS\UserBundle\EventListener\EmailConfirmationListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_user.mailer.default"/>
      <argument type="service" id="fos_user.util.token_generator.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="session"/>
    </service>
    <service id="fos_user.change_password.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_change_password_form</argument>
      <argument>FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
      <argument type="collection">
        <argument>ChangePassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.change_password.form.type" class="FOS\UserBundle\Form\Type\ChangePasswordFormType">
      <tag name="form.type" alias="fos_user_change_password"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="fos_user.change_password.controller" class="FOS\UserBundle\Controller\ChangePasswordController">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.change_password.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.resetting.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_resetting_form</argument>
      <argument>FOS\UserBundle\Form\Type\ResettingFormType</argument>
      <argument type="collection">
        <argument>ResetPassword</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.resetting.form.type" class="FOS\UserBundle\Form\Type\ResettingFormType">
      <tag name="form.type" alias="fos_user_resetting"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="fos_user.listener.resetting" class="FOS\UserBundle\EventListener\ResettingListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="router.default"/>
      <argument>86400</argument>
    </service>
    <service id="fos_user.resetting.controller" class="FOS\UserBundle\Controller\ResettingController">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.resetting.form.factory"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="fos_user.util.token_generator.default"/>
      <argument type="service" id="fos_user.mailer.default"/>
      <argument>7200</argument>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.group.form.factory" class="FOS\UserBundle\Form\Factory\FormFactory">
      <argument type="service" id="form.factory"/>
      <argument>fos_user_group_form</argument>
      <argument>FOS\UserBundle\Form\Type\GroupFormType</argument>
      <argument type="collection">
        <argument>Registration</argument>
        <argument>Default</argument>
      </argument>
    </service>
    <service id="fos_user.group.form.type" class="FOS\UserBundle\Form\Type\GroupFormType">
      <tag name="form.type" alias="fos_user_group"/>
      <argument>AppBundle\Entity\User\Group</argument>
    </service>
    <service id="fos_user.group.controller" class="FOS\UserBundle\Controller\GroupController">
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="fos_user.group.form.factory"/>
      <argument type="service" id="sonata.user.orm.group_manager"/>
      <call method="setContainer">
        <argument type="service" id="service_container"/>
      </call>
    </service>
    <service id="fos_user.group_manager.default" class="FOS\UserBundle\Doctrine\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\User\Group</argument>
    </service>
    <service id="sonata.user.editable_role_builder" class="Sonata\UserBundle\Security\EditableRolesBuilder">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument key="SONATA" type="collection"/>
        <argument key="ROLE_AUDIT_LOGS_ADMIN" type="collection">
          <argument>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_LIST</argument>
          <argument>ROLE_DATA_DOG_AUDIT_ADMIN_AUDIT_LOG_VIEW</argument>
        </argument>
        <argument key="ROLE_USER" type="collection">
          <argument>ROLE_API</argument>
          <argument>ROLE_SONATA_ADMIN</argument>
        </argument>
        <argument key="ROLE_SONATA_ADMIN" type="collection">
          <argument>ROLE_SONATA_USER_ADMIN_USER_VIEW</argument>
          <argument>ROLE_SONATA_USER_ADMIN_USER_EDIT</argument>
        </argument>
        <argument key="ROLE_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_AUDIT_LOGS_ADMIN</argument>
        </argument>
        <argument key="ROLE_SUPER_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
          <argument>ROLE_AUDIT_LOGS_ADMIN</argument>
          <argument>ROLE_ALLOWED_TO_SWITCH</argument>
        </argument>
        <argument key="ROLE_APP_USER" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_DASHBOARD_USER</argument>
        </argument>
        <argument key="ROLE_APP_ADMIN" type="collection">
          <argument>ROLE_USER</argument>
          <argument>ROLE_ADMIN</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.user.form.type.security_roles" class="Sonata\UserBundle\Form\Type\SecurityRolesType">
      <tag name="form.type" alias="sonata_security_roles"/>
      <argument type="service" id="sonata.user.editable_role_builder"/>
    </service>
    <service id="sonata.user.admin.user" class="AppBundle\Admin\User\UserAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="users" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.user.admin.groupicon%"/>
      <argument>sonata.user.admin.user</argument>
      <argument>AppBundle\Entity\User\User</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setUserManager">
        <argument type="service" id="sonata.user.orm.user_manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>users</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.user.admin.user.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.user.admin.group" class="AppBundle\Admin\User\GroupAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.user.admin.groupname%" label="groups" label_catalogue="%sonata.user.admin.label_catalogue%" label_translator_strategy="sonata.admin.label.strategy.underscore"/>
      <argument>sonata.user.admin.group</argument>
      <argument>AppBundle\Entity\User\Group</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataUserBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>groups</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.user.admin.group.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.user.orm.user_manager" class="Sonata\UserBundle\Entity\UserManager" public="false">
      <argument type="service" id="fos_user.util.password_updater"/>
      <argument type="service" id="fos_user.util.canonical_fields_updater"/>
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="sonata.user.manager.user" class="Sonata\UserBundle\Entity\UserManagerProxy">
      <argument>AppBundle\Entity\User\User</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="sonata.user.orm.group_manager" class="Sonata\UserBundle\Entity\GroupManager" public="false">
      <argument type="service" id="fos_user.object_manager"/>
      <argument>AppBundle\Entity\User\Group</argument>
    </service>
    <service id="sonata.user.block.menu" class="Sonata\UserBundle\Block\ProfileMenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.menu</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.user.profile.menu_builder"/>
    </service>
    <service id="sonata.user.block.account" class="Sonata\UserBundle\Block\AccountBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.user.block.account</argument>
      <argument type="service" id="templating.engine.twig"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="sonata.user.profile.menu_builder" class="Sonata\UserBundle\Menu\ProfileMenuBuilder">
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument type="collection">
          <argument key="route">fos_user_profile_show</argument>
          <argument key="label">sonata_profile_title</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">fos_user_profile_edit</argument>
          <argument key="label">sonata_user_profile_breadcrumb_edit</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">fos_user_profile_edit_authentication</argument>
          <argument key="label">title_user_edit_authentication</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
        <argument type="collection">
          <argument key="route">fos_user_change_password</argument>
          <argument key="label">title_user_edit_password</argument>
          <argument key="domain">SonataUserBundle</argument>
          <argument key="route_parameters" type="collection"/>
        </argument>
      </argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.user.profile.form" class="Symfony\Component\Form\Form">
      <argument>application_sonata_user_profile_form</argument>
      <argument>application_sonata_user_profile</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Profile</argument>
          <argument>Default</argument>
        </argument>
        <argument key="translation_domain">SonataUserBundle</argument>
      </argument>
      <factory class="Symfony\Component\Form\FormFactory" method="createNamed"/>
    </service>
    <service id="sonata.user.profile.form.type" class="Sonata\UserBundle\Form\Type\ProfileType">
      <tag name="form.type" alias="sonata_user_profile"/>
      <argument>AppBundle\Entity\User\User</argument>
    </service>
    <service id="sonata.user.profile.form.handler.default" class="Sonata\UserBundle\Form\Handler\ProfileFormHandler" public="false">
      <argument type="service" id="sonata.user.profile.form"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="sonata.user.orm.user_manager"/>
    </service>
    <service id="sonata.user.form.gender_list" class="Sonata\UserBundle\Form\Type\UserGenderListType">
      <tag name="form.type" alias="sonata_user_gender"/>
      <argument>AppBundle\Entity\User\User</argument>
      <argument>getGenderList</argument>
      <argument>Sonata\UserBundle\Form\Type\UserGenderListType</argument>
    </service>
    <service id="sonata.user.registration.form" class="Symfony\Component\Form\Form">
      <argument>sonata_user_registration_form</argument>
      <argument>sonata_user_registration</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument key="validation_groups" type="collection">
          <argument>Registration</argument>
          <argument>Default</argument>
        </argument>
      </argument>
      <factory class="Symfony\Component\Form\FormFactory" method="createNamed"/>
    </service>
    <service id="sonata.user.registration.form.type" class="Sonata\UserBundle\Form\Type\RegistrationFormType">
      <tag name="form.type" alias="sonata_user_registration"/>
      <argument>AppBundle\Entity\User\User</argument>
      <argument type="collection">
        <argument key="horizontal_input_wrapper_class">col-lg-8</argument>
        <argument key="horizontal_label_class">col-lg-4 control-label</argument>
      </argument>
    </service>
    <service id="sonata.user.twig.global" class="Sonata\UserBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.user.serializer.handler.user" class="Sonata\UserBundle\Serializer\UserSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.user.manager.user"/>
    </service>
    <service id="sonata.user.api.form.type.group" class="Sonata\UserBundle\Form\Type\ApiGroupType">
      <tag name="form.type" alias="sonata_user_api_form_group"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_user_api_form_group</argument>
      <argument>AppBundle\Entity\User\Group</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.user.api.form.type.user" class="Sonata\UserBundle\Form\Type\ApiUserType">
      <tag name="form.type" alias="sonata_user_api_form_user"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_user_api_form_user</argument>
      <argument>AppBundle\Entity\User\User</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.user.controller.api.user" class="Sonata\UserBundle\Controller\Api\UserController">
      <argument type="service" id="sonata.user.orm.user_manager"/>
      <argument type="service" id="sonata.user.orm.group_manager"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.user.controller.api.group" class="Sonata\UserBundle\Controller\Api\GroupController">
      <argument type="service" id="sonata.user.orm.group_manager"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.media.pool" class="Sonata\MediaBundle\Provider\Pool">
      <argument>default</argument>
      <call method="addContext">
        <argument>default</argument>
        <argument type="collection">
          <argument>sonata.media.provider.dailymotion</argument>
          <argument>sonata.media.provider.youtube</argument>
          <argument>sonata.media.provider.image</argument>
          <argument>sonata.media.provider.file</argument>
          <argument>sonata.media.provider.vimeo</argument>
        </argument>
        <argument type="collection">
          <argument key="default_small" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="default_big" type="collection">
            <argument key="width">970</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="mode">http</argument>
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>users</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="users_admin" type="collection">
            <argument key="width">75</argument>
            <argument key="quality">75</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="users_avatar" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="users_small" type="collection">
            <argument key="width">300</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="users_large" type="collection">
            <argument key="width">750</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="users_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sonata_collection</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sonata_collection_preview" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_collection_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addContext">
        <argument>sonata_category</argument>
        <argument type="collection">
          <argument>sonata.media.provider.image</argument>
        </argument>
        <argument type="collection">
          <argument key="sonata_category_preview" type="collection">
            <argument key="width">100</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
          <argument key="sonata_category_wide" type="collection">
            <argument key="width">820</argument>
            <argument key="quality">100</argument>
            <argument key="height">false</argument>
            <argument key="format">jpg</argument>
            <argument key="constraint">true</argument>
          </argument>
        </argument>
        <argument type="collection">
          <argument key="strategy">sonata.media.security.superadmin_strategy</argument>
          <argument key="mode">http</argument>
        </argument>
      </call>
      <call method="addDownloadStrategy">
        <argument>sonata.media.security.superadmin_strategy</argument>
        <argument type="service" id="sonata.media.security.superadmin_strategy"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.image</argument>
        <argument type="service" id="sonata.media.provider.image"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.file</argument>
        <argument type="service" id="sonata.media.provider.file"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.youtube</argument>
        <argument type="service" id="sonata.media.provider.youtube"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.dailymotion</argument>
        <argument type="service" id="sonata.media.provider.dailymotion"/>
      </call>
      <call method="addProvider">
        <argument>sonata.media.provider.vimeo</argument>
        <argument type="service" id="sonata.media.provider.vimeo"/>
      </call>
    </service>
    <service id="sonata.media.thumbnail.format" class="Sonata\MediaBundle\Thumbnail\FormatThumbnail">
      <argument>jpg</argument>
    </service>
    <service id="sonata.media.thumbnail.liip_imagine" class="Sonata\MediaBundle\Thumbnail\LiipImagineThumbnail">
      <argument type="service" id="liip_imagine.cache.manager" on-invalid="null"/>
    </service>
    <service id="sonata.media.provider.image" class="Sonata\MediaBundle\Provider\ImageProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.image</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>jpg</argument>
        <argument>png</argument>
        <argument>jpeg</argument>
      </argument>
      <argument type="collection">
        <argument>image/pjpeg</argument>
        <argument>image/jpeg</argument>
        <argument>image/png</argument>
        <argument>image/x-png</argument>
      </argument>
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_image.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>users_admin</argument>
        <argument type="collection">
          <argument key="width">75</argument>
          <argument key="quality">75</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>users_avatar</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>users_small</argument>
        <argument type="collection">
          <argument key="width">300</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>users_large</argument>
        <argument type="collection">
          <argument key="width">750</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>users_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_collection_preview</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_collection_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_category_preview</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>sonata_category_wide</argument>
        <argument type="collection">
          <argument key="width">820</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.file" class="Sonata\MediaBundle\Provider\FileProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.file</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="collection">
        <argument>pdf</argument>
        <argument>txt</argument>
        <argument>rtf</argument>
        <argument>doc</argument>
        <argument>docx</argument>
        <argument>xls</argument>
        <argument>xlsx</argument>
        <argument>ppt</argument>
        <argument>pptx</argument>
        <argument>odt</argument>
        <argument>odg</argument>
        <argument>odp</argument>
        <argument>ods</argument>
        <argument>odc</argument>
        <argument>odf</argument>
        <argument>odb</argument>
        <argument>csv</argument>
        <argument>xml</argument>
      </argument>
      <argument type="collection">
        <argument>application/pdf</argument>
        <argument>application/x-pdf</argument>
        <argument>application/rtf</argument>
        <argument>text/html</argument>
        <argument>text/rtf</argument>
        <argument>text/plain</argument>
        <argument>application/excel</argument>
        <argument>application/msword</argument>
        <argument>application/vnd.ms-excel</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.ms-powerpoint</argument>
        <argument>application/vnd.oasis.opendocument.text</argument>
        <argument>application/vnd.oasis.opendocument.graphics</argument>
        <argument>application/vnd.oasis.opendocument.presentation</argument>
        <argument>application/vnd.oasis.opendocument.spreadsheet</argument>
        <argument>application/vnd.oasis.opendocument.chart</argument>
        <argument>application/vnd.oasis.opendocument.formula</argument>
        <argument>application/vnd.oasis.opendocument.database</argument>
        <argument>application/vnd.oasis.opendocument.image</argument>
        <argument>text/comma-separated-values</argument>
        <argument>text/xml</argument>
        <argument>application/xml</argument>
        <argument>application/zip</argument>
      </argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_file.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.youtube" class="Sonata\MediaBundle\Provider\YouTubeProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.youtube</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <argument>false</argument>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_youtube.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.dailymotion" class="Sonata\MediaBundle\Provider\DailyMotionProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.dailymotion</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_dailymotion.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.provider.vimeo" class="Sonata\MediaBundle\Provider\VimeoProvider">
      <tag name="sonata.media.provider"/>
      <argument>sonata.media.provider.vimeo</argument>
      <argument type="service" id="sonata.media.filesystem.local"/>
      <argument type="service" id="sonata.media.cdn.server"/>
      <argument type="service" id="sonata.media.generator.default"/>
      <argument type="service" id="sonata.media.thumbnail.format"/>
      <argument type="service" id="sonata.media.buzz.browser"/>
      <argument type="service" id="sonata.media.metadata.proxy"/>
      <call method="setTemplates">
        <argument type="collection">
          <argument key="helper_thumbnail">@SonataMedia/Provider/thumbnail.html.twig</argument>
          <argument key="helper_view">@SonataMedia/Provider/view_vimeo.html.twig</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_small</argument>
        <argument type="collection">
          <argument key="width">100</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="addFormat">
        <argument>default_big</argument>
        <argument type="collection">
          <argument key="width">970</argument>
          <argument key="quality">100</argument>
          <argument key="height">false</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
      <call method="setResizer">
        <argument type="service" id="sonata.media.resizer.simple"/>
      </call>
      <call method="addFormat">
        <argument>admin</argument>
        <argument type="collection">
          <argument key="width">200</argument>
          <argument key="height">false</argument>
          <argument key="quality">90</argument>
          <argument key="format">jpg</argument>
          <argument key="constraint">true</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.file_get_contents" class="Buzz\Client\FileGetContents">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.connector.curl" class="Buzz\Client\Curl">
      <call method="setIgnoreErrors">
        <argument>true</argument>
      </call>
      <call method="setMaxRedirects">
        <argument>5</argument>
      </call>
      <call method="setTimeout">
        <argument>5</argument>
      </call>
      <call method="setVerifyPeer">
        <argument>true</argument>
      </call>
      <call method="setProxy">
        <argument>null</argument>
      </call>
    </service>
    <service id="sonata.media.buzz.browser" class="Buzz\Browser">
      <argument type="service" id="sonata.media.buzz.connector.curl"/>
    </service>
    <service id="sonata.media.cdn.server" class="Sonata\MediaBundle\CDN\Server">
      <argument>/uploads/media</argument>
    </service>
    <service id="sonata.media.twig.extension" class="Sonata\MediaBundle\Twig\Extension\MediaExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.twig.global" class="Sonata\MediaBundle\Twig\GlobalVariables">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.security.public_strategy" class="Sonata\MediaBundle\Security\PublicDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.media.security.forbidden_strategy" class="Sonata\MediaBundle\Security\ForbiddenDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.media.security.superadmin_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>ROLE_ADMIN</argument>
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.media.security.session_strategy" class="Sonata\MediaBundle\Security\SessionDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="session"/>
      <argument>1</argument>
    </service>
    <service id="sonata.media.security.connected_strategy" class="Sonata\MediaBundle\Security\RolesDownloadStrategy">
      <argument type="service" id="translator.data_collector"/>
      <argument type="service">
        <service class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker">
          <argument type="service" id="security.token_storage"/>
          <argument type="service" id="security.authentication.manager"/>
          <argument type="service" id="debug.security.access.decision_manager"/>
          <argument>false</argument>
        </service>
      </argument>
      <argument type="collection">
        <argument>IS_AUTHENTICATED_FULLY</argument>
        <argument>IS_AUTHENTICATED_REMEMBERED</argument>
      </argument>
    </service>
    <service id="sonata.media.extra.pixlr" class="Sonata\MediaBundle\Extra\Pixlr">
      <argument>Project</argument>
      <argument>84c575361242bf2cdfc2129a0af5d9d14ffbdae9</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.form.type.media" class="Sonata\MediaBundle\Form\Type\MediaType">
      <tag name="form.type" alias="sonata_media_type"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>AppBundle\Entity\Media\Media</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="sonata.media.adapter.filesystem.local" class="Sonata\MediaBundle\Filesystem\Local">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web/uploads/media</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.media.adapter.service.s3" class="Aws\S3\S3Client">
      <argument type="collection"/>
      <factory class="Aws\S3\S3Client" method="factory"/>
    </service>
    <service id="sonata.media.filesystem.local" class="Gaufrette\Filesystem">
      <argument type="service" id="sonata.media.adapter.filesystem.local"/>
    </service>
    <service id="sonata.media.metadata.proxy" class="Sonata\MediaBundle\Metadata\ProxyMetadataBuilder">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.metadata.amazon" class="Sonata\MediaBundle\Metadata\AmazonMetadataBuilder"/>
    <service id="sonata.media.metadata.noop" class="Sonata\MediaBundle\Metadata\NoopMetadataBuilder"/>
    <service id="sonata.media.validator.format" class="Sonata\MediaBundle\Validator\FormatValidator">
      <tag name="validator.constraint_validator" alias="sonata.media.validator.format"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.serializer.handler.media" class="Sonata\MediaBundle\Serializer\MediaSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.serializer.handler.gallery" class="Sonata\MediaBundle\Serializer\GallerySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="Sonata\MediaBundle\Command\AddMassMediaCommand" class="Sonata\MediaBundle\Command\AddMassMediaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\AddMediaCommand" class="Sonata\MediaBundle\Command\AddMediaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\CleanMediaCommand" class="Sonata\MediaBundle\Command\CleanMediaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\FixMediaContextCommand" class="Sonata\MediaBundle\Command\FixMediaContextCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\MigrateToJsonTypeCommand" class="Sonata\MediaBundle\Command\MigrateToJsonTypeCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\RefreshMetadataCommand" class="Sonata\MediaBundle\Command\RefreshMetadataCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\RemoveThumbsCommand" class="Sonata\MediaBundle\Command\RemoveThumbsCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\SyncThumbsCommand" class="Sonata\MediaBundle\Command\SyncThumbsCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\MediaBundle\Command\UpdateCdnStatusCommand" class="Sonata\MediaBundle\Command\UpdateCdnStatusCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.media.api.form.type.doctrine.media" class="Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType">
      <tag name="form.type" alias="sonata_media_api_form_doctrine_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_doctrine_media</argument>
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.media" class="Sonata\MediaBundle\Form\Type\ApiMediaType">
      <tag name="form.type" alias="sonata_media_api_form_media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument>AppBundle\Entity\Media\Media</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="sonata.media.api.form.type.gallery" class="Sonata\MediaBundle\Form\Type\ApiGalleryType">
      <tag name="form.type" alias="sonata_media_api_form_gallery"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery</argument>
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.api.form.type.gallery_has_media" class="Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType">
      <tag name="form.type" alias="sonata_media_api_form_gallery_has_media"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_media_api_form_gallery_has_media</argument>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.media.controller.api.gallery" class="Sonata\MediaBundle\Controller\Api\GalleryController">
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="form.factory"/>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
    </service>
    <service id="sonata.media.controller.api.media" class="Sonata\MediaBundle\Controller\Api\MediaController">
      <argument type="service" id="sonata.media.manager.media"/>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.media.formatter.twig" class="Sonata\MediaBundle\Twig\Extension\FormatterMediaExtension">
      <argument type="service" id="sonata.media.twig.extension"/>
    </service>
    <service id="sonata.media.block.media" class="Sonata\MediaBundle\Block\MediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.media</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.feature_media" class="Sonata\MediaBundle\Block\FeatureMediaBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.feature_media</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.media"/>
    </service>
    <service id="sonata.media.block.gallery" class="Sonata\MediaBundle\Block\GalleryBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
    </service>
    <service id="sonata.media.block.gallery_list" class="Sonata\MediaBundle\Block\GalleryListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.media.block.gallery_list</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.media.manager.gallery"/>
      <argument type="service" id="sonata.media.pool"/>
    </service>
    <service id="sonata.media.manager.category.default" class="Sonata\MediaBundle\Model\CategoryManager">
      <argument type="service" id="sonata.classification.manager.category" on-invalid="null"/>
    </service>
    <service id="sonata.media.manager.media" class="Sonata\MediaBundle\Entity\MediaManager">
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.manager.gallery" class="Sonata\MediaBundle\Entity\GalleryManager">
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.generator.default" class="Sonata\MediaBundle\Generator\DefaultGenerator"/>
    <service id="sonata.media.doctrine.event_subscriber" class="Sonata\MediaBundle\Listener\ORM\MediaEventSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.media.admin.media" class="Sonata\MediaBundle\Admin\ORM\MediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.media.translation_domain%" label="media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.media</argument>
      <argument>AppBundle\Entity\Media\Media</argument>
      <argument>SonataMediaBundle:MediaAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <argument type="service" id="sonata.media.manager.category.default" on-invalid="null"/>
      <call method="setModelManager">
        <argument type="service" id="sonata.media.admin.media.manager"/>
      </call>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>media</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.media.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.ckeditor.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.media.manager" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.media.admin.gallery" class="Sonata\MediaBundle\Admin\GalleryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.media.admin.groupname%" label="gallery" label_catalogue="%sonata.media.admin.gallery.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery</argument>
      <argument>AppBundle\Entity\Media\Gallery</argument>
      <argument>SonataMediaBundle:GalleryAdmin</argument>
      <argument type="service" id="sonata.media.pool"/>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.gallery.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.admin.gallery_has_media" class="Sonata\MediaBundle\Admin\GalleryHasMediaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" show_in_dashboard="" group="%sonata.media.admin.groupname%" label_catalogue="%sonata.media.admin.gallery_has_media.translation_domain%" label="gallery_has_media" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.media.admin.groupicon%"/>
      <argument>sonata.media.admin.gallery_has_media</argument>
      <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataMediaBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>gallery_has_media</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.media.admin.gallery_has_media.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.media.adapter.image.gd" class="Imagine\Gd\Imagine"/>
    <service id="sonata.media.adapter.image.imagick" class="Imagine\Imagick\Imagine"/>
    <service id="sonata.media.adapter.image.gmagick" class="Imagine\Gmagick\Imagine"/>
    <service id="sonata.media.resizer.simple" class="Sonata\MediaBundle\Resizer\SimpleResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="sonata.media.resizer.square" class="Sonata\MediaBundle\Resizer\SquareResizer">
      <argument type="service" id="sonata.media.adapter.image.gd"/>
      <argument>inset</argument>
      <argument type="service" id="sonata.media.metadata.proxy"/>
    </service>
    <service id="ivory_ck_editor.form.type" class="Ivory\CKEditorBundle\Form\Type\CKEditorType">
      <tag name="form.type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.styles_set_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
      <argument type="service" id="ivory_ck_editor.toolbar_manager"/>
    </service>
    <service id="ivory_ck_editor.config_manager" class="Ivory\CKEditorBundle\Model\ConfigManager">
      <call method="setConfigs">
        <argument type="collection">
          <argument key="default" type="collection">
            <argument key="filebrowserBrowseRoute">admin_sonata_media_media_media_ckeditor_browser</argument>
            <argument key="filebrowserImageBrowseRoute">admin_sonata_media_media_media_ckeditor_browser</argument>
            <argument key="filebrowserImageBrowseRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.image</argument>
              <argument key="hide_context">true</argument>
              <argument key="context">default</argument>
            </argument>
            <argument key="filebrowserUploadRoute">admin_sonata_media_media_media_ckeditor_upload</argument>
            <argument key="filebrowserUploadRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.file</argument>
              <argument key="hide_context">true</argument>
              <argument key="context">default</argument>
            </argument>
            <argument key="filebrowserImageUploadRoute">admin_sonata_media_media_media_ckeditor_upload</argument>
            <argument key="filebrowserImageUploadRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.image</argument>
              <argument key="context">default</argument>
            </argument>
          </argument>
          <argument key="news" type="collection">
            <argument key="filebrowserBrowseRoute">admin_sonata_media_media_media_ckeditor_browser</argument>
            <argument key="filebrowserImageBrowseRoute">admin_sonata_media_media_media_ckeditor_browser</argument>
            <argument key="filebrowserImageBrowseRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.image</argument>
              <argument key="hide_context">true</argument>
              <argument key="context">news</argument>
            </argument>
            <argument key="filebrowserUploadRoute">admin_sonata_media_media_media_ckeditor_upload</argument>
            <argument key="filebrowserUploadRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.file</argument>
              <argument key="context">news</argument>
            </argument>
            <argument key="filebrowserImageUploadRoute">admin_sonata_media_media_media_ckeditor_upload</argument>
            <argument key="filebrowserImageUploadRouteParameters" type="collection">
              <argument key="provider">sonata.media.provider.image</argument>
              <argument key="context">news</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="setDefaultConfig">
        <argument>default</argument>
      </call>
    </service>
    <service id="ivory_ck_editor.plugin_manager" class="Ivory\CKEditorBundle\Model\PluginManager"/>
    <service id="ivory_ck_editor.styles_set_manager" class="Ivory\CKEditorBundle\Model\StylesSetManager"/>
    <service id="ivory_ck_editor.template_manager" class="Ivory\CKEditorBundle\Model\TemplateManager"/>
    <service id="ivory_ck_editor.toolbar_manager" class="Ivory\CKEditorBundle\Model\ToolbarManager"/>
    <service id="ivory_ck_editor.renderer" class="Ivory\CKEditorBundle\Renderer\CKEditorRenderer">
      <argument type="service" id="service_container"/>
    </service>
    <service id="ivory_ck_editor.renderer.json_builder" class="Ivory\JsonBuilder\JsonBuilder">
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="ivory_ck_editor.twig_extension" class="Ivory\CKEditorBundle\Twig\CKEditorExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="ivory_ck_editor.renderer"/>
    </service>
    <service id="sonata.admin.twig.extension" class="Sonata\AdminBundle\Twig\Extension\SonataAdminExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="service_container"/>
      <call method="setXEditableTypeMapping">
        <argument type="collection">
          <argument key="choice">select</argument>
          <argument key="boolean">select</argument>
          <argument key="text">text</argument>
          <argument key="textarea">textarea</argument>
          <argument key="html">textarea</argument>
          <argument key="email">email</argument>
          <argument key="string">text</argument>
          <argument key="smallint">text</argument>
          <argument key="bigint">text</argument>
          <argument key="integer">number</argument>
          <argument key="decimal">number</argument>
          <argument key="currency">number</argument>
          <argument key="percent">number</argument>
          <argument key="url">url</argument>
          <argument key="date">date</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.templates.twig.extension" class="Sonata\AdminBundle\Twig\Extension\TemplateRegistryExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.pool" class="Sonata\AdminBundle\Admin\Pool">
      <argument type="service" id="service_container"/>
      <argument>SIUNIC ETECSA</argument>
      <argument>logo_etecsa.jpg</argument>
      <argument type="collection">
        <argument key="title_mode">both</argument>
        <argument key="html5_validate">true</argument>
        <argument key="pager_links">5</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="lock_protection">true</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
          <argument>bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/markdown/set.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/html/set.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/textile/set.js</argument>
          <argument>bundles/sonataformatter/vendor/ckeditor/ckeditor.js</argument>
          <argument>assets/vendor/hinclude/hinclude.js</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/lib/js/wysihtml5-0.3.0.js</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/src/bootstrap3-wysihtml5.js</argument>
          <argument>assets/vendor/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2-bootstrap.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/flick/jquery-ui.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
          <argument>bundles/sonataformatter/markitup/skins/sonata/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/markdown/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/html/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/textile/style.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-purple.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-purple.min.css</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/src/bootstrap-wysihtml5.css</argument>
          <argument>assets/vendor/bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
      <argument type="service" id="property_accessor"/>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.admin.global_template_registry"/>
      </call>
      <call method="setAdminServiceIds">
        <argument type="collection">
          <argument>data_dog_audit.admin.audit_log</argument>
          <argument>sonata.user.admin.user</argument>
          <argument>sonata.user.admin.group</argument>
          <argument>sonata.media.admin.media</argument>
          <argument>sonata.media.admin.gallery</argument>
          <argument>sonata.media.admin.gallery_has_media</argument>
          <argument>sonata.classification.admin.category</argument>
          <argument>sonata.classification.admin.tag</argument>
          <argument>sonata.classification.admin.collection</argument>
          <argument>sonata.classification.admin.context</argument>
          <argument>app.admin.empresa</argument>
          <argument>app.admin.organismos</argument>
          <argument>app.admin.personas</argument>
          <argument>app.admin.anexo1.contrato.areas.internet</argument>
          <argument>app.admin.anexo1.contrato.arrendamiento.espacios</argument>
          <argument>app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx</argument>
          <argument>app.admin.anexo1.contrato.arrendamiento.redes</argument>
          <argument>app.admin.anexo1.contrato.compra.venta</argument>
          <argument>app.admin.anexo1.contrato.compra.venta.pizarra</argument>
          <argument>app.admin.anexo1.contrato.contactos.telefonicos</argument>
          <argument>app.admin.anexo1.contrato.mantenimiento.pizarra.pbx</argument>
          <argument>app.admin.anexo2.contrato.areas.internet</argument>
          <argument>app.admin.anexo2.contrato.arrendamiento.redes</argument>
          <argument>app.admin.anexo2.contrato.instalacion.pizarra.pbx</argument>
          <argument>app.admin.anexo2.contrato.recarga.por.pos</argument>
          <argument>app.admin.datos.cuentas.bancarias.etecsa</argument>
          <argument>app.admin.anexo4.contrato.agencia</argument>
          <argument>app.admin.anexo4.arrendamiento.espacios</argument>
          <argument>app.admin.anexo4.contrato.compra.venta</argument>
          <argument>app.admin.anexo4.contrato.recarga.por.pos</argument>
          <argument>app.admin.anexo5.contrato.agencia</argument>
          <argument>app.admin.anexo5.arrendaminto.espacios</argument>
          <argument>app.admin.anexo5.contrato.areas.internet</argument>
          <argument>app.admin.anexocps.conexion.centrales.telefonicas</argument>
          <argument>app.admin.anexocps.levantamiento.redes.tecnicas</argument>
          <argument>app.admin.anexocps.servicios.terceros</argument>
          <argument>app.admin.contrato.agencia.persona.juridica</argument>
          <argument>app.admin.contrato.areas.internet</argument>
          <argument>app.admin.contrato.arrendamiento.espacios</argument>
          <argument>app.admin.contrato.arrendamiento.pizarra.privada.pbx</argument>
          <argument>app.admin.contrato.arrendamiento.redes</argument>
          <argument>app.admin.contrato.compra.venta</argument>
          <argument>app.admin.contrato.instalacion.pizarra.pbx</argument>
          <argument>app.admin.contrato.mantenimiento.pizarra.pbx</argument>
          <argument>app.admin.contrato.prestacion.servicios</argument>
          <argument>app.admin.contrato.recarga.por.pos</argument>
          <argument>app.admin.descripcion.productos.servicios</argument>
          <argument>app.admin.facilidades.del.equipo</argument>
          <argument>app.admin.grupos.electrogenos</argument>
          <argument>app.admin.locales</argument>
          <argument>app.admin.mantenimiento.correctivo</argument>
          <argument>app.admin.mantenimiento.preventivo</argument>
          <argument>app.admin.pizarra.pbx</argument>
          <argument>app.admin.protecciones.tierra</argument>
          <argument>app.admin.relacion.antenas.a4</argument>
          <argument>app.admin.relacion.bastidores</argument>
          <argument>app.admin.relacion.equipos</argument>
          <argument>app.admin.relacion.iluminacion.tomacorriente</argument>
          <argument>app.admin.relacion.mastiles.a4</argument>
          <argument>app.admin.relacion.terminaciones.bastidor</argument>
          <argument>app.admin.relacion.torres.a4</argument>
          <argument>app.admin.relacion.vias</argument>
          <argument>app.admin.sistema.corriente.directa</argument>
          <argument>app.admin.sistema.iluminacion.a5</argument>
          <argument>app.admin.sistemas.corriente.alterna</argument>
          <argument>app.admin.tarifas.espacios.arrendados</argument>
          <argument>app.admin.terminaciones</argument>
          <argument>app.admin.tipos.de.mantenimientos</argument>
          <argument>app.admin.tipos.distancias.arrendadas</argument>
          <argument>app.admin.tipos.mantenimientos.correctivos</argument>
          <argument>app.admin.tomacorrientes</argument>
          <argument>app.admin.descripcion.productos.contratados</argument>
          <argument>app.admin.contrato.contactos.telefonicos</argument>
          <argument>app.admin.equipamiento.gsm.pos</argument>
          <argument>app.admin.tarjetas.sim</argument>
          <argument>app.admin.tarifas.conexion.pizarras</argument>
          <argument>app.admin.contrato.comp.vent.pizarra</argument>
        </argument>
      </call>
      <call method="setAdminGroups">
        <argument type="collection">
          <argument key="sonata.admin.group.administration" type="collection">
            <argument key="label">sonata_administration</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="glyphicon glyphicon-user"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.site_builder" type="collection">
            <argument key="label">sonata_page</argument>
            <argument key="label_catalogue">SonataPageBundle</argument>
            <argument key="icon">&lt;i class="fa fa-puzzle-piece"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.classification" type="collection">
            <argument key="label">sonata_classification</argument>
            <argument key="label_catalogue">SonataClassificationBundle</argument>
            <argument key="icon">&lt;i class="fa fa-sitemap"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="sonata.admin.group.content" type="collection">
            <argument key="label">sonata_media</argument>
            <argument key="label_catalogue">SonataMediaBundle</argument>
            <argument key="icon">&lt;i class="fa fa-th"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="administration" type="collection">
            <argument key="label">sonata_administration</argument>
            <argument key="label_catalogue">SonataAdminBundle</argument>
            <argument key="icon">&lt;i class="glyphicon glyphicon-user"&gt;&lt;/i&gt;</argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">sonata.user.admin.user</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
              <argument type="collection">
                <argument key="admin">sonata.user.admin.group</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
              <argument type="collection">
                <argument key="admin">data_dog_audit.admin.audit_log</argument>
                <argument key="label"></argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
                <argument key="roles" type="collection"/>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
            <argument key="roles" type="collection"/>
          </argument>
          <argument key="admin" type="collection">
            <argument key="label">admin.dashboard.menu.admin.label</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_ADMIN</argument>
            </argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="general" type="collection">
            <argument key="label">Datos Generales</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_ADMIN</argument>
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.empresa</argument>
                <argument key="label">Empresa</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.organismos</argument>
                <argument key="label">Organismos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.personas</argument>
                <argument key="label">Personas</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.pizarra.pbx</argument>
                <argument key="label">Pizarras PBX</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_agencia" type="collection">
            <argument key="label">Contratos Agencia Persona Jurídica</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.datos.cuentas.bancarias.etecsa</argument>
                <argument key="label">Datos de las Cuentas Bancarias de ETECSA</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo4.contrato.agencia</argument>
                <argument key="label">Puntos de atencion al agente</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo5.contrato.agencia</argument>
                <argument key="label">Puntos de comercialización del agente</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.agencia.persona.juridica</argument>
                <argument key="label">Contratos Agencia Persona Juridica</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_areas" type="collection">
            <argument key="label">Contratos Áreas de Internet</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.areas.internet</argument>
                <argument key="label">Tarifas y Distribución de Ingresos.</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo2.contrato.areas.internet</argument>
                <argument key="label">Aportes de las Partes</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo5.contrato.areas.internet</argument>
                <argument key="label">Punto de comercialización.</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.areas.internet</argument>
                <argument key="label">Contratos Areas Internet</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_arrendamiento_pizarra" type="collection">
            <argument key="label">Contratos Arrendamiento de Pizarras</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx</argument>
                <argument key="label">Anexo 1 Contrato Arrendamiento Pizarras</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.arrendamiento.pizarra.privada.pbx</argument>
                <argument key="label">Contratos Arrendamiento Pizarras Privadas</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_arrendamiento_redes" type="collection">
            <argument key="label">Contratos Arrendamiento de Redes</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.arrendamiento.redes</argument>
                <argument key="label">Tarifas para el arrendamiento de Redes</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo2.contrato.arrendamiento.redes</argument>
                <argument key="label">Relación de tramos de Redes</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.arrendamiento.redes</argument>
                <argument key="label">Contratos Arrendamiento de Redes</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.tipos.distancias.arrendadas</argument>
                <argument key="label">Tipos de distancias arrendadas</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_compra_venta_pizarra" type="collection">
            <argument key="label">Contratos Compra Venta Pizarras</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.compra.venta.pizarra</argument>
                <argument key="label">Anexo 1 Contrato Compra Venta Pizarra</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.descripcion.productos.contratados</argument>
                <argument key="label">Descripción Productos Contratados</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.comp.vent.pizarra</argument>
                <argument key="label">Contratos Compra Venta de Pizarras</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_compra_venta" type="collection">
            <argument key="label">Contratos Compra Venta</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.compra.venta</argument>
                <argument key="label">Descripción de los productos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo4.contrato.compra.venta</argument>
                <argument key="label">Puntos de Comercialización por ETECSA</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.compra.venta</argument>
                <argument key="label">Contratos Compra Venta</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_instalacion_pizarra" type="collection">
            <argument key="label">Contratos Instalacion de Pizarras</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo2.contrato.instalacion.pizarra.pbx</argument>
                <argument key="label">Equipos Contratados</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.instalacion.pizarra.pbx</argument>
                <argument key="label">Contratos Instalacion Pizarra</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_mantenimiento_pizarra" type="collection">
            <argument key="label">Contratos Mantenimiento de Pizarras</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.mantenimiento.pizarra.pbx</argument>
                <argument key="label">Anexo 1 Contrato Mantenimiento Pizarras</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.mantenimiento.pizarra.pbx</argument>
                <argument key="label">Contratos Mantenimiento Pizarra</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.mantenimiento.correctivo</argument>
                <argument key="label">Mantenimiento Correctivo</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.mantenimiento.preventivo</argument>
                <argument key="label">Mantenimiento Preventivo</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.tipos.de.mantenimientos</argument>
                <argument key="label">Tipos de Mantenimientos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.tipos.mantenimientos.correctivos</argument>
                <argument key="label">Tipos Mantenimientos Correctivos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_prestacion_servicios_ct" type="collection">
            <argument key="label">Contratos Prestacion de Servicios CT</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo1.contrato.contactos.telefonicos</argument>
                <argument key="label">Especificaciones del Servicio</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.contactos.telefonicos</argument>
                <argument key="label">Contratos Contactos Telefonicos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_prestacion_servicios" type="collection">
            <argument key="label">Contratos Prestacion de Servicios</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexocps.conexion.centrales.telefonicas</argument>
                <argument key="label">Conexion Centrales Telefonicos</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexocps.levantamiento.redes.tecnicas</argument>
                <argument key="label">Levantamiento Redes Tecnicas</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexocps.servicios.terceros</argument>
                <argument key="label">Servicios a Terceros</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.prestacion.servicios</argument>
                <argument key="label">Contratos Prestacion Servicios</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.tarifas.conexion.pizarras</argument>
                <argument key="label">Tarifas Conexion Pizarras</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="contrato_recarga_pos" type="collection">
            <argument key="label">Contratos Recarga por POS</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection">
              <argument type="collection">
                <argument key="admin">app.admin.anexo2.contrato.recarga.por.pos</argument>
                <argument key="label">Puntos de Ventas del Cliente</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.anexo4.contrato.recarga.por.pos</argument>
                <argument key="label">Acta de Entrega</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.contrato.recarga.por.pos</argument>
                <argument key="label">Contratos Recarga por POS</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.equipamiento.gsm.pos</argument>
                <argument key="label">Equipamiento GSM</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
              <argument type="collection">
                <argument key="admin">app.admin.tarjetas.sim</argument>
                <argument key="label">Tarjetas SIM</argument>
                <argument key="route"></argument>
                <argument key="route_params" type="collection"/>
                <argument key="route_absolute">false</argument>
              </argument>
            </argument>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
          <argument key="user" type="collection">
            <argument key="label">admin.dashboard.menu.user.label</argument>
            <argument key="label_catalogue">AppBundle</argument>
            <argument key="icon">&lt;i class="fa fa-list-alt"&gt;&lt;/i&gt;</argument>
            <argument key="roles" type="collection">
              <argument>ROLE_USER</argument>
            </argument>
            <argument key="items" type="collection"/>
            <argument key="on_top">false</argument>
            <argument key="keep_open">false</argument>
            <argument key="item_adds" type="collection"/>
          </argument>
        </argument>
      </call>
      <call method="setAdminClasses">
        <argument type="collection">
          <argument key="DataDog\AuditBundle\Entity\AuditLog" type="collection">
            <argument>data_dog_audit.admin.audit_log</argument>
          </argument>
          <argument key="AppBundle\Entity\User\User" type="collection">
            <argument>sonata.user.admin.user</argument>
          </argument>
          <argument key="AppBundle\Entity\User\Group" type="collection">
            <argument>sonata.user.admin.group</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\Media" type="collection">
            <argument>sonata.media.admin.media</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\Gallery" type="collection">
            <argument>sonata.media.admin.gallery</argument>
          </argument>
          <argument key="AppBundle\Entity\Media\GalleryHasMedia" type="collection">
            <argument>sonata.media.admin.gallery_has_media</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Category" type="collection">
            <argument>sonata.classification.admin.category</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Tag" type="collection">
            <argument>sonata.classification.admin.tag</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Collection" type="collection">
            <argument>sonata.classification.admin.collection</argument>
          </argument>
          <argument key="AppBundle\Entity\Classification\Context" type="collection">
            <argument>sonata.classification.admin.context</argument>
          </argument>
          <argument key="AppBundle\Entity\Empresa" type="collection">
            <argument>app.admin.empresa</argument>
          </argument>
          <argument key="AppBundle\Entity\Organismos" type="collection">
            <argument>app.admin.organismos</argument>
          </argument>
          <argument key="AppBundle\Entity\Personas" type="collection">
            <argument>app.admin.personas</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_areas_internet" type="collection">
            <argument>app.admin.anexo1.contrato.areas.internet</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_arrendamiento_espacios" type="collection">
            <argument>app.admin.anexo1.contrato.arrendamiento.espacios</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_arrendamiento_pizarras_privadas_pbx" type="collection">
            <argument>app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_arrendamiento_redes" type="collection">
            <argument>app.admin.anexo1.contrato.arrendamiento.redes</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_compra_venta" type="collection">
            <argument>app.admin.anexo1.contrato.compra.venta</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_compra_venta_pizarra" type="collection">
            <argument>app.admin.anexo1.contrato.compra.venta.pizarra</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_contactos_telefonicos" type="collection">
            <argument>app.admin.anexo1.contrato.contactos.telefonicos</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo1_contrato_mantenimiento_pizarra_pbx" type="collection">
            <argument>app.admin.anexo1.contrato.mantenimiento.pizarra.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo2_contrato_areas_internet" type="collection">
            <argument>app.admin.anexo2.contrato.areas.internet</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo2_contrato_arrendamiento_redes" type="collection">
            <argument>app.admin.anexo2.contrato.arrendamiento.redes</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo2_contrato_instalacion_pizarra_pbx" type="collection">
            <argument>app.admin.anexo2.contrato.instalacion.pizarra.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo2_contrato_recarga_por_pos" type="collection">
            <argument>app.admin.anexo2.contrato.recarga.por.pos</argument>
          </argument>
          <argument key="AppBundle\Entity\datos_cuentas_bancarias_etecsa" type="collection">
            <argument>app.admin.datos.cuentas.bancarias.etecsa</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo4_contrato_agencia" type="collection">
            <argument>app.admin.anexo4.contrato.agencia</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo4_arrendamiento_espacios" type="collection">
            <argument>app.admin.anexo4.arrendamiento.espacios</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo4_contrato_compra_venta" type="collection">
            <argument>app.admin.anexo4.contrato.compra.venta</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo4_contrato_recarga_por_pos" type="collection">
            <argument>app.admin.anexo4.contrato.recarga.por.pos</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo5_contrato_agencia" type="collection">
            <argument>app.admin.anexo5.contrato.agencia</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo5_arrendaminto_espacios" type="collection">
            <argument>app.admin.anexo5.arrendaminto.espacios</argument>
          </argument>
          <argument key="AppBundle\Entity\anexo5_contrato_areas_internet" type="collection">
            <argument>app.admin.anexo5.contrato.areas.internet</argument>
          </argument>
          <argument key="AppBundle\Entity\anexocps_conexion_centrales_telefonicas" type="collection">
            <argument>app.admin.anexocps.conexion.centrales.telefonicas</argument>
          </argument>
          <argument key="AppBundle\Entity\anexocps_levantamiento_redes_tecnicas" type="collection">
            <argument>app.admin.anexocps.levantamiento.redes.tecnicas</argument>
          </argument>
          <argument key="AppBundle\Entity\anexocps_servicios_terceros" type="collection">
            <argument>app.admin.anexocps.servicios.terceros</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_agencia_persona_juridica" type="collection">
            <argument>app.admin.contrato.agencia.persona.juridica</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_areas_internet" type="collection">
            <argument>app.admin.contrato.areas.internet</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_arrendamiento_espacios" type="collection">
            <argument>app.admin.contrato.arrendamiento.espacios</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_arrendamiento_pizarra_privada_pbx" type="collection">
            <argument>app.admin.contrato.arrendamiento.pizarra.privada.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_arrendamiento_redes" type="collection">
            <argument>app.admin.contrato.arrendamiento.redes</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_compra_venta" type="collection">
            <argument>app.admin.contrato.compra.venta</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_instalacion_pizarra_pbx" type="collection">
            <argument>app.admin.contrato.instalacion.pizarra.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_mantenimiento_pizarra_pbx" type="collection">
            <argument>app.admin.contrato.mantenimiento.pizarra.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_prestacion_servicios" type="collection">
            <argument>app.admin.contrato.prestacion.servicios</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_recarga_por_pos" type="collection">
            <argument>app.admin.contrato.recarga.por.pos</argument>
          </argument>
          <argument key="AppBundle\Entity\descripcion_productos_servicios" type="collection">
            <argument>app.admin.descripcion.productos.servicios</argument>
          </argument>
          <argument key="AppBundle\Entity\facilidades_del_equipo" type="collection">
            <argument>app.admin.facilidades.del.equipo</argument>
          </argument>
          <argument key="AppBundle\Entity\grupos_electrogenos" type="collection">
            <argument>app.admin.grupos.electrogenos</argument>
          </argument>
          <argument key="AppBundle\Entity\locales" type="collection">
            <argument>app.admin.locales</argument>
          </argument>
          <argument key="AppBundle\Entity\mantenimiento_correctivo" type="collection">
            <argument>app.admin.mantenimiento.correctivo</argument>
          </argument>
          <argument key="AppBundle\Entity\mantenimiento_preventivo" type="collection">
            <argument>app.admin.mantenimiento.preventivo</argument>
          </argument>
          <argument key="AppBundle\Entity\pizarra_pbx" type="collection">
            <argument>app.admin.pizarra.pbx</argument>
          </argument>
          <argument key="AppBundle\Entity\protecciones_tierra" type="collection">
            <argument>app.admin.protecciones.tierra</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_antenas_a4" type="collection">
            <argument>app.admin.relacion.antenas.a4</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_bastidores" type="collection">
            <argument>app.admin.relacion.bastidores</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_equipos" type="collection">
            <argument>app.admin.relacion.equipos</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_iluminacion_tomacorriente" type="collection">
            <argument>app.admin.relacion.iluminacion.tomacorriente</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_mastiles_a4" type="collection">
            <argument>app.admin.relacion.mastiles.a4</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_terminaciones_bastidor" type="collection">
            <argument>app.admin.relacion.terminaciones.bastidor</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_torres_a4" type="collection">
            <argument>app.admin.relacion.torres.a4</argument>
          </argument>
          <argument key="AppBundle\Entity\relacion_vias" type="collection">
            <argument>app.admin.relacion.vias</argument>
          </argument>
          <argument key="AppBundle\Entity\sistema_corriente_directa" type="collection">
            <argument>app.admin.sistema.corriente.directa</argument>
          </argument>
          <argument key="AppBundle\Entity\sistema_iluminacion_a5" type="collection">
            <argument>app.admin.sistema.iluminacion.a5</argument>
          </argument>
          <argument key="AppBundle\Entity\sistemas_corriente_alterna" type="collection">
            <argument>app.admin.sistemas.corriente.alterna</argument>
          </argument>
          <argument key="AppBundle\Entity\tarifas_espacios_arrendados" type="collection">
            <argument>app.admin.tarifas.espacios.arrendados</argument>
          </argument>
          <argument key="AppBundle\Entity\terminaciones" type="collection">
            <argument>app.admin.terminaciones</argument>
          </argument>
          <argument key="AppBundle\Entity\tipos_de_mantenimientos" type="collection">
            <argument>app.admin.tipos.de.mantenimientos</argument>
          </argument>
          <argument key="AppBundle\Entity\tipos_distancias_arrendadas" type="collection">
            <argument>app.admin.tipos.distancias.arrendadas</argument>
          </argument>
          <argument key="AppBundle\Entity\tipos_mantenimientos_correctivos" type="collection">
            <argument>app.admin.tipos.mantenimientos.correctivos</argument>
          </argument>
          <argument key="AppBundle\Entity\tomacorrientes" type="collection">
            <argument>app.admin.tomacorrientes</argument>
          </argument>
          <argument key="AppBundle\Entity\descripcion_productos_contratados" type="collection">
            <argument>app.admin.descripcion.productos.contratados</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_contactos_telefonicos" type="collection">
            <argument>app.admin.contrato.contactos.telefonicos</argument>
          </argument>
          <argument key="AppBundle\Entity\equipamiento_gsm_pos" type="collection">
            <argument>app.admin.equipamiento.gsm.pos</argument>
          </argument>
          <argument key="AppBundle\Entity\tarjetas_sim" type="collection">
            <argument>app.admin.tarjetas.sim</argument>
          </argument>
          <argument key="AppBundle\Entity\tarifas_conexion_pizarras" type="collection">
            <argument>app.admin.tarifas.conexion.pizarras</argument>
          </argument>
          <argument key="AppBundle\Entity\contrato_comp_vent_pizarra" type="collection">
            <argument>app.admin.contrato.comp.vent.pizarra</argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.route_loader" class="Sonata\AdminBundle\Route\AdminPoolLoader">
      <tag name="routing.loader"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="collection">
        <argument>data_dog_audit.admin.audit_log</argument>
        <argument>sonata.user.admin.user</argument>
        <argument>sonata.user.admin.group</argument>
        <argument>sonata.media.admin.media</argument>
        <argument>sonata.media.admin.gallery</argument>
        <argument>sonata.media.admin.gallery_has_media</argument>
        <argument>sonata.classification.admin.category</argument>
        <argument>sonata.classification.admin.tag</argument>
        <argument>sonata.classification.admin.collection</argument>
        <argument>sonata.classification.admin.context</argument>
        <argument>app.admin.empresa</argument>
        <argument>app.admin.organismos</argument>
        <argument>app.admin.personas</argument>
        <argument>app.admin.anexo1.contrato.areas.internet</argument>
        <argument>app.admin.anexo1.contrato.arrendamiento.espacios</argument>
        <argument>app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx</argument>
        <argument>app.admin.anexo1.contrato.arrendamiento.redes</argument>
        <argument>app.admin.anexo1.contrato.compra.venta</argument>
        <argument>app.admin.anexo1.contrato.compra.venta.pizarra</argument>
        <argument>app.admin.anexo1.contrato.contactos.telefonicos</argument>
        <argument>app.admin.anexo1.contrato.mantenimiento.pizarra.pbx</argument>
        <argument>app.admin.anexo2.contrato.areas.internet</argument>
        <argument>app.admin.anexo2.contrato.arrendamiento.redes</argument>
        <argument>app.admin.anexo2.contrato.instalacion.pizarra.pbx</argument>
        <argument>app.admin.anexo2.contrato.recarga.por.pos</argument>
        <argument>app.admin.datos.cuentas.bancarias.etecsa</argument>
        <argument>app.admin.anexo4.contrato.agencia</argument>
        <argument>app.admin.anexo4.arrendamiento.espacios</argument>
        <argument>app.admin.anexo4.contrato.compra.venta</argument>
        <argument>app.admin.anexo4.contrato.recarga.por.pos</argument>
        <argument>app.admin.anexo5.contrato.agencia</argument>
        <argument>app.admin.anexo5.arrendaminto.espacios</argument>
        <argument>app.admin.anexo5.contrato.areas.internet</argument>
        <argument>app.admin.anexocps.conexion.centrales.telefonicas</argument>
        <argument>app.admin.anexocps.levantamiento.redes.tecnicas</argument>
        <argument>app.admin.anexocps.servicios.terceros</argument>
        <argument>app.admin.contrato.agencia.persona.juridica</argument>
        <argument>app.admin.contrato.areas.internet</argument>
        <argument>app.admin.contrato.arrendamiento.espacios</argument>
        <argument>app.admin.contrato.arrendamiento.pizarra.privada.pbx</argument>
        <argument>app.admin.contrato.arrendamiento.redes</argument>
        <argument>app.admin.contrato.compra.venta</argument>
        <argument>app.admin.contrato.instalacion.pizarra.pbx</argument>
        <argument>app.admin.contrato.mantenimiento.pizarra.pbx</argument>
        <argument>app.admin.contrato.prestacion.servicios</argument>
        <argument>app.admin.contrato.recarga.por.pos</argument>
        <argument>app.admin.descripcion.productos.servicios</argument>
        <argument>app.admin.facilidades.del.equipo</argument>
        <argument>app.admin.grupos.electrogenos</argument>
        <argument>app.admin.locales</argument>
        <argument>app.admin.mantenimiento.correctivo</argument>
        <argument>app.admin.mantenimiento.preventivo</argument>
        <argument>app.admin.pizarra.pbx</argument>
        <argument>app.admin.protecciones.tierra</argument>
        <argument>app.admin.relacion.antenas.a4</argument>
        <argument>app.admin.relacion.bastidores</argument>
        <argument>app.admin.relacion.equipos</argument>
        <argument>app.admin.relacion.iluminacion.tomacorriente</argument>
        <argument>app.admin.relacion.mastiles.a4</argument>
        <argument>app.admin.relacion.terminaciones.bastidor</argument>
        <argument>app.admin.relacion.torres.a4</argument>
        <argument>app.admin.relacion.vias</argument>
        <argument>app.admin.sistema.corriente.directa</argument>
        <argument>app.admin.sistema.iluminacion.a5</argument>
        <argument>app.admin.sistemas.corriente.alterna</argument>
        <argument>app.admin.tarifas.espacios.arrendados</argument>
        <argument>app.admin.terminaciones</argument>
        <argument>app.admin.tipos.de.mantenimientos</argument>
        <argument>app.admin.tipos.distancias.arrendadas</argument>
        <argument>app.admin.tipos.mantenimientos.correctivos</argument>
        <argument>app.admin.tomacorrientes</argument>
        <argument>app.admin.descripcion.productos.contratados</argument>
        <argument>app.admin.contrato.contactos.telefonicos</argument>
        <argument>app.admin.equipamiento.gsm.pos</argument>
        <argument>app.admin.tarjetas.sim</argument>
        <argument>app.admin.tarifas.conexion.pizarras</argument>
        <argument>app.admin.contrato.comp.vent.pizarra</argument>
      </argument>
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.helper" class="Sonata\AdminBundle\Admin\AdminHelper">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.builder.filter.factory" class="Sonata\AdminBundle\Filter\FilterFactory">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="doctrine_orm_boolean">sonata.admin.orm.filter.type.boolean</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter">sonata.admin.orm.filter.type.callback</argument>
        <argument key="doctrine_orm_callback">sonata.admin.orm.filter.type.callback</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter">sonata.admin.orm.filter.type.choice</argument>
        <argument key="doctrine_orm_choice">sonata.admin.orm.filter.type.choice</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter">sonata.admin.orm.filter.type.model</argument>
        <argument key="doctrine_orm_model">sonata.admin.orm.filter.type.model</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="doctrine_orm_model_autocomplete">sonata.admin.orm.filter.type.model_autocomplete</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\StringFilter">sonata.admin.orm.filter.type.string</argument>
        <argument key="doctrine_orm_string">sonata.admin.orm.filter.type.string</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter">sonata.admin.orm.filter.type.number</argument>
        <argument key="doctrine_orm_number">sonata.admin.orm.filter.type.number</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateFilter">sonata.admin.orm.filter.type.date</argument>
        <argument key="doctrine_orm_date">sonata.admin.orm.filter.type.date</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="doctrine_orm_date_range">sonata.admin.orm.filter.type.date_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="doctrine_orm_datetime">sonata.admin.orm.filter.type.datetime</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter">sonata.admin.orm.filter.type.time</argument>
        <argument key="doctrine_orm_time">sonata.admin.orm.filter.type.time</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="doctrine_orm_datetime_range">sonata.admin.orm.filter.type.datetime_range</argument>
        <argument key="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter">sonata.admin.orm.filter.type.class</argument>
        <argument key="doctrine_orm_class">sonata.admin.orm.filter.type.class</argument>
      </argument>
    </service>
    <service id="sonata.admin.breadcrumbs_builder" class="Sonata\AdminBundle\Admin\BreadcrumbsBuilder">
      <argument type="collection">
        <argument key="child_admin_route">edit</argument>
      </argument>
    </service>
    <service id="sonata.admin.label.strategy.bc" class="Sonata\AdminBundle\Translator\BCLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.native" class="Sonata\AdminBundle\Translator\NativeLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.noop" class="Sonata\AdminBundle\Translator\NoopLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.underscore" class="Sonata\AdminBundle\Translator\UnderscoreLabelTranslatorStrategy"/>
    <service id="sonata.admin.label.strategy.form_component" class="Sonata\AdminBundle\Translator\FormLabelTranslatorStrategy"/>
    <service id="sonata.admin.controller.admin" class="Sonata\AdminBundle\Controller\HelperController">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.helper"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="sonata.admin.audit.manager" class="Sonata\AdminBundle\Model\AuditManager">
      <argument type="service" id="service_container"/>
    </service>
    <service id="sonata.admin.exporter" class="Sonata\AdminBundle\Export\Exporter">
      <deprecated>The service "%service_id%" is deprecated in favor of the "sonata.exporter.exporter" service since version 3.14 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.admin.search.handler" class="Sonata\AdminBundle\Search\SearchHandler">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.event.extension" class="Sonata\AdminBundle\Event\AdminEventExtension">
      <tag name="sonata.admin.extension" global="1"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.lock.extension" class="Sonata\AdminBundle\Admin\Extension\LockExtension">
      <tag name="sonata.admin.extension" global="1"/>
    </service>
    <service id="sonata.admin.twig.global" class="Sonata\AdminBundle\Twig\GlobalVariables">
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.filter_persister.session" class="Sonata\AdminBundle\Filter\Persister\SessionFilterPersister">
      <argument type="service" id="session"/>
    </service>
    <service id="sonata.admin.global_template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.type.admin" class="Sonata\AdminBundle\Form\Type\AdminType">
      <tag name="form.type" alias="sonata_type_admin"/>
    </service>
    <service id="sonata.admin.form.type.model_choice" class="Sonata\AdminBundle\Form\Type\ModelType">
      <tag name="form.type" alias="sonata_type_model"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="sonata.admin.form.type.model_list" class="Sonata\AdminBundle\Form\Type\ModelListType">
      <tag name="form.type" alias="sonata_type_model_list"/>
    </service>
    <service id="sonata.admin.form.type.model_reference" class="Sonata\AdminBundle\Form\Type\ModelReferenceType">
      <tag name="form.type" alias="sonata_type_model_reference"/>
    </service>
    <service id="sonata.admin.form.type.model_hidden" class="Sonata\AdminBundle\Form\Type\ModelHiddenType">
      <tag name="form.type" alias="sonata_type_model_hidden"/>
    </service>
    <service id="sonata.admin.form.type.model_autocomplete" class="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">
      <tag name="form.type" alias="sonata_type_model_autocomplete"/>
    </service>
    <service id="sonata.admin.form.type.collection" class="Sonata\AdminBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_native_collection"/>
    </service>
    <service id="sonata.admin.doctrine_orm.form.type.choice_field_mask" class="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">
      <tag name="form.type" alias="sonata_type_choice_field_mask"/>
    </service>
    <service id="sonata.admin.form.extension.field" class="Sonata\AdminBundle\Form\Extension\Field\Type\FormTypeFieldExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="email"></argument>
        <argument key="textarea"></argument>
        <argument key="text"></argument>
        <argument key="choice"></argument>
        <argument key="integer"></argument>
        <argument key="datetime">sonata-medium-date</argument>
        <argument key="date">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType">sonata-medium-date</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\EmailType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\IntegerType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextareaType"></argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TextType"></argument>
      </argument>
      <argument type="collection">
        <argument key="title_mode">both</argument>
        <argument key="html5_validate">true</argument>
        <argument key="pager_links">5</argument>
        <argument key="sort_admins">false</argument>
        <argument key="confirm_exit">true</argument>
        <argument key="use_select2">true</argument>
        <argument key="use_icheck">true</argument>
        <argument key="use_bootlint">false</argument>
        <argument key="use_stickyforms">true</argument>
        <argument key="form_type">standard</argument>
        <argument key="dropdown_number_groups_per_colums">2</argument>
        <argument key="lock_protection">true</argument>
        <argument key="enable_jms_di_extra_autoregistration">true</argument>
        <argument key="javascripts" type="collection">
          <argument>bundles/sonatacore/vendor/jquery/dist/jquery.js</argument>
          <argument>bundles/sonatacore/vendor/moment/min/moment.min.js</argument>
          <argument>bundles/sonatacore/vendor/bootstrap/dist/js/bootstrap.js</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.js</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/js/bootstrap-datetimepicker.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/jquery-ui.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/ui/minified/i18n/jquery-ui-i18n.min.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery-form/jquery.form.js</argument>
          <argument>bundles/sonataadmin/jquery/jquery.confirmExit.js</argument>
          <argument>bundles/sonataadmin/vendor/jquery.scrollTo/jquery.scrollTo.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/jquery.waypoints.min.js</argument>
          <argument>bundles/sonataadmin/vendor/waypoints/lib/shortcuts/sticky.min.js</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/js/bootstrap-editable.js</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/icheck.min.js</argument>
          <argument>bundles/sonataadmin/vendor/slimScroll/jquery.slimscroll.min.js</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/js/app.min.js</argument>
          <argument>bundles/sonataadmin/Admin.js</argument>
          <argument>bundles/sonataadmin/treeview.js</argument>
          <argument>bundles/sonataformatter/vendor/markitup-markitup/markitup/jquery.markitup.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/markdown/set.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/html/set.js</argument>
          <argument>bundles/sonataformatter/markitup/sets/textile/set.js</argument>
          <argument>bundles/sonataformatter/vendor/ckeditor/ckeditor.js</argument>
          <argument>assets/vendor/hinclude/hinclude.js</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/lib/js/wysihtml5-0.3.0.js</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/src/bootstrap3-wysihtml5.js</argument>
          <argument>assets/vendor/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js</argument>
        </argument>
        <argument key="stylesheets" type="collection">
          <argument>bundles/sonatacore/vendor/bootstrap/dist/css/bootstrap.min.css</argument>
          <argument>bundles/sonatacore/vendor/components-font-awesome/css/font-awesome.min.css</argument>
          <argument>bundles/sonatacore/vendor/ionicons/css/ionicons.min.css</argument>
          <argument>bundles/sonatacore/vendor/eonasdan-bootstrap-datetimepicker/build/css/bootstrap-datetimepicker.min.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2.css</argument>
          <argument>bundles/sonatacore/vendor/select2/select2-bootstrap.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/base/jquery-ui.css</argument>
          <argument>bundles/sonataadmin/vendor/jqueryui/themes/flick/jquery-ui.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/AdminLTE.css</argument>
          <argument>bundles/sonataadmin/vendor/iCheck/skins/square/blue.css</argument>
          <argument>bundles/sonataadmin/vendor/x-editable/dist/bootstrap3-editable/css/bootstrap-editable.css</argument>
          <argument>bundles/sonataadmin/css/styles.css</argument>
          <argument>bundles/sonataadmin/css/layout.css</argument>
          <argument>bundles/sonataadmin/css/tree.css</argument>
          <argument>bundles/sonataformatter/markitup/skins/sonata/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/markdown/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/html/style.css</argument>
          <argument>bundles/sonataformatter/markitup/sets/textile/style.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-purple.min.css</argument>
          <argument>bundles/sonataadmin/vendor/admin-lte/dist/css/skins/skin-purple.min.css</argument>
          <argument>assets/vendor/bootstrap3-wysihtml5/src/bootstrap-wysihtml5.css</argument>
          <argument>assets/vendor/bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css</argument>
        </argument>
        <argument key="role_admin">ROLE_SONATA_ADMIN</argument>
        <argument key="role_super_admin">ROLE_SUPER_ADMIN</argument>
        <argument key="search">true</argument>
      </argument>
    </service>
    <service id="sonata.admin.form.extension.choice" class="Sonata\AdminBundle\Form\Extension\ChoiceTypeExtension">
      <tag name="form.type_extension" alias="choice" extended_type="Symfony\Component\Form\Extension\Core\Type\ChoiceType" extended-type="Symfony\Component\Form\Extension\Core\Type\ChoiceType"/>
    </service>
    <service id="sonata.admin.form.filter.type.number" class="Sonata\AdminBundle\Form\Type\Filter\NumberType">
      <tag name="form.type" alias="sonata_type_filter_number"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.choice" class="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">
      <tag name="form.type" alias="sonata_type_filter_choice"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.default" class="Sonata\AdminBundle\Form\Type\Filter\DefaultType">
      <tag name="form.type" alias="sonata_type_filter_default"/>
    </service>
    <service id="sonata.admin.form.filter.type.date" class="Sonata\AdminBundle\Form\Type\Filter\DateType">
      <tag name="form.type" alias="sonata_type_filter_date"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.daterange" class="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">
      <tag name="form.type" alias="sonata_type_filter_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">
      <tag name="form.type" alias="sonata_type_filter_datetime"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.form.filter.type.datetime_range" class="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_filter_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.admin.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.admin.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.admin.route.path_info" class="Sonata\AdminBundle\Route\PathInfoBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.query_string" class="Sonata\AdminBundle\Route\QueryStringBuilder">
      <argument type="service" id="sonata.admin.audit.manager"/>
    </service>
    <service id="sonata.admin.route.default_generator" class="Sonata\AdminBundle\Route\DefaultRouteGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="sonata.admin.route.cache"/>
    </service>
    <service id="sonata.admin.route.cache" class="Sonata\AdminBundle\Route\RoutesCache">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/sonata/admin</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.route.cache_warmup" class="Sonata\AdminBundle\Route\RoutesCacheWarmUp">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="sonata.admin.route.cache"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.block.admin_list" class="Sonata\AdminBundle\Block\AdminListBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.admin_list</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.global_template_registry"/>
    </service>
    <service id="sonata.admin.block.search_result" class="Sonata\AdminBundle\Block\AdminSearchBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.search_result</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="sonata.admin.search.handler"/>
    </service>
    <service id="sonata.admin.block.stats" class="Sonata\AdminBundle\Block\AdminStatsBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.admin.block.stats</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="sonata.admin.pool"/>
    </service>
    <service id="sonata.admin.menu_builder" class="Sonata\AdminBundle\Menu\MenuBuilder">
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="sonata.admin.sidebar_menu" class="Knp\Menu\MenuItem">
      <tag name="knp_menu.menu" alias="sonata_admin_sidebar"/>
      <factory service="sonata.admin.menu_builder" method="createSidebarMenu"/>
    </service>
    <service id="sonata.admin.menu.group_provider" class="Sonata\AdminBundle\Menu\Provider\GroupMenuProvider" public="false">
      <tag name="knp_menu.provider"/>
      <argument type="service" id="knp_menu.factory"/>
      <argument type="service" id="sonata.admin.pool"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.admin" class="Sonata\AdminBundle\Menu\Matcher\Voter\AdminVoter">
      <tag name="knp_menu.voter"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="sonata.admin.menu.matcher.voter.children" class="Sonata\AdminBundle\Menu\Matcher\Voter\ChildrenVoter">
      <argument type="service" id="knp_menu.matcher"/>
      <deprecated>The "%service_id%" service is deprecated since 3.28 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.admin.menu.matcher.voter.active" class="Sonata\AdminBundle\Menu\Matcher\Voter\ActiveVoter">
      <tag name="knp_menu.voter"/>
    </service>
    <service id="Sonata\AdminBundle\Command\CreateClassCacheCommand" class="Sonata\AdminBundle\Command\CreateClassCacheCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ExplainAdminCommand" class="Sonata\AdminBundle\Command\ExplainAdminCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateAdminCommand" class="Sonata\AdminBundle\Command\GenerateAdminCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\GenerateObjectAclCommand" class="Sonata\AdminBundle\Command\GenerateObjectAclCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\ListAdminCommand" class="Sonata\AdminBundle\Command\ListAdminCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\AdminBundle\Command\SetupAclCommand" class="Sonata\AdminBundle\Command\SetupAclCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.admin.security.handler.noop" class="Sonata\AdminBundle\Security\Handler\NoopSecurityHandler" public="false"/>
    <service id="sonata.admin.security.handler.role" class="Sonata\AdminBundle\Security\Handler\RoleSecurityHandler" public="false">
      <argument type="service" id="security.authorization_checker"/>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
    </service>
    <service id="sonata.admin.security.handler.acl" class="Sonata\AdminBundle\Security\Handler\AclSecurityHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>null</argument>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
      <argument type="collection">
        <argument>ROLE_SUPER_ADMIN</argument>
      </argument>
      <call method="setAdminPermissions">
        <argument type="collection">
          <argument>CREATE</argument>
          <argument>LIST</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>EXPORT</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
        </argument>
      </call>
      <call method="setObjectPermissions">
        <argument type="collection">
          <argument>VIEW</argument>
          <argument>EDIT</argument>
          <argument>DELETE</argument>
          <argument>UNDELETE</argument>
          <argument>OPERATOR</argument>
          <argument>MASTER</argument>
          <argument>OWNER</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.admin.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminAclManipulator">
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.object.manipulator.acl.admin" class="Sonata\AdminBundle\Util\AdminObjectAclManipulator">
      <argument type="service" id="form.factory"/>
      <argument>Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder</argument>
    </service>
    <service id="sonata.admin.entity_manager" class="Doctrine\ORM\EntityManager" public="false">
      <argument>null</argument>
      <factory service="doctrine" method="getManager"/>
    </service>
    <service id="sonata.admin.manager.orm" class="Sonata\DoctrineORMAdminBundle\Model\ModelManager">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.admin.builder.orm_form" class="Sonata\DoctrineORMAdminBundle\Builder\FormContractor">
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.admin.builder.orm_list" class="Sonata\DoctrineORMAdminBundle\Builder\ListBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_list_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/list_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/list_boolean.html.twig</argument>
        <argument key="date">@SonataIntl/CRUD/list_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/list_time.html.twig</argument>
        <argument key="datetime">@SonataIntl/CRUD/list_datetime.html.twig</argument>
        <argument key="text">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="textarea">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/list_email.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/list_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="smallint">@SonataIntl/CRUD/list_decimal.html.twig</argument>
        <argument key="bigint">@SonataIntl/CRUD/list_decimal.html.twig</argument>
        <argument key="integer">@SonataIntl/CRUD/list_decimal.html.twig</argument>
        <argument key="decimal">@SonataIntl/CRUD/list_decimal.html.twig</argument>
        <argument key="identifier">@SonataAdmin/CRUD/list_string.html.twig</argument>
        <argument key="currency">@SonataIntl/CRUD/list_currency.html.twig</argument>
        <argument key="percent">@SonataIntl/CRUD/list_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/list_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/list_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/list_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_list" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_list"/>
    </service>
    <service id="sonata.admin.guesser.orm_list_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_list"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_show" class="Sonata\DoctrineORMAdminBundle\Builder\ShowBuilder">
      <argument type="service" id="sonata.admin.guesser.orm_show_chain"/>
      <argument type="collection">
        <argument key="array">@SonataAdmin/CRUD/show_array.html.twig</argument>
        <argument key="boolean">@SonataAdmin/CRUD/show_boolean.html.twig</argument>
        <argument key="date">@SonataIntl/CRUD/show_date.html.twig</argument>
        <argument key="time">@SonataAdmin/CRUD/show_time.html.twig</argument>
        <argument key="datetime">@SonataIntl/CRUD/show_datetime.html.twig</argument>
        <argument key="text">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="email">@SonataAdmin/CRUD/show_email.html.twig</argument>
        <argument key="trans">@SonataAdmin/CRUD/show_trans.html.twig</argument>
        <argument key="string">@SonataAdmin/CRUD/base_show_field.html.twig</argument>
        <argument key="smallint">@SonataIntl/CRUD/show_decimal.html.twig</argument>
        <argument key="bigint">@SonataIntl/CRUD/show_decimal.html.twig</argument>
        <argument key="integer">@SonataIntl/CRUD/show_decimal.html.twig</argument>
        <argument key="decimal">@SonataIntl/CRUD/show_decimal.html.twig</argument>
        <argument key="currency">@SonataIntl/CRUD/show_currency.html.twig</argument>
        <argument key="percent">@SonataIntl/CRUD/show_percent.html.twig</argument>
        <argument key="choice">@SonataAdmin/CRUD/show_choice.html.twig</argument>
        <argument key="url">@SonataAdmin/CRUD/show_url.html.twig</argument>
        <argument key="html">@SonataAdmin/CRUD/show_html.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.admin.guesser.orm_show" class="Sonata\DoctrineORMAdminBundle\Guesser\TypeGuesser">
      <tag name="sonata.admin.guesser.orm_show"/>
    </service>
    <service id="sonata.admin.guesser.orm_show_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_show"/>
      </argument>
    </service>
    <service id="sonata.admin.builder.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Builder\DatagridBuilder">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="sonata.admin.builder.filter.factory"/>
      <argument type="service" id="sonata.admin.guesser.orm_datagrid_chain"/>
      <argument>true</argument>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid" class="Sonata\DoctrineORMAdminBundle\Guesser\FilterTypeGuesser">
      <tag name="sonata.admin.guesser.orm_datagrid"/>
    </service>
    <service id="sonata.admin.guesser.orm_datagrid_chain" class="Sonata\AdminBundle\Guesser\TypeGuesserChain">
      <argument type="collection">
        <argument type="service" id="sonata.admin.guesser.orm_datagrid"/>
      </argument>
    </service>
    <service id="sonata.admin.orm.filter.type.boolean" class="Sonata\DoctrineORMAdminBundle\Filter\BooleanFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_boolean"/>
    </service>
    <service id="sonata.admin.orm.filter.type.callback" class="Sonata\DoctrineORMAdminBundle\Filter\CallbackFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_callback"/>
    </service>
    <service id="sonata.admin.orm.filter.type.choice" class="Sonata\DoctrineORMAdminBundle\Filter\ChoiceFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_choice"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model" class="Sonata\DoctrineORMAdminBundle\Filter\ModelFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model"/>
    </service>
    <service id="sonata.admin.orm.filter.type.model_autocomplete" class="Sonata\DoctrineORMAdminBundle\Filter\ModelAutocompleteFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_model_autocomplete"/>
    </service>
    <service id="sonata.admin.orm.filter.type.string" class="Sonata\DoctrineORMAdminBundle\Filter\StringFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_string"/>
    </service>
    <service id="sonata.admin.orm.filter.type.number" class="Sonata\DoctrineORMAdminBundle\Filter\NumberFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_number"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date" class="Sonata\DoctrineORMAdminBundle\Filter\DateFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date"/>
    </service>
    <service id="sonata.admin.orm.filter.type.date_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_date_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime"/>
    </service>
    <service id="sonata.admin.orm.filter.type.time" class="Sonata\DoctrineORMAdminBundle\Filter\TimeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_time"/>
    </service>
    <service id="sonata.admin.orm.filter.type.datetime_range" class="Sonata\DoctrineORMAdminBundle\Filter\DateTimeRangeFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_datetime_range"/>
    </service>
    <service id="sonata.admin.orm.filter.type.class" class="Sonata\DoctrineORMAdminBundle\Filter\ClassFilter" shared="false">
      <tag name="sonata.admin.filter.type" alias="doctrine_orm_class"/>
    </service>
    <service id="sonata.admin.manipulator.acl.object.orm" class="Sonata\DoctrineORMAdminBundle\Util\ObjectAclManipulator"/>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" public="false">
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="templating.engine.twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setSerializeNullStrategy">
        <argument>false</argument>
      </call>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler" public="false">
      <argument>JSON_CALLBACK</argument>
    </service>
    <service id="fos_rest.routing.loader.directory" class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>false</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>false</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>json</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader" public="false">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>false</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Inflector\DoctrineInflector" public="false"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" public="false" lazy="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter" public="false" lazy="true">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="fos_rest.form.extension.csrf_disable" class="FOS\RestBundle\Form\Extension\DisableCSRFExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.token_storage"/>
      <argument>ROLE_API</argument>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="fos_rest.exception_listener" class="FOS\RestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.exception.twig_controller:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
    </service>
    <service id="fos_rest.exception.controller" class="FOS\RestBundle\Controller\ExceptionController">
      <argument type="service" id="fos_rest.view_handler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.exception.twig_controller" class="FOS\RestBundle\Controller\TwigExceptionController">
      <argument type="service" id="fos_rest.view_handler"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
      <argument type="service" id="templating.engine.twig"/>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.exception.messages_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Exception\NotFoundHttpException">true</argument>
      </argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.jms" class="FOS\RestBundle\Serializer\Normalizer\ExceptionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.symfony" class="FOS\RestBundle\Serializer\Normalizer\ExceptionNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.view_handler" class="FOS\RestBundle\View\ViewHandler">
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="templating.engine.twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <call method="setSerializeNullStrategy">
        <argument>false</argument>
      </call>
      <call method="registerHandler">
        <argument>jsonp</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.view_handler.jsonp"/>
          <argument>createResponse</argument>
        </argument>
      </call>
    </service>
    <service id="fos_rest.mime_type_listener" class="FOS\RestBundle\EventListener\MimeTypeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="200"/>
      <argument type="collection">
        <argument key="json" type="collection">
          <argument>application/json</argument>
          <argument>application/x-json</argument>
        </argument>
      </argument>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_rest.view_handler"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id="service_locator.abe0bbdbe20b8d2fb2cfe6204cbb7ed0"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
        <argument key="xml">fos_rest.decoder.xml</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id="service_locator.abe0bbdbe20b8d2fb2cfe6204cbb7ed0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service" id="fos_rest.decoder.json"/>
        <argument key="fos_rest.decoder.xml" type="service" id="fos_rest.decoder.xml"/>
      </argument>
    </service>
    <service id="fos_rest.format_listener" class="FOS\RestBundle\EventListener\FormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="34"/>
      <argument type="service" id="fos_rest.format_negotiator"/>
    </service>
    <service id="fos_rest.format_negotiator" class="FOS\RestBundle\Negotiation\FormatNegotiator">
      <argument type="service" id="request_stack"/>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.6d27357678da78ac461e8b851ac5bf83a1f9471f9d410dff7d760712cb7770b80848bf9c"/>
        <argument type="collection">
          <argument key="methods">null</argument>
          <argument key="priorities" type="collection">
            <argument>html</argument>
            <argument>json</argument>
          </argument>
          <argument key="fallback_format">html</argument>
          <argument key="attributes" type="collection"/>
          <argument key="prefer_extension">2.0</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386"/>
        <argument type="collection">
          <argument key="priorities" type="collection">
            <argument>json</argument>
            <argument>xml</argument>
            <argument>*/*</argument>
            <argument>*</argument>
          </argument>
          <argument key="fallback_format">json</argument>
          <argument key="prefer_extension">2.0</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="stop">false</argument>
        </argument>
      </call>
      <call method="add">
        <argument type="service" id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478"/>
        <argument type="collection">
          <argument key="stop">true</argument>
          <argument key="methods">null</argument>
          <argument key="attributes" type="collection"/>
          <argument key="prefer_extension">2.0</argument>
          <argument key="fallback_format">html</argument>
          <argument key="priorities" type="collection"/>
        </argument>
      </call>
    </service>
    <service id="fos_rest.format_request_matcher" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false" abstract="true"/>
    <service id="fos_rest.param_fetcher_listener" class="FOS\RestBundle\EventListener\ParamFetcherListener">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController" priority="5"/>
      <argument type="service" id="fos_rest.request.param_fetcher"/>
      <argument>false</argument>
    </service>
    <service id="hateoas.link_factory" class="Hateoas\Factory\LinkFactory" public="false">
      <argument type="service" id="hateoas.expression.evaluator"/>
      <argument type="service" id="hateoas.generator.registry"/>
    </service>
    <service id="hateoas.links_factory" class="Hateoas\Factory\LinksFactory" public="false">
      <argument type="service" id="hateoas.configuration.relations_repository"/>
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.embeds_factory" class="Hateoas\Factory\EmbeddedsFactory" public="false">
      <argument type="service" id="hateoas.configuration.relations_repository"/>
      <argument type="service" id="hateoas.expression.evaluator"/>
      <argument type="service" id="hateoas.serializer.exclusion_manager"/>
    </service>
    <service id="hateoas.expression.evaluator" class="Bazinga\Bundle\HateoasBundle\Hateoas\Expression\LazyFunctionExpressionEvaluator">
      <argument type="service" id="bazinga_hateoas.expression_language"/>
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
      <call method="setContextVariable">
        <argument>container</argument>
        <argument type="service" id="service_container"/>
      </call>
      <call method="registerFunctionId">
        <argument>hateoas.expression.link</argument>
      </call>
    </service>
    <service id="bazinga_hateoas.expression_language" class="Bazinga\Bundle\HateoasBundle\ExpressionLanguage\ExpressionLanguage"/>
    <service id="hateoas.expression.link" class="Hateoas\Expression\LinkExpressionFunction">
      <tag name="hateoas.expression_function"/>
      <argument type="service" id="hateoas.helper.link"/>
    </service>
    <service id="hateoas.serializer.xml" class="Hateoas\Serializer\XmlSerializer" public="false">
      <call method="setMetadataFactory">
        <argument type="service" id="jms_serializer.metadata_factory"/>
      </call>
    </service>
    <service id="hateoas.serializer.json_hal" class="Hateoas\Serializer\JsonHalSerializer" public="false"/>
    <service id="hateoas.serializer.exclusion_manager" class="Hateoas\Serializer\ExclusionManager">
      <argument type="service" id="hateoas.expression.evaluator"/>
    </service>
    <service id="hateoas.event_subscriber.xml" class="Hateoas\Serializer\EventSubscriber\XmlEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="hateoas.serializer.xml"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
    </service>
    <service id="hateoas.event_subscriber.json" class="Hateoas\Serializer\EventSubscriber\JsonEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="hateoas.serializer.json_hal"/>
      <argument type="service" id="hateoas.links_factory"/>
      <argument type="service" id="hateoas.embeds_factory"/>
      <argument type="service" id="hateoas.inline_deferrer.embeds"/>
      <argument type="service" id="hateoas.inline_deferrer.links"/>
    </service>
    <service id="hateoas.inline_deferrer.embeds" class="Hateoas\Serializer\Metadata\InlineDeferrer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
    </service>
    <service id="hateoas.inline_deferrer.links" class="Hateoas\Serializer\Metadata\InlineDeferrer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.chain" class="Hateoas\Configuration\Provider\Resolver\ChainResolver" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\MethodResolver" public="false">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\StaticMethodResolver" public="false">
            <tag name="hateoas.relation_provider"/>
          </service>
        </argument>
        <argument type="service">
          <service class="Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver" public="false">
            <tag name="hateoas.relation_provider"/>
            <argument type="service" id="service_container"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="hateoas.configuration.provider.resolver.method" class="Hateoas\Configuration\Provider\Resolver\MethodResolver" public="false">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.static_method" class="Hateoas\Configuration\Provider\Resolver\StaticMethodResolver" public="false">
      <tag name="hateoas.relation_provider"/>
    </service>
    <service id="hateoas.configuration.provider.resolver.symfony_container" class="Hateoas\Configuration\Provider\Resolver\SymfonyContainerResolver" public="false">
      <tag name="hateoas.relation_provider"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="hateoas.configuration.relation_provider" class="Hateoas\Configuration\Provider\RelationProvider" public="false">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="hateoas.configuration.provider.resolver.chain"/>
    </service>
    <service id="hateoas.configuration.relations_repository" class="Hateoas\Configuration\RelationsRepository" public="false">
      <argument type="service" id="hateoas.configuration.metadata_factory"/>
      <argument type="service" id="hateoas.configuration.relation_provider"/>
    </service>
    <service id="hateoas.configuration.metadata.yaml_driver" class="Hateoas\Configuration\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="hateoas.configuration.metadata.xml_driver" class="Hateoas\Configuration\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="hateoas.configuration.metadata.annotation_driver" class="Hateoas\Configuration\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="hateoas.configuration.metadata.extension_driver" class="Hateoas\Configuration\Metadata\Driver\ExtensionDriver" public="false">
      <argument type="service" id="hateoas.configuration.metadata.annotation_driver"/>
    </service>
    <service id="hateoas.configuration.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="hateoas.configuration.metadata.yaml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.xml_driver"/>
        <argument type="service" id="hateoas.configuration.metadata.extension_driver"/>
      </argument>
    </service>
    <service id="hateoas.configuration.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/hateoas</argument>
    </service>
    <service id="hateoas.configuration.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="hateoas.configuration.metadata.chain_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="hateoas.configuration.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="hateoas.generator.registry" class="Hateoas\UrlGenerator\UrlGeneratorRegistry">
      <argument type="service" id="hateoas.generator.symfony"/>
    </service>
    <service id="hateoas.generator.symfony" class="Hateoas\UrlGenerator\SymfonyUrlGenerator">
      <argument type="service" id="router.default"/>
    </service>
    <service id="hateoas.helper.link" class="Hateoas\Helper\LinkHelper">
      <argument type="service" id="hateoas.link_factory"/>
      <argument type="service" id="hateoas.configuration.relations_repository"/>
    </service>
    <service id="hateoas.twig.link" class="Hateoas\Twig\Extension\LinkExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="hateoas.helper.link"/>
    </service>
    <service id="nelmio_api_doc.formatter.abstract_formatter" class="Nelmio\ApiDocBundle\Formatter\AbstractFormatter" abstract="true"/>
    <service id="nelmio_api_doc.formatter.markdown_formatter" class="Nelmio\ApiDocBundle\Formatter\MarkdownFormatter"/>
    <service id="nelmio_api_doc.formatter.simple_formatter" class="Nelmio\ApiDocBundle\Formatter\SimpleFormatter"/>
    <service id="nelmio_api_doc.formatter.html_formatter" class="Nelmio\ApiDocBundle\Formatter\HtmlFormatter">
      <call method="setTemplatingEngine">
        <argument type="service" id="templating.engine.twig"/>
      </call>
      <call method="setMotdTemplate">
        <argument>NelmioApiDocBundle::Components/motd.html.twig</argument>
      </call>
      <call method="setApiName">
        <argument>System API</argument>
      </call>
      <call method="setEnableSandbox">
        <argument>true</argument>
      </call>
      <call method="setEndpoint">
        <argument>null</argument>
      </call>
      <call method="setRequestFormatMethod">
        <argument>accept_header</argument>
      </call>
      <call method="setRequestFormats">
        <argument type="collection">
          <argument key="json">application/json</argument>
          <argument key="xml">application/xml</argument>
        </argument>
      </call>
      <call method="setDefaultRequestFormat">
        <argument>json</argument>
      </call>
      <call method="setAcceptType">
        <argument>null</argument>
      </call>
      <call method="setBodyFormats">
        <argument type="collection">
          <argument>form</argument>
          <argument>json</argument>
        </argument>
      </call>
      <call method="setDefaultBodyFormat">
        <argument>form</argument>
      </call>
      <call method="setAuthentication">
        <argument type="collection">
          <argument key="delivery">http</argument>
          <argument key="type">bearer</argument>
          <argument key="name">Authorization</argument>
          <argument key="custom_endpoint">false</argument>
        </argument>
      </call>
      <call method="setDefaultSectionsOpened">
        <argument>true</argument>
      </call>
    </service>
    <service id="nelmio_api_doc.formatter.swagger_formatter" class="Nelmio\ApiDocBundle\Formatter\SwaggerFormatter">
      <argument>dot_notation</argument>
      <call method="setBasePath">
        <argument>/api</argument>
      </call>
      <call method="setApiVersion">
        <argument>0.1</argument>
      </call>
      <call method="setSwaggerVersion">
        <argument>1.2</argument>
      </call>
      <call method="setInfo">
        <argument type="collection">
          <argument key="title">Symfony2</argument>
          <argument key="description">My awesome Symfony2 app!</argument>
          <argument key="TermsOfServiceUrl">null</argument>
          <argument key="contact">null</argument>
          <argument key="license">null</argument>
          <argument key="licenseUrl">null</argument>
        </argument>
      </call>
      <call method="setAuthenticationConfig">
        <argument type="collection">
          <argument key="delivery">http</argument>
          <argument key="type">bearer</argument>
          <argument key="name">Authorization</argument>
          <argument key="custom_endpoint">false</argument>
        </argument>
      </call>
    </service>
    <service id="nelmio_api_doc.doc_comment_extractor" class="Nelmio\ApiDocBundle\Util\DocCommentExtractor"/>
    <service id="nelmio_api_doc.controller_name_parser" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="nelmio_api_doc.extractor.api_doc_extractor" class="Nelmio\ApiDocBundle\Extractor\ApiDocExtractor">
      <argument type="service" id="service_container"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
      <argument type="service" id="nelmio_api_doc.controller_name_parser"/>
      <argument type="collection">
        <argument type="service" id="nelmio_api_doc.extractor.handler.fos_rest"/>
        <argument type="service" id="nelmio_api_doc.extractor.handler.jms_security"/>
        <argument type="service" id="nelmio_api_doc.extractor.handler.sensio_framework_extra"/>
        <argument type="service" id="nelmio_api_doc.extractor.handler.phpdoc"/>
      </argument>
      <argument type="collection"/>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.json_serializable_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.collection_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_errors_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.form_type_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.validation_parser"/>
      </call>
      <call method="addParser">
        <argument type="service" id="nelmio_api_doc.parser.jms_metadata_parser"/>
      </call>
    </service>
    <service id="nelmio_api_doc.form.extension.description_form_type_extension" class="Nelmio\ApiDocBundle\Form\Extension\DescriptionFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.twig.extension.extra_markdown" class="Nelmio\ApiDocBundle\Twig\Extension\MarkdownExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="nelmio_api_doc.extractor.handler.fos_rest" class="Nelmio\ApiDocBundle\Extractor\Handler\FosRestHandler" public="false">
      <tag name="nelmio_api_doc.extractor.handler"/>
    </service>
    <service id="nelmio_api_doc.extractor.handler.jms_security" class="Nelmio\ApiDocBundle\Extractor\Handler\JmsSecurityExtraHandler" public="false">
      <tag name="nelmio_api_doc.extractor.handler"/>
    </service>
    <service id="nelmio_api_doc.extractor.handler.sensio_framework_extra" class="Nelmio\ApiDocBundle\Extractor\Handler\SensioFrameworkExtraHandler" public="false">
      <tag name="nelmio_api_doc.extractor.handler"/>
    </service>
    <service id="nelmio_api_doc.extractor.handler.phpdoc" class="Nelmio\ApiDocBundle\Extractor\Handler\PhpDocHandler" public="false">
      <tag name="nelmio_api_doc.extractor.handler"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
    </service>
    <service id="nelmio_api_doc.parser.collection_parser" class="Nelmio\ApiDocBundle\Parser\CollectionParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.form_errors_parser" class="Nelmio\ApiDocBundle\Parser\FormErrorsParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
    </service>
    <service id="nelmio_api_doc.parser.json_serializable_parser" class="Nelmio\ApiDocBundle\Parser\JsonSerializableParser">
      <tag name="nelmio_api_doc.extractor.parser" priority="1"/>
    </service>
    <service id="nelmio_api_doc.event_listener.request" class="Nelmio\ApiDocBundle\EventListener\RequestListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <argument type="service" id="nelmio_api_doc.extractor.api_doc_extractor"/>
      <argument type="service" id="nelmio_api_doc.formatter.html_formatter"/>
      <argument>_doc</argument>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument type="collection">
        <argument key="^/api/" type="collection">
          <argument key="allow_origin">true</argument>
          <argument key="allow_headers">true</argument>
          <argument key="allow_methods" type="collection">
            <argument>GET</argument>
            <argument>POST</argument>
            <argument>PUT</argument>
            <argument>PATCH</argument>
            <argument>DELETE</argument>
            <argument>OPTIONS</argument>
          </argument>
          <argument key="max_age">3600</argument>
        </argument>
        <argument key="^/" type="collection">
          <argument key="origin_regex">true</argument>
          <argument key="allow_origin" type="collection">
            <argument>^http://localhost:[0-9]+</argument>
          </argument>
          <argument key="allow_headers" type="collection">
            <argument>x-custom-auth</argument>
          </argument>
          <argument key="allow_methods" type="collection">
            <argument>GET</argument>
            <argument>POST</argument>
            <argument>PUT</argument>
            <argument>PATCH</argument>
            <argument>DELETE</argument>
            <argument>OPTIONS</argument>
          </argument>
          <argument key="max_age">3600</argument>
          <argument key="hosts" type="collection">
            <argument>^api\.</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="allow_origin" type="collection"/>
        <argument key="allow_credentials">false</argument>
        <argument key="allow_headers" type="collection"/>
        <argument key="expose_headers" type="collection"/>
        <argument key="allow_methods" type="collection"/>
        <argument key="max_age">0</argument>
        <argument key="hosts" type="collection"/>
        <argument key="origin_regex">false</argument>
        <argument key="forced_allow_origin_value">null</argument>
      </argument>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id="service_locator.30d2eb941138ac7443d6cbf6f10bad0f"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>hateoas.event_subscriber.xml</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>xml</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>hateoas.event_subscriber.json</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>json</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id="service_locator.9fe5127d9c35c80f407d2a894c6f88cd"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="sonata_user_user_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="Exception" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>serializeMap</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToyml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToyml</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_context_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>serializeObjectToId</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="sonata_user_user_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.user.serializer.handler.user</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_media_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.media</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_media_gallery_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.media.serializer.handler.gallery</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromyml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromyml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromyml</argument>
            </argument>
          </argument>
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Sequence" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeSequence</argument>
            </argument>
          </argument>
          <argument key="PhpCollection\Map" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.php_collection_handler</argument>
              <argument>deserializeMap</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_category_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.category</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_collection_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.collection</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_tag_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.tag</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
          <argument key="sonata_classification_context_id" type="collection">
            <argument key="json" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>sonata.classification.serializer.handler.context</argument>
              <argument>deserializeObjectFromId</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>Europe/Berlin</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.php_collection_handler" class="JMS\Serializer\Handler\PhpCollectionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection">
        <argument key="Sonata\UserBundle">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\user-bundle/Resources/config/serializer</argument>
        <argument key="Sonata\MediaBundle">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\media-bundle\src/Resources/config/serializer</argument>
        <argument key="Sonata\BlockBundle">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\block-bundle\src/Resources/config/serializer</argument>
        <argument key="Sonata\ClassificationBundle">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\classification-bundle\src/Resources/config/serializer</argument>
        <argument key="Sonata\DatagridBundle">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\sonata-project\datagrid-bundle\src/Resources/config/serializer</argument>
      </argument>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.php_driver" class="JMS\Serializer\Metadata\Driver\PhpDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.php_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.cache_naming_strategy" class="JMS\Serializer\Naming\CacheNamingStrategy" public="false">
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_serialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_serialization_visitor</argument>
            <argument key="yml">jms_serializer.yaml_serialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service">
        <service class="JMS\DiExtraBundle\DependencyInjection\Collection\LazyServiceMap">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument key="json">jms_serializer.json_deserialization_visitor</argument>
            <argument key="xml">jms_serializer.xml_deserialization_visitor</argument>
          </argument>
        </service>
      </argument>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <call method="setSerializationContextFactory">
        <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      </call>
      <call method="setDeserializationContextFactory">
        <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      </call>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false"/>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false"/>
    <service id="jms_serializer.accessor_strategy.expression" class="JMS\Serializer\Accessor\ExpressionAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\JsonSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\JsonDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\XmlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\XmlDeserializationVisitor">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <call method="setDoctypeWhitelist">
        <argument type="collection"/>
      </call>
    </service>
    <service id="jms_serializer.yaml_serialization_visitor" class="JMS\Serializer\YamlSerializationVisitor">
      <tag name="jms_serializer.serialization_visitor" format="yml"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="jms_serializer.accessor_strategy.expression"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="Sonata\EasyExtendsBundle\Command\DumpMappingCommand" class="Sonata\EasyExtendsBundle\Command\DumpMappingCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\EasyExtendsBundle\Command\GenerateCommand" class="Sonata\EasyExtendsBundle\Command\GenerateCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.easy_extends.generator.bundle" class="Sonata\EasyExtendsBundle\Generator\BundleGenerator"/>
    <service id="sonata.easy_extends.generator.orm" class="Sonata\EasyExtendsBundle\Generator\OrmGenerator"/>
    <service id="sonata.easy_extends.generator.odm" class="Sonata\EasyExtendsBundle\Generator\OdmGenerator"/>
    <service id="sonata.easy_extends.generator.phpcr" class="Sonata\EasyExtendsBundle\Generator\PHPCRGenerator"/>
    <service id="sonata.easy_extends.generator.serializer" class="Sonata\EasyExtendsBundle\Generator\SerializerGenerator"/>
    <service id="sonata.easy_extends.doctrine.mapper" class="Sonata\EasyExtendsBundle\Mapper\DoctrineORMMapper">
      <tag name="doctrine.event_subscriber"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection"/>
      <call method="addAssociation">
        <argument>AppBundle\Entity\User\User</argument>
        <argument>mapManyToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">groups</argument>
            <argument key="targetEntity">AppBundle\Entity\User\Group</argument>
            <argument key="cascade" type="collection"/>
            <argument key="joinTable" type="collection">
              <argument key="name">security__user_group</argument>
              <argument key="joinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">user_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
              <argument key="inverseJoinColumns" type="collection">
                <argument type="collection">
                  <argument key="name">group_id</argument>
                  <argument key="referencedColumnName">id</argument>
                  <argument key="onDelete">CASCADE</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Media</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">media</argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Media</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">category</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">category_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\GalleryHasMedia</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">gallery</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Gallery</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">gallery_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">galleryHasMedias</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Media\Gallery</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">galleryHasMedias</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\GalleryHasMedia</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">gallery</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Category</argument>
        <argument>mapOneToMany</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">children</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">parent</argument>
            <argument key="orphanRemoval">true</argument>
            <argument key="orderBy" type="collection">
              <argument key="position">ASC</argument>
            </argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Category</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">parent</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Category</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
              <argument>refresh</argument>
              <argument>merge</argument>
              <argument>detach</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">children</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">parent_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">CASCADE</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Tag</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addAssociation">
        <argument>AppBundle\Entity\Classification\Collection</argument>
        <argument>mapManyToOne</argument>
        <argument type="collection">
          <argument type="collection">
            <argument key="fieldName">context</argument>
            <argument key="targetEntity">AppBundle\Entity\Classification\Context</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">context</argument>
                <argument key="referencedColumnName">id</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
          <argument type="collection">
            <argument key="fieldName">media</argument>
            <argument key="targetEntity">AppBundle\Entity\Media\Media</argument>
            <argument key="cascade" type="collection">
              <argument>persist</argument>
            </argument>
            <argument key="mappedBy">null</argument>
            <argument key="inversedBy">null</argument>
            <argument key="joinColumns" type="collection">
              <argument type="collection">
                <argument key="name">media_id</argument>
                <argument key="referencedColumnName">id</argument>
                <argument key="onDelete">SET NULL</argument>
              </argument>
            </argument>
            <argument key="orphanRemoval">false</argument>
          </argument>
        </argument>
      </call>
      <call method="addUnique">
        <argument>AppBundle\Entity\Classification\Tag</argument>
        <argument>tag_context</argument>
        <argument type="collection">
          <argument>slug</argument>
          <argument>context</argument>
        </argument>
      </call>
      <call method="addUnique">
        <argument>AppBundle\Entity\Classification\Collection</argument>
        <argument>tag_collection</argument>
        <argument type="collection">
          <argument>slug</argument>
          <argument>context</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.core.date.moment_format_converter" class="Sonata\CoreBundle\Date\MomentFormatConverter"/>
    <service id="sonata.core.flashmessage.manager" class="Sonata\CoreBundle\FlashMessage\FlashManager">
      <tag name="sonata.status.renderer"/>
      <argument type="service" id="session"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument key="error" type="collection"/>
        <argument key="success" type="collection">
          <argument key="success" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_success" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_success" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
          <argument key="fos_user_success" type="collection">
            <argument key="domain">FOSUserBundle</argument>
          </argument>
        </argument>
        <argument key="warning" type="collection">
          <argument key="warning" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_info" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
        </argument>
        <argument key="danger" type="collection">
          <argument key="error" type="collection">
            <argument key="domain">SonataCoreBundle</argument>
          </argument>
          <argument key="sonata_flash_error" type="collection">
            <argument key="domain">SonataAdminBundle</argument>
          </argument>
          <argument key="sonata_user_error" type="collection">
            <argument key="domain">SonataUserBundle</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="error">danger</argument>
        <argument key="success">success</argument>
        <argument key="warning">warning</argument>
        <argument key="danger">danger</argument>
      </argument>
    </service>
    <service id="sonata.core.flashmessage.twig.extension" class="Sonata\CoreBundle\Twig\Extension\FlashMessageExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.core.flashmessage.manager"/>
    </service>
    <service id="sonata.core.form.type.array" class="Sonata\CoreBundle\Form\Type\ImmutableArrayType">
      <tag name="form.type" alias="sonata_type_immutable_array"/>
    </service>
    <service id="sonata.core.form.type.boolean" class="Sonata\CoreBundle\Form\Type\BooleanType">
      <tag name="form.type" alias="sonata_type_boolean"/>
    </service>
    <service id="sonata.core.form.type.collection" class="Sonata\CoreBundle\Form\Type\CollectionType">
      <tag name="form.type" alias="sonata_type_collection"/>
    </service>
    <service id="sonata.core.form.type.translatable_choice" class="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">
      <tag name="form.type" alias="sonata_type_translatable_choice"/>
      <argument type="service" id="translator.data_collector"/>
      <deprecated>The "%service_id%" service is deprecated since 2.2.0 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.core.form.type.date_range" class="Sonata\CoreBundle\Form\Type\DateRangeType">
      <tag name="form.type" alias="sonata_type_date_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range" class="Sonata\CoreBundle\Form\Type\DateTimeRangeType">
      <tag name="form.type" alias="sonata_type_datetime_range"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_picker" class="Sonata\CoreBundle\Form\Type\DatePickerType">
      <tag name="form.type" alias="sonata_type_date_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_picker" class="Sonata\CoreBundle\Form\Type\DateTimePickerType">
      <tag name="form.type" alias="sonata_type_datetime_picker"/>
      <argument type="service" id="sonata.core.date.moment_format_converter"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.date_range_picker" class="Sonata\CoreBundle\Form\Type\DateRangePickerType">
      <tag name="form.type" alias="sonata_type_date_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.datetime_range_picker" class="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">
      <tag name="form.type" alias="sonata_type_datetime_range_picker"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.equal" class="Sonata\CoreBundle\Form\Type\EqualType">
      <tag name="form.type" alias="sonata_type_equal"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="sonata.core.form.type.color_selector" class="Sonata\CoreBundle\Form\Type\ColorSelectorType">
      <tag name="form.type" alias="sonata_type_color_selector"/>
      <deprecated>The "%service_id%" service is deprecated since 3.5 and will be removed in 4.0.</deprecated>
    </service>
    <service id="sonata.core.form.type.color" class="Sonata\CoreBundle\Form\Type\ColorType">
      <tag name="form.type" alias="sonata_type_color"/>
    </service>
    <service id="sonata.core.validator.inline" class="Sonata\CoreBundle\Validator\InlineValidator">
      <tag name="validator.constraint_validator" alias="sonata.core.validator.inline"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="validator.validator_factory"/>
    </service>
    <service id="sonata.core.twig.extension.wrapping" class="Sonata\CoreBundle\Twig\Extension\FormTypeExtension">
      <tag name="twig.extension"/>
      <argument>standard</argument>
    </service>
    <service id="sonata.core.twig.extension.text" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTextExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.status_extension" class="Sonata\CoreBundle\Twig\Extension\StatusExtension">
      <tag name="twig.extension"/>
      <call method="addStatusService">
        <argument type="service" id="sonata.core.flashmessage.manager"/>
      </call>
    </service>
    <service id="sonata.core.twig.deprecated_template_extension" class="Sonata\CoreBundle\Twig\Extension\DeprecatedTemplateExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="sonata.core.twig.template_extension" class="Sonata\CoreBundle\Twig\Extension\TemplateExtension">
      <tag name="twig.extension"/>
      <argument>true</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="sonata.core.model.adapter.chain"/>
    </service>
    <service id="sonata.core.model.adapter.doctrine_orm" class="Sonata\CoreBundle\Model\Adapter\DoctrineORMAdapter" public="false">
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="sonata.core.model.adapter.chain" class="Sonata\CoreBundle\Model\Adapter\AdapterChain">
      <call method="addAdapter">
        <argument type="service" id="sonata.core.model.adapter.doctrine_orm"/>
      </call>
    </service>
    <service id="sonata.core.slugify.cocur" class="Cocur\Slugify\Slugify">
      <deprecated>The "%service_id%" service is deprecated. You should stop using it, as it will soon be removed.</deprecated>
    </service>
    <service id="sonata.core.slugify.native" class="Sonata\CoreBundle\Component\NativeSlugify">
      <deprecated>The "%service_id%" service is deprecated since 2.3 and will be removed in 4.0.</deprecated>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand" class="Sonata\CoreBundle\Command\SonataDumpDoctrineMetaCommand">
      <tag name="console.command"/>
    </service>
    <service id="Sonata\CoreBundle\Command\SonataListFormMappingCommand" class="Sonata\CoreBundle\Command\SonataListFormMappingCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.intl.locale_detector.request_stack" class="Sonata\IntlBundle\Locale\RequestStackDetector">
      <argument type="service" id="request_stack"/>
      <argument>es</argument>
    </service>
    <service id="sonata.intl.templating.helper.locale" class="Sonata\IntlBundle\Templating\Helper\LocaleHelper">
      <tag name="templating.helper" alias="locale"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.number" class="Sonata\IntlBundle\Templating\Helper\NumberHelper">
      <tag name="templating.helper" alias="number"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.templating.helper.datetime" class="Sonata\IntlBundle\Templating\Helper\DateTimeHelper">
      <tag name="templating.helper" alias="datetime"/>
      <argument type="service" id="sonata.intl.timezone_detector.chain"/>
      <argument>UTF-8</argument>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
    </service>
    <service id="sonata.intl.twig.extension.locale" class="Sonata\IntlBundle\Twig\Extension\LocaleExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.intl.templating.helper.locale"/>
    </service>
    <service id="sonata.intl.twig.extension.number" class="Sonata\IntlBundle\Twig\Extension\NumberExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.intl.templating.helper.number"/>
    </service>
    <service id="sonata.intl.twig.extension.datetime" class="Sonata\IntlBundle\Twig\Extension\DateTimeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.intl.templating.helper.datetime"/>
    </service>
    <service id="sonata.intl.timezone_detector.chain" class="Sonata\IntlBundle\Timezone\ChainTimezoneDetector">
      <argument>Europe/Berlin</argument>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.user"/>
      </call>
      <call method="addDetector">
        <argument type="service" id="sonata.intl.timezone_detector.locale"/>
      </call>
    </service>
    <service id="sonata.intl.timezone_detector.user" class="Sonata\IntlBundle\Timezone\UserBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="user"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="sonata.intl.timezone_detector.locale" class="Sonata\IntlBundle\Timezone\LocaleBasedTimezoneDetector">
      <tag name="sonata_intl.timezone_detector" alias="locale"/>
      <argument type="service" id="sonata.intl.locale_detector.request_stack"/>
      <argument type="collection"/>
    </service>
    <service id="sonata.formatter.pool" class="Sonata\FormatterBundle\Formatter\Pool">
      <argument>markdown</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
      <call method="add">
        <argument>markdown</argument>
        <argument type="service" id="sonata.formatter.text.markdown"/>
        <argument type="service" id="sonata.formatter.twig.env.markdown"/>
      </call>
      <call method="add">
        <argument>text</argument>
        <argument type="service" id="sonata.formatter.text.text"/>
        <argument type="service" id="sonata.formatter.twig.env.text"/>
      </call>
      <call method="add">
        <argument>rawhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
      </call>
      <call method="add">
        <argument>richhtml</argument>
        <argument type="service" id="sonata.formatter.text.raw"/>
        <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      </call>
    </service>
    <service id="sonata.formatter.text.markdown" class="Sonata\FormatterBundle\Formatter\MarkdownFormatter">
      <tag name="sonata.text.formatter" code="markdown"/>
      <argument type="service" id="markdown.parser.max"/>
    </service>
    <service id="sonata.formatter.text.text" class="Sonata\FormatterBundle\Formatter\TextFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.raw" class="Sonata\FormatterBundle\Formatter\RawFormatter">
      <tag name="sonata.text.formatter"/>
    </service>
    <service id="sonata.formatter.text.twigengine" class="Sonata\FormatterBundle\Formatter\TwigFormatter">
      <tag name="sonata.text.formatter"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="sonata.formatter.text.twig" class="Sonata\FormatterBundle\Twig\Extension\TextFormatterExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.twig.gist" class="Sonata\FormatterBundle\Extension\GistExtension"/>
    <service id="sonata.formatter.twig.control_flow" class="Sonata\FormatterBundle\Extension\ControlFlowExtension"/>
    <service id="sonata.formatter.validator.formatter" class="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator">
      <tag name="validator.constraint_validator" alias="sonata.formatter.validator.formatter"/>
      <argument type="service" id="sonata.formatter.pool"/>
    </service>
    <service id="sonata.formatter.form.type.selector" class="Sonata\FormatterBundle\Form\Type\FormatterType">
      <tag name="form.type" alias="sonata_formatter_type"/>
      <argument type="service" id="sonata.formatter.pool"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.form.type.simple" class="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">
      <tag name="form.type" alias="sonata_simple_formatter_type"/>
      <argument type="service" id="ivory_ck_editor.config_manager"/>
      <argument type="service" id="ivory_ck_editor.plugin_manager"/>
      <argument type="service" id="ivory_ck_editor.template_manager"/>
    </service>
    <service id="sonata.formatter.block.formatter" class="Sonata\FormatterBundle\Block\FormatterBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.formatter.block.formatter</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.formatter.ckeditor.extension" class="Sonata\FormatterBundle\Admin\CkeditorAdminExtension">
      <tag name="sonata.admin.extension" target="sonata.media.admin.media"/>
    </service>
    <service id="sonata.formatter.twig.loader.markdown" class="Twig_Loader_Array" public="false"/>
    <service id="sonata.formatter.twig.env.markdown" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service" id="sonata.formatter.twig.loader.markdown"/>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.sandbox.markdown"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service" id="sonata.formatter.twig.lexer.markdown"/>
      </call>
    </service>
    <service id="sonata.formatter.twig.sandbox.markdown.policy" class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument>sonata.formatter.twig.control_flow</argument>
        <argument>sonata.formatter.twig.gist</argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.sandbox.markdown" class="Twig_Extension_Sandbox" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument>sonata.formatter.twig.control_flow</argument>
            <argument>sonata.formatter.twig.gist</argument>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="sonata.formatter.twig.lexer.markdown" class="Twig_Lexer" public="false">
      <argument type="service" id="sonata.formatter.twig.env.markdown"/>
      <argument type="collection">
        <argument key="tag_comment" type="collection">
          <argument>&lt;#</argument>
          <argument>#&gt;</argument>
        </argument>
        <argument key="tag_block" type="collection">
          <argument>&lt;%</argument>
          <argument>%&gt;</argument>
        </argument>
        <argument key="tag_variable" type="collection">
          <argument>&lt;%=</argument>
          <argument>%&gt;</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.loader.text" class="Twig_Loader_Array" public="false"/>
    <service id="sonata.formatter.twig.env.text" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service" id="sonata.formatter.twig.loader.text"/>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.sandbox.text"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service" id="sonata.formatter.twig.lexer.text"/>
      </call>
    </service>
    <service id="sonata.formatter.twig.sandbox.text.policy" class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument>sonata.formatter.twig.control_flow</argument>
        <argument>sonata.formatter.twig.gist</argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.sandbox.text" class="Twig_Extension_Sandbox" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument>sonata.formatter.twig.control_flow</argument>
            <argument>sonata.formatter.twig.gist</argument>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="sonata.formatter.twig.lexer.text" class="Twig_Lexer" public="false">
      <argument type="service" id="sonata.formatter.twig.env.text"/>
      <argument type="collection">
        <argument key="tag_comment" type="collection">
          <argument>&lt;#</argument>
          <argument>#&gt;</argument>
        </argument>
        <argument key="tag_block" type="collection">
          <argument>&lt;%</argument>
          <argument>%&gt;</argument>
        </argument>
        <argument key="tag_variable" type="collection">
          <argument>&lt;%=</argument>
          <argument>%&gt;</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.loader.rawhtml" class="Twig_Loader_Array" public="false"/>
    <service id="sonata.formatter.twig.env.rawhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service" id="sonata.formatter.twig.loader.rawhtml"/>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.sandbox.rawhtml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service" id="sonata.formatter.twig.lexer.rawhtml"/>
      </call>
    </service>
    <service id="sonata.formatter.twig.sandbox.rawhtml.policy" class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument>sonata.formatter.twig.control_flow</argument>
        <argument>sonata.formatter.twig.gist</argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.sandbox.rawhtml" class="Twig_Extension_Sandbox" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument>sonata.formatter.twig.control_flow</argument>
            <argument>sonata.formatter.twig.gist</argument>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="sonata.formatter.twig.lexer.rawhtml" class="Twig_Lexer" public="false">
      <argument type="service" id="sonata.formatter.twig.env.rawhtml"/>
      <argument type="collection">
        <argument key="tag_comment" type="collection">
          <argument>&lt;#</argument>
          <argument>#&gt;</argument>
        </argument>
        <argument key="tag_block" type="collection">
          <argument>&lt;%</argument>
          <argument>%&gt;</argument>
        </argument>
        <argument key="tag_variable" type="collection">
          <argument>&lt;%=</argument>
          <argument>%&gt;</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.loader.richhtml" class="Twig_Loader_Array" public="false"/>
    <service id="sonata.formatter.twig.env.richhtml" class="Twig_Environment" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\Loader\LoaderSelector" public="false">
          <argument type="service" id="sonata.formatter.twig.loader.richhtml"/>
          <argument type="service" id="twig.loader"/>
        </service>
      </argument>
      <argument type="collection">
        <argument key="debug">false</argument>
        <argument key="strict_variables">false</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.sandbox.richhtml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.control_flow"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.formatter.twig.gist"/>
      </call>
      <call method="setLexer">
        <argument type="service" id="sonata.formatter.twig.lexer.richhtml"/>
      </call>
    </service>
    <service id="sonata.formatter.twig.sandbox.richhtml.policy" class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument>sonata.formatter.twig.control_flow</argument>
        <argument>sonata.formatter.twig.gist</argument>
      </argument>
    </service>
    <service id="sonata.formatter.twig.sandbox.richhtml" class="Twig_Extension_Sandbox" public="false">
      <argument type="service">
        <service class="Sonata\FormatterBundle\Twig\SecurityPolicyContainerAware" public="false">
          <argument type="service" id="service_container"/>
          <argument type="collection">
            <argument>sonata.formatter.twig.control_flow</argument>
            <argument>sonata.formatter.twig.gist</argument>
          </argument>
        </service>
      </argument>
      <argument>true</argument>
    </service>
    <service id="sonata.formatter.twig.lexer.richhtml" class="Twig_Lexer" public="false">
      <argument type="service" id="sonata.formatter.twig.env.richhtml"/>
      <argument type="collection">
        <argument key="tag_comment" type="collection">
          <argument>&lt;#</argument>
          <argument>#&gt;</argument>
        </argument>
        <argument key="tag_block" type="collection">
          <argument>&lt;%</argument>
          <argument>%&gt;</argument>
        </argument>
        <argument key="tag_variable" type="collection">
          <argument>&lt;%=</argument>
          <argument>%&gt;</argument>
        </argument>
      </argument>
    </service>
    <service id="sonata.block.service.container" class="Sonata\BlockBundle\Block\Service\ContainerBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.container</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.empty" class="Sonata\BlockBundle\Block\Service\EmptyBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.empty</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.text" class="Sonata\BlockBundle\Block\Service\TextBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.text</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.rss" class="Sonata\BlockBundle\Block\Service\RssBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.rss</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.service.menu" class="Sonata\BlockBundle\Block\Service\MenuBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.menu</argument>
      <argument type="service" id="sonata.templating"/>
      <argument type="service" id="knp_menu.menu_provider.chain"/>
      <argument type="service" id="sonata.block.menu.registry"/>
    </service>
    <service id="sonata.block.service.template" class="Sonata\BlockBundle\Block\Service\TemplateBlockService">
      <tag name="sonata.block"/>
      <argument>sonata.block.template</argument>
      <argument type="service" id="sonata.templating"/>
    </service>
    <service id="sonata.block.form.type.block" class="Sonata\BlockBundle\Form\Type\ServiceListType">
      <tag name="form.type" alias="sonata_block_service_choice"/>
      <argument type="service" id="sonata.block.manager"/>
    </service>
    <service id="sonata.block.form.type.container_template" class="Sonata\BlockBundle\Form\Type\ContainerTemplateType">
      <tag name="form.type" alias="sonata_type_container_template_choice"/>
      <argument type="collection">
        <argument key="@SonataBlock/Block/block_container.html.twig">SonataBlockBundle default template</argument>
      </argument>
    </service>
    <service id="sonata.templating.locator" class="Sonata\BlockBundle\Templating\TemplateLocator">
      <argument type="service" id="file_locator"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev</argument>
    </service>
    <service id="sonata.templating.name_parser" class="Sonata\BlockBundle\Templating\TemplateNameParser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sonata.templating" class="Sonata\BlockBundle\Templating\TwigEngine">
      <argument type="service" id="twig"/>
      <argument type="service" id="sonata.templating.name_parser"/>
      <argument type="service" id="sonata.templating.locator"/>
    </service>
    <service id="sonata.block.manager" class="Sonata\BlockBundle\Block\BlockServiceManager">
      <argument type="service" id="service_container"/>
      <argument>true</argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <call method="add">
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.menu</argument>
        <argument type="collection">
          <argument>user</argument>
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.account</argument>
        <argument type="collection">
          <argument>user</argument>
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.media</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.media.block.gallery_list</argument>
        <argument>sonata.media.block.gallery_list</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.search_result</argument>
        <argument>sonata.admin.block.search_result</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.stats</argument>
        <argument type="collection">
          <argument>admin</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.container</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.empty</argument>
        <argument>sonata.block.service.empty</argument>
        <argument type="collection"/>
      </call>
      <call method="add">
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.text</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.rss</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.menu</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
      <call method="add">
        <argument>sonata.block.service.template</argument>
        <argument>sonata.block.service.template</argument>
        <argument type="collection">
          <argument>sonata_page_bundle</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.block.menu.registry" class="Sonata\BlockBundle\Menu\MenuRegistry">
      <argument type="collection"/>
      <call method="add">
        <argument>sonata_admin_sidebar</argument>
      </call>
    </service>
    <service id="sonata.block.context_manager.default" class="Sonata\BlockBundle\Block\BlockContextManager">
      <argument type="service" id="sonata.block.loader.chain"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.stats">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.container">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.block.service.menu">sonata.cache.noop</argument>
          <argument key="sonata.block.service.template">sonata.cache.noop</argument>
          <argument key="sonata.page.block.container">sonata.cache.noop</argument>
          <argument key="sonata.page.block.children_pages">sonata.cache.noop</argument>
          <argument key="sonata.page.block.ajax">sonata.cache.noop</argument>
          <argument key="sonata.page.block.context_manager">sonata.cache.noop</argument>
          <argument key="sonata.page.block.breadcrumb">sonata.cache.noop</argument>
          <argument key="sonata.page.block.shared_block">sonata.cache.noop</argument>
          <argument key="sonata.page.block.pagelist">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery_list">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.page.cache.js_async</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.breadcrumb_index">sonata.cache.noop</argument>
          <argument key="sonata.user.block.breadcrumb_profile">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.email.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_box">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.send_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.embed">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.renderer.default" class="Sonata\BlockBundle\Block\BlockRenderer">
      <argument type="service" id="sonata.block.manager"/>
      <argument type="service" id="sonata.block.exception.strategy.manager"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="sonata.block.twig.extension" class="Sonata\BlockBundle\Twig\Extension\BlockExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="sonata.block.templating.helper"/>
    </service>
    <service id="sonata.block.templating.helper" class="Sonata\BlockBundle\Templating\Helper\BlockHelper">
      <tag name="templating.helper" alias="sonata_block"/>
      <argument type="service" id="sonata.block.manager"/>
      <argument type="collection">
        <argument key="by_type" type="collection">
          <argument key="sonata.admin.block.stats">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.admin_list">sonata.cache.noop</argument>
          <argument key="sonata.block.service.text">sonata.cache.noop</argument>
          <argument key="sonata.block.service.container">sonata.cache.noop</argument>
          <argument key="sonata.block.service.rss">sonata.cache.noop</argument>
          <argument key="sonata.block.service.menu">sonata.cache.noop</argument>
          <argument key="sonata.block.service.template">sonata.cache.noop</argument>
          <argument key="sonata.page.block.container">sonata.cache.noop</argument>
          <argument key="sonata.page.block.children_pages">sonata.cache.noop</argument>
          <argument key="sonata.page.block.ajax">sonata.cache.noop</argument>
          <argument key="sonata.page.block.context_manager">sonata.cache.noop</argument>
          <argument key="sonata.page.block.breadcrumb">sonata.cache.noop</argument>
          <argument key="sonata.page.block.shared_block">sonata.cache.noop</argument>
          <argument key="sonata.page.block.pagelist">sonata.cache.noop</argument>
          <argument key="sonata.media.block.media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery">sonata.cache.noop</argument>
          <argument key="sonata.media.block.feature_media">sonata.cache.noop</argument>
          <argument key="sonata.media.block.gallery_list">sonata.cache.noop</argument>
          <argument key="sonata.user.block.account">sonata.page.cache.js_async</argument>
          <argument key="sonata.user.block.menu">sonata.cache.noop</argument>
          <argument key="sonata.user.block.breadcrumb_index">sonata.cache.noop</argument>
          <argument key="sonata.user.block.breadcrumb_profile">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.email.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_box">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.like_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.send_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.facebook.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.pinterest.pin_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.share_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.follow_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.hashtag_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.mention_button">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.twitter.embed">sonata.cache.noop</argument>
          <argument key="sonata.formatter.block.formatter">sonata.cache.noop</argument>
          <argument key="sonata.seo.block.breadcrumb.homepage">sonata.cache.noop</argument>
          <argument key="sonata.admin.block.search_result">sonata.cache.noop</argument>
        </argument>
      </argument>
      <argument type="service" id="sonata.block.renderer.default"/>
      <argument type="service" id="sonata.block.context_manager.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>null</argument>
      <argument type="service" id="sonata.block.cache.handler.default" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="sonata.block.loader.chain" class="Sonata\BlockBundle\Block\BlockLoaderChain">
      <argument type="collection">
        <argument type="service" id="sonata.block.loader.service"/>
      </argument>
    </service>
    <service id="sonata.block.loader.service" class="Sonata\BlockBundle\Block\Loader\ServiceLoader">
      <tag name="sonata.block.loader"/>
      <argument type="collection">
        <argument>sonata.admin.block.stats</argument>
        <argument>sonata.admin.block.admin_list</argument>
        <argument>sonata.block.service.text</argument>
        <argument>sonata.block.service.container</argument>
        <argument>sonata.block.service.rss</argument>
        <argument>sonata.block.service.menu</argument>
        <argument>sonata.block.service.template</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.page.block.children_pages</argument>
        <argument>sonata.page.block.ajax</argument>
        <argument>sonata.page.block.context_manager</argument>
        <argument>sonata.page.block.breadcrumb</argument>
        <argument>sonata.page.block.shared_block</argument>
        <argument>sonata.page.block.pagelist</argument>
        <argument>sonata.media.block.media</argument>
        <argument>sonata.media.block.gallery</argument>
        <argument>sonata.media.block.feature_media</argument>
        <argument>sonata.media.block.gallery_list</argument>
        <argument>sonata.user.block.account</argument>
        <argument>sonata.user.block.menu</argument>
        <argument>sonata.user.block.breadcrumb_index</argument>
        <argument>sonata.user.block.breadcrumb_profile</argument>
        <argument>sonata.seo.block.email.share_button</argument>
        <argument>sonata.seo.block.facebook.like_box</argument>
        <argument>sonata.seo.block.facebook.like_button</argument>
        <argument>sonata.seo.block.facebook.send_button</argument>
        <argument>sonata.seo.block.facebook.share_button</argument>
        <argument>sonata.seo.block.pinterest.pin_button</argument>
        <argument>sonata.seo.block.twitter.share_button</argument>
        <argument>sonata.seo.block.twitter.follow_button</argument>
        <argument>sonata.seo.block.twitter.hashtag_button</argument>
        <argument>sonata.seo.block.twitter.mention_button</argument>
        <argument>sonata.seo.block.twitter.embed</argument>
        <argument>sonata.formatter.block.formatter</argument>
        <argument>sonata.seo.block.breadcrumb.homepage</argument>
        <argument>sonata.admin.block.search_result</argument>
      </argument>
    </service>
    <service id="sonata.block.twig.global" class="Sonata\BlockBundle\Twig\GlobalVariables">
      <argument type="collection">
        <argument key="block_base">@SonataBlock/Block/block_base.html.twig</argument>
        <argument key="block_container">@SonataBlock/Block/block_container.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.block.cache.handler.default" class="Sonata\BlockBundle\Cache\HttpCacheHandler">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
    </service>
    <service id="sonata.block.cache.handler.noop" class="Sonata\BlockBundle\Cache\NoopHttpCacheHandler"/>
    <service id="sonata.block.exception.strategy.manager" class="Sonata\BlockBundle\Exception\Strategy\StrategyManager">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="debug_only">sonata.block.exception.filter.debug_only</argument>
        <argument key="ignore_block_exception">sonata.block.exception.filter.ignore_block_exception</argument>
        <argument key="keep_all">sonata.block.exception.filter.keep_all</argument>
        <argument key="keep_none">sonata.block.exception.filter.keep_none</argument>
      </argument>
      <argument type="collection">
        <argument key="inline">sonata.block.exception.renderer.inline</argument>
        <argument key="inline_debug">sonata.block.exception.renderer.inline_debug</argument>
        <argument key="throw">sonata.block.exception.renderer.throw</argument>
      </argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <call method="setDefaultFilter">
        <argument>debug_only</argument>
      </call>
      <call method="setDefaultRenderer">
        <argument>throw</argument>
      </call>
    </service>
    <service id="sonata.block.exception.filter.keep_none" class="Sonata\BlockBundle\Exception\Filter\KeepNoneFilter"/>
    <service id="sonata.block.exception.filter.keep_all" class="Sonata\BlockBundle\Exception\Filter\KeepAllFilter"/>
    <service id="sonata.block.exception.filter.debug_only" class="Sonata\BlockBundle\Exception\Filter\DebugOnlyFilter">
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.filter.ignore_block_exception" class="Sonata\BlockBundle\Exception\Filter\IgnoreClassFilter">
      <argument>Sonata\BlockBundle\Exception\BlockExceptionInterface</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline" class="Sonata\BlockBundle\Exception\Renderer\InlineRenderer">
      <argument type="service" id="sonata.templating"/>
      <argument>@SonataBlock/Block/block_exception.html.twig</argument>
    </service>
    <service id="sonata.block.exception.renderer.inline_debug" class="Sonata\BlockBundle\Exception\Renderer\InlineDebugRenderer">
      <argument type="service" id="sonata.templating"/>
      <argument>@SonataBlock/Block/block_exception_debug.html.twig</argument>
      <argument>true</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.block.exception.renderer.throw" class="Sonata\BlockBundle\Exception\Renderer\MonkeyThrowRenderer"/>
    <service id="Sonata\BlockBundle\Command\DebugBlocksCommand" class="Sonata\BlockBundle\Command\DebugBlocksCommand">
      <tag name="console.command"/>
    </service>
    <service id="sonata.block.data_collector" class="Sonata\BlockBundle\Profiler\DataCollector\BlockDataCollector" public="false">
      <tag name="data_collector" id="block" template="@SonataBlock/Profiler/block.html.twig"/>
      <argument type="service" id="sonata.block.templating.helper"/>
      <argument type="collection">
        <argument>sonata.block.service.container</argument>
        <argument>sonata.page.block.container</argument>
        <argument>sonata.dashboard.block.container</argument>
        <argument>cmf.block.container</argument>
        <argument>cmf.block.slideshow</argument>
      </argument>
    </service>
    <service id="sonata.classification.manager.category" class="Sonata\ClassificationBundle\Entity\CategoryManager">
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="sonata.classification.manager.context"/>
    </service>
    <service id="sonata.classification.manager.tag" class="Sonata\ClassificationBundle\Entity\TagManager">
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.collection" class="Sonata\ClassificationBundle\Entity\CollectionManager">
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.manager.context" class="Sonata\ClassificationBundle\Entity\ContextManager">
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="sonata.classification.form.type.category_selector" class="Sonata\ClassificationBundle\Form\Type\CategorySelectorType">
      <tag name="form.type" alias="sonata_category_selector"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.category" class="Sonata\ClassificationBundle\Serializer\CategorySerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.category"/>
    </service>
    <service id="sonata.classification.serializer.handler.collection" class="Sonata\ClassificationBundle\Serializer\CollectionSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.collection"/>
    </service>
    <service id="sonata.classification.serializer.handler.tag" class="Sonata\ClassificationBundle\Serializer\TagSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.tag"/>
    </service>
    <service id="sonata.classification.serializer.handler.context" class="Sonata\ClassificationBundle\Serializer\ContextSerializerHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="sonata.classification.manager.context"/>
    </service>
    <service id="sonata.classification.controller.api.category" class="Sonata\ClassificationBundle\Controller\Api\CategoryController">
      <argument type="service" id="sonata.classification.manager.category"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.collection" class="Sonata\ClassificationBundle\Controller\Api\CollectionController">
      <argument type="service" id="sonata.classification.manager.collection"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.tag" class="Sonata\ClassificationBundle\Controller\Api\TagController">
      <argument type="service" id="sonata.classification.manager.tag"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.controller.api.context" class="Sonata\ClassificationBundle\Controller\Api\ContextController">
      <argument type="service" id="sonata.classification.manager.context"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="sonata.classification.api.form.type.category" class="Sonata\ClassificationBundle\Form\Type\ApiCategoryType">
      <tag name="form.type" alias="sonata_classification_api_form_category"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_category</argument>
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.collection" class="Sonata\ClassificationBundle\Form\Type\ApiCollectionType">
      <tag name="form.type" alias="sonata_classification_api_form_collection"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_collection</argument>
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.tag" class="Sonata\ClassificationBundle\Form\Type\ApiTagType">
      <tag name="form.type" alias="sonata_classification_api_form_tag"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_tag</argument>
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument>sonata_api_write</argument>
    </service>
    <service id="sonata.classification.api.form.type.context" class="Sonata\ClassificationBundle\Form\Type\ApiContextType">
      <tag name="form.type" alias="sonata_classification_api_form_context"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="doctrine"/>
      <argument>sonata_classification_api_form_context</argument>
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument>sonata_api_write</argument>
      <argument>true</argument>
    </service>
    <service id="sonata.classification.admin.category" class="Sonata\ClassificationBundle\Admin\CategoryAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_categories" label_catalogue="%sonata.classification.admin.category.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.category</argument>
      <argument>AppBundle\Entity\Classification\Category</argument>
      <argument>SonataClassificationBundle:CategoryAdmin</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_categories</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.classification.admin.category.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.classification.admin.tag" class="Sonata\ClassificationBundle\Admin\TagAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_tags" label_catalogue="%sonata.classification.admin.tag.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.tag</argument>
      <argument>AppBundle\Entity\Classification\Tag</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_tags</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.classification.admin.tag.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.classification.admin.collection" class="Sonata\ClassificationBundle\Admin\CollectionAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_collections" label_catalogue="%sonata.classification.admin.collection.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.collection</argument>
      <argument>AppBundle\Entity\Classification\Collection</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <argument type="service" id="sonata.classification.manager.context"/>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_collections</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.classification.admin.collection.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="sonata.classification.admin.context" class="Sonata\ClassificationBundle\Admin\ContextAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="%sonata.classification.admin.groupname%" label="label_contexts" label_catalogue="%sonata.classification.admin.context.translation_domain%" label_translator_strategy="sonata.admin.label.strategy.underscore" icon="%sonata.classification.admin.groupicon%"/>
      <argument>sonata.classification.admin.context</argument>
      <argument>AppBundle\Entity\Classification\Context</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setTranslationDomain">
        <argument>SonataClassificationBundle</argument>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.underscore"/>
      </call>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>label_contexts</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="sonata.classification.admin.context.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="mopa_bootstrap.twig.extension.bootstrap_form" class="Mopa\Bundle\BootstrapBundle\Twig\FormExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="mopa_bootstrap.twig.extension.bootstrap_icon" class="Mopa\Bundle\BootstrapBundle\Twig\IconExtension">
      <tag name="twig.extension"/>
      <argument>glyphicons</argument>
      <argument>icon</argument>
    </service>
    <service id="mopa_bootstrap.twig.extension.bootstrap_flash" class="Mopa\Bundle\BootstrapBundle\Twig\FlashExtension">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument key="success">success</argument>
        <argument key="error">danger</argument>
        <argument key="danger">danger</argument>
        <argument key="warning">warning</argument>
        <argument key="warn">warning</argument>
        <argument key="info">info</argument>
        <argument key="notice">info</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.embed_form" class="Mopa\Bundle\BootstrapBundle\Form\Extension\EmbedFormExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.static_text" class="Mopa\Bundle\BootstrapBundle\Form\Extension\StaticTextExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.offset_button" class="Mopa\Bundle\BootstrapBundle\Form\Extension\OffsetButtonExtension">
      <tag name="form.type_extension" alias="button" extended_type="Symfony\Component\Form\Extension\Core\Type\ButtonType" extended-type="Symfony\Component\Form\Extension\Core\Type\ButtonType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.button" class="Mopa\Bundle\BootstrapBundle\Form\Extension\IconButtonExtension">
      <tag name="form.type_extension" alias="button" extended_type="Symfony\Component\Form\Extension\Core\Type\ButtonType" extended-type="Symfony\Component\Form\Extension\Core\Type\ButtonType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.help" class="Mopa\Bundle\BootstrapBundle\Form\Extension\HelpFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="help_block_tooltip" type="collection">
          <argument key="title">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_block_popover" type="collection">
          <argument key="title">null</argument>
          <argument key="content">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_label_tooltip" type="collection">
          <argument key="title">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_label_popover" type="collection">
          <argument key="title">null</argument>
          <argument key="content">null</argument>
          <argument key="text">null</argument>
          <argument key="icon">info-sign</argument>
          <argument key="placement">top</argument>
        </argument>
        <argument key="help_widget_popover" type="collection">
          <argument key="title">null</argument>
          <argument key="content">null</argument>
          <argument key="trigger">hover</argument>
          <argument key="toggle">popover</argument>
          <argument key="placement">right</argument>
          <argument key="selector">null</argument>
        </argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.legend" class="Mopa\Bundle\BootstrapBundle\Form\Extension\LegendFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="render_fieldset">true</argument>
        <argument key="show_legend">false</argument>
        <argument key="show_child_legend">false</argument>
        <argument key="legend_tag">legend</argument>
        <argument key="render_required_asterisk">true</argument>
        <argument key="render_optional_text">false</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.error" class="Mopa\Bundle\BootstrapBundle\Form\Extension\ErrorTypeFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="error_type">null</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.widget" class="Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="checkbox_label">both</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.horizontal" class="Mopa\Bundle\BootstrapBundle\Form\Extension\LayoutFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="layout">horizontal</argument>
        <argument key="horizontal_label_class">col-sm-3</argument>
        <argument key="horizontal_label_div_class">null</argument>
        <argument key="horizontal_label_offset_class">col-sm-offset-3</argument>
        <argument key="horizontal_input_wrapper_class">col-sm-9</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.widget_collection" class="Mopa\Bundle\BootstrapBundle\Form\Extension\WidgetCollectionFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="collection">
        <argument key="render_collection_item">true</argument>
        <argument key="widget_add_btn" type="collection">
          <argument key="attr" type="collection">
            <argument key="class">btn btn-default</argument>
          </argument>
          <argument key="label">add_item</argument>
          <argument key="translation_domain">null</argument>
          <argument key="icon">null</argument>
          <argument key="icon_inverted">false</argument>
        </argument>
        <argument key="widget_remove_btn" type="collection">
          <argument key="attr" type="collection">
            <argument key="class">btn btn-default</argument>
          </argument>
          <argument key="wrapper_div" type="collection">
            <argument key="class">form-group</argument>
          </argument>
          <argument key="horizontal_wrapper_div" type="collection">
            <argument key="class">col-sm-3 col-sm-offset-3</argument>
          </argument>
          <argument key="label">remove_item</argument>
          <argument key="translation_domain">null</argument>
          <argument key="icon">null</argument>
          <argument key="icon_inverted">false</argument>
        </argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.date" class="Mopa\Bundle\BootstrapBundle\Form\Extension\DateTypeExtension">
      <tag name="form.type_extension" alias="date" extended_type="Symfony\Component\Form\Extension\Core\Type\DateType" extended-type="Symfony\Component\Form\Extension\Core\Type\DateType"/>
      <argument type="collection">
        <argument key="date_wrapper_class" type="collection">
          <argument key="year">col-xs-4</argument>
          <argument key="month">col-xs-4</argument>
          <argument key="day">col-xs-4</argument>
        </argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type_extension.datetime" class="Mopa\Bundle\BootstrapBundle\Form\Extension\DatetimeTypeExtension">
      <tag name="form.type_extension" alias="datetime" extended_type="Symfony\Component\Form\Extension\Core\Type\DateTimeType" extended-type="Symfony\Component\Form\Extension\Core\Type\DateTimeType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.time" class="Mopa\Bundle\BootstrapBundle\Form\Extension\TimeTypeExtension">
      <tag name="form.type_extension" alias="time" extended_type="Symfony\Component\Form\Extension\Core\Type\TimeType" extended-type="Symfony\Component\Form\Extension\Core\Type\TimeType"/>
    </service>
    <service id="mopa_bootstrap.form.type_extension.tabbed" class="Mopa\Bundle\BootstrapBundle\Form\Extension\TabbedFormTypeExtension">
      <tag name="form.type_extension" alias="form" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="form.factory"/>
      <argument type="collection">
        <argument key="class">nav nav-tabs</argument>
      </argument>
    </service>
    <service id="mopa_bootstrap.form.type.tab" class="Mopa\Bundle\BootstrapBundle\Form\Type\TabType">
      <tag name="form.type"/>
    </service>
    <service id="mopa_bootstrap.form.type.form_actions" class="Mopa\Bundle\BootstrapBundle\Form\Type\FormActionsType">
      <tag name="form.type"/>
    </service>
    <service id="fos_js_routing.extractor" class="FOS\JsRoutingBundle\Extractor\ExposedRoutesExtractor">
      <argument type="service" id="router.default"/>
      <argument type="collection"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev</argument>
      <argument type="collection">
        <argument key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</argument>
        <argument key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</argument>
        <argument key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</argument>
        <argument key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</argument>
        <argument key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</argument>
        <argument key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</argument>
        <argument key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</argument>
        <argument key="JMSAopBundle">JMS\AopBundle\JMSAopBundle</argument>
        <argument key="JMSSecurityExtraBundle">JMS\SecurityExtraBundle\JMSSecurityExtraBundle</argument>
        <argument key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</argument>
        <argument key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</argument>
        <argument key="KnpMenuBundle">Knp\Bundle\MenuBundle\KnpMenuBundle</argument>
        <argument key="KnpMarkdownBundle">Knp\Bundle\MarkdownBundle\KnpMarkdownBundle</argument>
        <argument key="KnpPaginatorBundle">Knp\Bundle\PaginatorBundle\KnpPaginatorBundle</argument>
        <argument key="FOSUserBundle">FOS\UserBundle\FOSUserBundle</argument>
        <argument key="SonataUserBundle">Sonata\UserBundle\SonataUserBundle</argument>
        <argument key="SonataMediaBundle">Sonata\MediaBundle\SonataMediaBundle</argument>
        <argument key="IvoryCKEditorBundle">Ivory\CKEditorBundle\IvoryCKEditorBundle</argument>
        <argument key="SonataAdminBundle">Sonata\AdminBundle\SonataAdminBundle</argument>
        <argument key="SonataDoctrineORMAdminBundle">Sonata\DoctrineORMAdminBundle\SonataDoctrineORMAdminBundle</argument>
        <argument key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</argument>
        <argument key="BazingaHateoasBundle">Bazinga\Bundle\HateoasBundle\BazingaHateoasBundle</argument>
        <argument key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</argument>
        <argument key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</argument>
        <argument key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</argument>
        <argument key="SonataEasyExtendsBundle">Sonata\EasyExtendsBundle\SonataEasyExtendsBundle</argument>
        <argument key="SonataCoreBundle">Sonata\CoreBundle\SonataCoreBundle</argument>
        <argument key="SonataIntlBundle">Sonata\IntlBundle\SonataIntlBundle</argument>
        <argument key="SonataFormatterBundle">Sonata\FormatterBundle\SonataFormatterBundle</argument>
        <argument key="SonataBlockBundle">Sonata\BlockBundle\SonataBlockBundle</argument>
        <argument key="SonataClassificationBundle">Sonata\ClassificationBundle\SonataClassificationBundle</argument>
        <argument key="SonataDatagridBundle">Sonata\DatagridBundle\SonataDatagridBundle</argument>
        <argument key="MopaBootstrapBundle">Mopa\Bundle\BootstrapBundle\MopaBootstrapBundle</argument>
        <argument key="FOSJsRoutingBundle">FOS\JsRoutingBundle\FOSJsRoutingBundle</argument>
        <argument key="LexikFormFilterBundle">Lexik\Bundle\FormFilterBundle\LexikFormFilterBundle</argument>
        <argument key="LiipImagineBundle">Liip\ImagineBundle\LiipImagineBundle</argument>
        <argument key="KnpGaufretteBundle">Knp\Bundle\GaufretteBundle\KnpGaufretteBundle</argument>
        <argument key="WhiteOctoberPagerfantaBundle">WhiteOctober\PagerfantaBundle\WhiteOctoberPagerfantaBundle</argument>
        <argument key="DataDogAuditBundle">DataDog\AuditBundle\DataDogAuditBundle</argument>
        <argument key="GregwarCaptchaBundle">Gregwar\CaptchaBundle\GregwarCaptchaBundle</argument>
        <argument key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</argument>
        <argument key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\GesdinetJWTRefreshTokenBundle</argument>
        <argument key="AppBundle">AppBundle\AppBundle</argument>
        <argument key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</argument>
        <argument key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</argument>
        <argument key="SensioDistributionBundle">Sensio\Bundle\DistributionBundle\SensioDistributionBundle</argument>
        <argument key="SensioGeneratorBundle">Sensio\Bundle\GeneratorBundle\SensioGeneratorBundle</argument>
        <argument key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</argument>
      </argument>
    </service>
    <service id="fos_js_routing.controller" class="FOS\JsRoutingBundle\Controller\Controller">
      <argument type="service" id="fos_js_routing.serializer"/>
      <argument type="service" id="fos_js_routing.extractor"/>
      <argument type="collection">
        <argument key="enabled">false</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_js_routing.serializer" class="Symfony\Component\Serializer\Serializer">
      <argument type="collection">
        <argument type="service" id="fos_js_routing.normalizer"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="fos_js_routing.encoder"/>
      </argument>
    </service>
    <service id="fos_js_routing.normalizer" class="Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer" public="false"/>
    <service id="fos_js_routing.encoder" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false"/>
    <service id="lexik_form_filter.query_builder_updater" class="Lexik\Bundle\FormFilterBundle\Filter\FilterBuilderUpdater">
      <argument type="service" id="lexik_form_filter.form_data_extractor"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_form_filter.form_data_extractor" class="Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\FormDataExtractor">
      <call method="addMethod">
        <argument type="service" id="lexik_form_filter.data_extraction_method.default"/>
      </call>
      <call method="addMethod">
        <argument type="service" id="lexik_form_filter.data_extraction_method.text"/>
      </call>
      <call method="addMethod">
        <argument type="service" id="lexik_form_filter.data_extraction_method.key_values"/>
      </call>
    </service>
    <service id="lexik_form_filter.data_extraction_method.default" class="Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\DefaultExtractionMethod">
      <tag name="lexik_form_filter.data_extraction_method"/>
    </service>
    <service id="lexik_form_filter.data_extraction_method.text" class="Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\TextExtractionMethod">
      <tag name="lexik_form_filter.data_extraction_method"/>
    </service>
    <service id="lexik_form_filter.data_extraction_method.key_values" class="Lexik\Bundle\FormFilterBundle\Filter\DataExtractor\Method\ValueKeysExtractionMethod">
      <tag name="lexik_form_filter.data_extraction_method"/>
    </service>
    <service id="lexik_form_filter.filter_prepare" class="Lexik\Bundle\FormFilterBundle\Event\Listener\PrepareListener">
      <tag name="kernel.event_listener" event="lexik_filter.prepare" method="onFilterBuilderPrepare"/>
    </service>
    <service id="lexik_form_filter.type.filter_text" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\TextFilterType">
      <tag name="form.type"/>
      <argument>1</argument>
    </service>
    <service id="lexik_form_filter.type.filter_number" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_number_range" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberRangeFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_checkbox" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CheckboxFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_boolean" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\BooleanFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_choice" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\ChoiceFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_date" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_date_range" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateRangeFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_datetime" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_datetime_range" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeRangeFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_collection_adapter" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CollectionAdapterFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type.filter_sharedable" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\SharedableFilterType">
      <tag name="form.type"/>
    </service>
    <service id="lexik_form_filter.type_extension.filter_extension" class="Lexik\Bundle\FormFilterBundle\Filter\Form\FilterTypeExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="lexik_form_filter.get_filter.doctrine_orm" class="Lexik\Bundle\FormFilterBundle\Event\Subscriber\DoctrineORMSubscriber">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="lexik_form_filter.apply_filter.doctrine_orm" class="Lexik\Bundle\FormFilterBundle\Event\Listener\DoctrineApplyFilterListener">
      <tag name="kernel.event_listener" event="lexik_filter.apply_filters.orm" method="onApplyFilterCondition"/>
      <argument>and</argument>
    </service>
    <service id="lexik_form_filter.type.filter_entity" class="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\EntityFilterType">
      <tag name="form.type"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="liip_imagine.cache.resolver.default" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="default"/>
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</argument>
      <argument>media/cache</argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem.default" class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" public="false">
      <argument type="collection">
        <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</argument>
      </argument>
    </service>
    <service id="liip_imagine.binary.loader.default" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <tag name="liip_imagine.binary.loader" loader="default"/>
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="service" id="liip_imagine.binary.locator.filesystem.default"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.filter.manager" class="Liip\ImagineBundle\Imagine\Filter\FilterManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <call method="addLoader">
        <argument>relative_resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.relative_resize"/>
      </call>
      <call method="addLoader">
        <argument>resize</argument>
        <argument type="service" id="liip_imagine.filter.loader.resize"/>
      </call>
      <call method="addLoader">
        <argument>thumbnail</argument>
        <argument type="service" id="liip_imagine.filter.loader.thumbnail"/>
      </call>
      <call method="addLoader">
        <argument>crop</argument>
        <argument type="service" id="liip_imagine.filter.loader.crop"/>
      </call>
      <call method="addLoader">
        <argument>grayscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.grayscale"/>
      </call>
      <call method="addLoader">
        <argument>paste</argument>
        <argument type="service" id="liip_imagine.filter.loader.paste"/>
      </call>
      <call method="addLoader">
        <argument>watermark</argument>
        <argument type="service" id="liip_imagine.filter.loader.watermark"/>
      </call>
      <call method="addLoader">
        <argument>background</argument>
        <argument type="service" id="liip_imagine.filter.loader.background"/>
      </call>
      <call method="addLoader">
        <argument>strip</argument>
        <argument type="service" id="liip_imagine.filter.loader.strip"/>
      </call>
      <call method="addLoader">
        <argument>scale</argument>
        <argument type="service" id="liip_imagine.filter.loader.scale"/>
      </call>
      <call method="addLoader">
        <argument>upscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.upscale"/>
      </call>
      <call method="addLoader">
        <argument>downscale</argument>
        <argument type="service" id="liip_imagine.filter.loader.downscale"/>
      </call>
      <call method="addLoader">
        <argument>auto_rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.auto_rotate"/>
      </call>
      <call method="addLoader">
        <argument>rotate</argument>
        <argument type="service" id="liip_imagine.filter.loader.rotate"/>
      </call>
      <call method="addLoader">
        <argument>flip</argument>
        <argument type="service" id="liip_imagine.filter.loader.flip"/>
      </call>
      <call method="addLoader">
        <argument>interlace</argument>
        <argument type="service" id="liip_imagine.filter.loader.interlace"/>
      </call>
      <call method="addLoader">
        <argument>resample</argument>
        <argument type="service" id="liip_imagine.filter.loader.resample"/>
      </call>
      <call method="addPostProcessor">
        <argument>jpegoptim</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.jpegoptim"/>
      </call>
      <call method="addPostProcessor">
        <argument>optipng</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.optipng"/>
      </call>
      <call method="addPostProcessor">
        <argument>pngquant</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.pngquant"/>
      </call>
      <call method="addPostProcessor">
        <argument>mozjpeg</argument>
        <argument type="service" id="liip_imagine.filter.post_processor.mozjpeg"/>
      </call>
    </service>
    <service id="liip_imagine.data.manager" class="Liip\ImagineBundle\Imagine\Data\DataManager">
      <argument type="service" id="liip_imagine.binary.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument>filesystem</argument>
      <argument>null</argument>
      <call method="addLoader">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.binary.loader.default"/>
      </call>
    </service>
    <service id="liip_imagine.cache.manager" class="Liip\ImagineBundle\Imagine\Cache\CacheManager">
      <argument type="service" id="liip_imagine.filter.configuration"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>web_path</argument>
      <call method="addResolver">
        <argument>default</argument>
        <argument type="service" id="liip_imagine.cache.resolver.default"/>
      </call>
      <call method="addResolver">
        <argument>no_cache</argument>
        <argument type="service" id="liip_imagine.cache.resolver.no_cache_web_path"/>
      </call>
    </service>
    <service id="liip_imagine.filter.configuration" class="Liip\ImagineBundle\Imagine\Filter\FilterConfiguration">
      <argument type="collection">
        <argument key="thumbnail_50x40" type="collection">
          <argument key="filters" type="collection">
            <argument key="relative_resize" type="collection">
              <argument key="widen">50</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="thumbnail_90x60" type="collection">
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>90</argument>
                <argument>60</argument>
              </argument>
              <argument key="mode">outbound</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="thumbnail_200x200" type="collection">
          <argument key="filters" type="collection">
            <argument key="relative_resize" type="collection">
              <argument key="widen">200</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="thumbnail_262x255" type="collection">
          <argument key="filters" type="collection">
            <argument key="thumbnail" type="collection">
              <argument key="size" type="collection">
                <argument>265</argument>
                <argument>255</argument>
              </argument>
              <argument key="mode">inset</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="thumbnail_310x300" type="collection">
          <argument key="filters" type="collection">
            <argument key="relative_resize" type="collection">
              <argument key="widen">310</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
        <argument key="thumbnail_610x600" type="collection">
          <argument key="filters" type="collection">
            <argument key="relative_resize" type="collection">
              <argument key="widen">610</argument>
            </argument>
          </argument>
          <argument key="quality">100</argument>
          <argument key="jpeg_quality">null</argument>
          <argument key="png_compression_level">null</argument>
          <argument key="png_compression_filter">null</argument>
          <argument key="format">null</argument>
          <argument key="animated">false</argument>
          <argument key="cache">null</argument>
          <argument key="data_loader">null</argument>
          <argument key="default_image">null</argument>
          <argument key="post_processors" type="collection"/>
        </argument>
      </argument>
    </service>
    <service id="liip_imagine.controller" class="Liip\ImagineBundle\Controller\ImagineController">
      <argument type="service" id="liip_imagine.data.manager"/>
      <argument type="service" id="liip_imagine.filter.manager"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
      <argument type="service" id="liip_imagine.cache.signer"/>
      <argument type="service" id="monolog.logger" on-invalid="ignore"/>
      <argument>301</argument>
    </service>
    <service id="liip_imagine.meta_data.reader" class="Imagine\Image\Metadata\ExifMetadataReader" public="false"/>
    <service id="liip_imagine.gd" class="Imagine\Gd\Imagine" public="false">
      <call method="setMetadataReader">
        <argument type="service" id="liip_imagine.meta_data.reader"/>
      </call>
    </service>
    <service id="liip_imagine.imagick" class="Imagine\Imagick\Imagine" public="false"/>
    <service id="liip_imagine.gmagick" class="Imagine\Gmagick\Imagine" public="false"/>
    <service id="liip_imagine.twig.extension" class="Liip\ImagineBundle\Templating\ImagineExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.templating.helper" class="Liip\ImagineBundle\Templating\Helper\ImagineHelper">
      <tag name="templating.helper" alias="imagine"/>
      <argument type="service" id="liip_imagine.cache.manager"/>
    </service>
    <service id="liip_imagine.filter.loader.relative_resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="relative_resize"/>
    </service>
    <service id="liip_imagine.filter.loader.resize" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resize"/>
    </service>
    <service id="liip_imagine.filter.loader.thumbnail" class="Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="thumbnail"/>
    </service>
    <service id="liip_imagine.filter.loader.crop" class="Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="crop"/>
    </service>
    <service id="liip_imagine.filter.loader.grayscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\GrayscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="grayscale"/>
    </service>
    <service id="liip_imagine.filter.loader.paste" class="Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="paste"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
    </service>
    <service id="liip_imagine.filter.loader.watermark" class="Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="watermark"/>
      <argument type="service" id="liip_imagine.gd"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app</argument>
    </service>
    <service id="liip_imagine.filter.loader.background" class="Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="background"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.filter.loader.strip" class="Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="strip"/>
    </service>
    <service id="liip_imagine.filter.loader.scale" class="Liip\ImagineBundle\Imagine\Filter\Loader\ScaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="scale"/>
    </service>
    <service id="liip_imagine.filter.loader.upscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="upscale"/>
    </service>
    <service id="liip_imagine.filter.loader.downscale" class="Liip\ImagineBundle\Imagine\Filter\Loader\DownscaleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="downscale"/>
    </service>
    <service id="liip_imagine.filter.loader.auto_rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="auto_rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.rotate" class="Liip\ImagineBundle\Imagine\Filter\Loader\RotateFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="rotate"/>
    </service>
    <service id="liip_imagine.filter.loader.flip" class="Liip\ImagineBundle\Imagine\Filter\Loader\FlipFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="flip"/>
    </service>
    <service id="liip_imagine.filter.loader.interlace" class="Liip\ImagineBundle\Imagine\Filter\Loader\InterlaceFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="interlace"/>
    </service>
    <service id="liip_imagine.filter.loader.resample" class="Liip\ImagineBundle\Imagine\Filter\Loader\ResampleFilterLoader">
      <tag name="liip_imagine.filter.loader" loader="resample"/>
      <argument type="service" id="liip_imagine.gd"/>
    </service>
    <service id="liip_imagine.binary.loader.prototype.filesystem" class="Liip\ImagineBundle\Binary\Loader\FileSystemLoader">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.stream" class="Liip\ImagineBundle\Binary\Loader\StreamLoader">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.flysystem" class="Liip\ImagineBundle\Binary\Loader\FlysystemLoader" abstract="true">
      <argument type="service" id="liip_imagine.extension_guesser"/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.loader.prototype.chain" class="Liip\ImagineBundle\Binary\Loader\ChainLoader" abstract="true">
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem" class="Liip\ImagineBundle\Binary\Locator\FileSystemLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
    </service>
    <service id="liip_imagine.binary.locator.filesystem_insecure" class="Liip\ImagineBundle\Binary\Locator\FileSystemInsecureLocator" shared="false" public="false">
      <tag name="liip_imagine.binary.locator" shared=""/>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver" abstract="true">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.aws_s3" class="Liip\ImagineBundle\Imagine\Cache\Resolver\AwsS3Resolver" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.cache" class="Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.flysystem" class="Liip\ImagineBundle\Imagine\Cache\Resolver\FlysystemResolver" abstract="true">
      <argument></argument>
      <argument type="service" id="router.request_context"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.prototype.proxy" class="Liip\ImagineBundle\Imagine\Cache\Resolver\ProxyResolver" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="liip_imagine.cache.resolver.no_cache_web_path" class="Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver">
      <tag name="liip_imagine.cache.resolver" resolver="no_cache"/>
      <argument type="service" id="router.request_context"/>
    </service>
    <service id="liip_imagine.form.type.image" class="Liip\ImagineBundle\Form\Type\ImageType">
      <tag name="form.type" alias="liip_imagine_image"/>
    </service>
    <service id="liip_imagine.mime_type_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.extension_guesser" class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesserInterface">
      <factory class="Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser" method="getInstance"/>
    </service>
    <service id="liip_imagine.binary.mime_type_guesser" class="Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser">
      <argument type="service" id="liip_imagine.mime_type_guesser"/>
    </service>
    <service id="liip_imagine.cache.signer" class="Liip\ImagineBundle\Imagine\Cache\Signer">
      <argument>692cd6b4574faf02145126fe2f31c3fdbf88a5fc</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.jpegoptim" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="jpegoptim"/>
      <argument>/usr/bin/jpegoptim</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.optipng" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\OptiPngPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="optipng"/>
      <argument>/usr/bin/optipng</argument>
      <argument>7</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.pngquant" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\PngquantPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="pngquant"/>
      <argument>/usr/bin/pngquant</argument>
    </service>
    <service id="liip_imagine.filter.post_processor.mozjpeg" class="Liip\ImagineBundle\Imagine\Filter\PostProcessor\MozJpegPostProcessor">
      <tag name="liip_imagine.filter.post_processor" post_processor="mozjpeg"/>
      <argument>/opt/mozjpeg/bin/cjpeg</argument>
    </service>
    <service id="knp_gaufrette.filesystem" class="Gaufrette\Filesystem" abstract="true">
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.in_memory" class="Gaufrette\Adapter\InMemory" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.local" class="Gaufrette\Adapter\Local" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.safe_local" class="Gaufrette\Adapter\SafeLocal" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.amazon_s3" class="Gaufrette\Adapter\AmazonS3" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.aws_s3" class="Gaufrette\Adapter\AwsS3" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.doctrine_dbal" class="Gaufrette\Adapter\DoctrineDbal" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.acl_aware_amazon_s3" class="Gaufrette\Adapter\AclAwareAmazonS3" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.opencloud" class="Gaufrette\Adapter\OpenCloud" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.azure_blob_storage" class="Gaufrette\Adapter\AzureBlobStorage" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.google_cloud_storage" class="Gaufrette\Adapter\GoogleCloudStorage" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.gridfs" class="Gaufrette\Adapter\GridFS" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.mogilefs" class="Gaufrette\Adapter\MogileFS" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.ftp" class="Gaufrette\Adapter\Ftp" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.sftp" class="Gaufrette\Adapter\Sftp" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.phpseclib_sftp" class="Gaufrette\Adapter\PhpseclibSftp" public="false" abstract="true"/>
    <service id="knp_gaufrette.adapter.apc" class="Gaufrette\Adapter\Apc" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="knp_gaufrette.adapter.cache" class="Gaufrette\Adapter\Cache" public="false" abstract="true"/>
    <service id="knp_gaufrette.filesystem_map" class="Knp\Bundle\GaufretteBundle\FilesystemMap">
      <argument type="collection"/>
    </service>
    <service id="knp_gaufrette.adapter.dropbox" class="Gaufrette\Adapter\Dropbox" public="false" abstract="true"/>
    <service id="white_october_pagerfanta.view_factory" class="Pagerfanta\View\ViewFactory">
      <call method="add">
        <argument type="collection">
          <argument key="default" type="service" id="pagerfanta.view.default"/>
          <argument key="default_translated" type="service" id="pagerfanta.view.default_translated"/>
          <argument key="twitter_bootstrap" type="service" id="pagerfanta.view.twitter_bootstrap"/>
          <argument key="twitter_bootstrap3" type="service" id="pagerfanta.view.twitter_bootstrap3"/>
          <argument key="twitter_bootstrap4" type="service" id="pagerfanta.view.twitter_bootstrap4"/>
          <argument key="semantic_ui" type="service" id="pagerfanta.view.semantic_ui"/>
          <argument key="twitter_bootstrap4_translated" type="service" id="pagerfanta.view.twitter_bootstrap4_translated"/>
          <argument key="twitter_bootstrap3_translated" type="service" id="pagerfanta.view.twitter_bootstrap3_translated"/>
          <argument key="twitter_bootstrap_translated" type="service" id="pagerfanta.view.twitter_bootstrap_translated"/>
          <argument key="semantic_ui_translated" type="service" id="pagerfanta.view.semantic_ui_translated"/>
        </argument>
      </call>
    </service>
    <service id="pagerfanta.view.default" class="Pagerfanta\View\DefaultView" public="false">
      <tag name="pagerfanta.view" alias="default"/>
    </service>
    <service id="pagerfanta.view.default_translated" class="WhiteOctober\PagerfantaBundle\View\DefaultTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="default_translated"/>
      <argument type="service" id="pagerfanta.view.default"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap" class="Pagerfanta\View\TwitterBootstrapView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3" class="Pagerfanta\View\TwitterBootstrap3View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4" class="Pagerfanta\View\TwitterBootstrap4View" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4"/>
    </service>
    <service id="pagerfanta.view.semantic_ui" class="Pagerfanta\View\SemanticUiView" public="false">
      <tag name="pagerfanta.view" alias="semantic_ui"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap4_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrap4TranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap4_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap4"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap3_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrap3TranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap3_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap3"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="pagerfanta.view.twitter_bootstrap_translated" class="WhiteOctober\PagerfantaBundle\View\TwitterBootstrapTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="twitter_bootstrap_translated"/>
      <argument type="service" id="pagerfanta.view.twitter_bootstrap"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="pagerfanta.view.semantic_ui_translated" class="WhiteOctober\PagerfantaBundle\View\SemanticUiTranslatedView" public="false">
      <tag name="pagerfanta.view" alias="semantic_ui_translated"/>
      <argument type="service" id="pagerfanta.view.semantic_ui"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="twig.extension.pagerfanta" class="WhiteOctober\PagerfantaBundle\Twig\PagerfantaExtension" public="false">
      <tag name="twig.extension"/>
      <argument>default</argument>
      <argument type="service" id="white_october_pagerfanta.view_factory"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
    </service>
    <service id="pagerfanta.convert_not_valid_max_per_page_to_not_found_listener" class="WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="pagerfanta.convert_not_valid_current_page_to_not_found_listener" class="WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="datadog.event_subscriber.audit" class="DataDog\AuditBundle\EventSubscriber\AuditSubscriber">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="security.token_storage"/>
      <call method="addUnauditedEntities">
        <argument type="collection"/>
      </call>
    </service>
    <service id="captcha.type" class="Gregwar\CaptchaBundle\Type\CaptchaType">
      <tag name="form.type" alias="captcha"/>
      <argument type="service" id="session"/>
      <argument type="service" id="gregwar_captcha.generator"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="collection">
        <argument key="width">200</argument>
        <argument key="height">50</argument>
        <argument key="length">4</argument>
        <argument key="font">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\vendor\gregwar\captcha-bundle\DependencyInjection/../Generator/Font/captcha.ttf</argument>
        <argument key="keep_value">false</argument>
        <argument key="charset">abcdefhjkmnprstuvwxyz23456789</argument>
        <argument key="as_file">false</argument>
        <argument key="as_url">false</argument>
        <argument key="reload">false</argument>
        <argument key="image_folder">captcha</argument>
        <argument key="web_path">D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</argument>
        <argument key="gc_freq">100</argument>
        <argument key="expiration">60</argument>
        <argument key="quality">50</argument>
        <argument key="invalid_message">Bad code value</argument>
        <argument key="bypass_code">null</argument>
        <argument key="whitelist_key">captcha_whitelist_key</argument>
        <argument key="humanity">0</argument>
        <argument key="distortion">true</argument>
        <argument key="max_front_lines">null</argument>
        <argument key="max_behind_lines">null</argument>
        <argument key="interpolation">true</argument>
        <argument key="text_color" type="collection"/>
        <argument key="background_color" type="collection"/>
        <argument key="background_images" type="collection"/>
        <argument key="disabled">false</argument>
        <argument key="ignore_all_effects">false</argument>
      </argument>
    </service>
    <service id="gregwar_captcha.generator" class="Gregwar\CaptchaBundle\Generator\CaptchaGenerator">
      <argument type="service" id="router.default"/>
      <argument type="service" id="gregwar_captcha.captcha_builder"/>
      <argument type="service" id="gregwar_captcha.phrase_builder"/>
      <argument type="service" id="gregwar_captcha.image_file_handler"/>
    </service>
    <service id="gregwar_captcha.image_file_handler" class="Gregwar\CaptchaBundle\Generator\ImageFileHandler">
      <argument>captcha</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../web</argument>
      <argument>100</argument>
      <argument>60</argument>
    </service>
    <service id="gregwar_captcha.captcha_builder" class="Gregwar\Captcha\CaptchaBuilder"/>
    <service id="gregwar_captcha.phrase_builder" class="Gregwar\Captcha\PhraseBuilder"/>
    <service id="lexik_jwt_authentication.encoder.abstract" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder" abstract="true"/>
    <service id="lexik_jwt_authentication.encoder.default" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.default"/>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager">
      <argument type="service" id="lexik_jwt_authentication.encoder.default"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.default" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\DefaultJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.openssl"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>86400</argument>
    </service>
    <service id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" public="false" abstract="true">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.key</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.crt</argument>
      <argument>1234</argument>
    </service>
    <service id="lexik_jwt_authentication.key_loader.openssl" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\OpenSSLKeyLoader" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.key</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.crt</argument>
      <argument>1234</argument>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader" public="false">
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.key</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\app/../app/config/jwt/server.crt</argument>
      <argument>1234</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor" public="false">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider" public="false">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand">
      <tag name="console.command" command="lexik:jwt:check-config"/>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
      <argument></argument>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.listener" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint" public="false">
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="gesdinet.jwtrefreshtoken.send_token" class="Gesdinet\JWTRefreshTokenBundle\EventListener\AttachRefreshTokenOnSuccessListener">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="attachRefreshToken"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>86400</argument>
      <argument type="service" id="validator"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.refresh_token_manager" class="Gesdinet\JWTRefreshTokenBundle\Doctrine\RefreshTokenManager">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken" class="Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken">
      <argument type="service" id="gesdinet.jwtrefreshtoken.authenticator"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.user_provider"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>86400</argument>
      <argument>api</argument>
      <argument>true</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.user_provider" class="Gesdinet\JWTRefreshTokenBundle\Security\Provider\RefreshTokenProvider">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.authenticator" class="Gesdinet\JWTRefreshTokenBundle\Security\Authenticator\RefreshTokenAuthenticator"/>
    <service id="app.admin.empresa" class="AppBundle\Admin\EmpresaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="general" label="Empresa"/>
      <argument>app.admin.empresa</argument>
      <argument>AppBundle\Entity\Empresa</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Empresa</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.empresa.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.organismos" class="AppBundle\Admin\OrganismosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="general" label="Organismos"/>
      <argument>app.admin.organismos</argument>
      <argument>AppBundle\Entity\Organismos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Organismos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.organismos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.personas" class="AppBundle\Admin\PersonasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="general" label="Personas"/>
      <argument>app.admin.personas</argument>
      <argument>AppBundle\Entity\Personas</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Personas</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.personas.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.areas.internet" class="AppBundle\Admin\anexo1_contrato_areas_internetAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_areas" label="Tarifas y Distribución de Ingresos."/>
      <argument>app.admin.anexo1.contrato.areas.internet</argument>
      <argument>AppBundle\Entity\anexo1_contrato_areas_internet</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tarifas y Distribución de Ingresos.</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.areas.internet.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.espacios" class="AppBundle\Admin\anexo1_contrato_arrendamiento_espaciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Anexo 1 Contrato Arrendamiento de Espacios"/>
      <argument>app.admin.anexo1.contrato.arrendamiento.espacios</argument>
      <argument>AppBundle\Entity\anexo1_contrato_arrendamiento_espacios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 1 Contrato Arrendamiento de Espacios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.arrendamiento.espacios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx" class="AppBundle\Admin\anexo1_contrato_arrendamiento_pizarras_privadas_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_pizarra" label="Anexo 1 Contrato Arrendamiento Pizarras"/>
      <argument>app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx</argument>
      <argument>AppBundle\Entity\anexo1_contrato_arrendamiento_pizarras_privadas_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 1 Contrato Arrendamiento Pizarras</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.redes" class="AppBundle\Admin\anexo1_contrato_arrendamiento_redesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_redes" label="Tarifas para el arrendamiento de Redes"/>
      <argument>app.admin.anexo1.contrato.arrendamiento.redes</argument>
      <argument>AppBundle\Entity\anexo1_contrato_arrendamiento_redes</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tarifas para el arrendamiento de Redes</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.arrendamiento.redes.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.compra.venta" class="AppBundle\Admin\anexo1_contrato_compra_ventaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta" label="Descripción de los productos"/>
      <argument>app.admin.anexo1.contrato.compra.venta</argument>
      <argument>AppBundle\Entity\anexo1_contrato_compra_venta</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Descripción de los productos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.compra.venta.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.compra.venta.pizarra" class="AppBundle\Admin\anexo1_contrato_compra_venta_pizarraAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta_pizarra" label="Anexo 1 Contrato Compra Venta Pizarra"/>
      <argument>app.admin.anexo1.contrato.compra.venta.pizarra</argument>
      <argument>AppBundle\Entity\anexo1_contrato_compra_venta_pizarra</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 1 Contrato Compra Venta Pizarra</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.compra.venta.pizarra.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.contactos.telefonicos" class="AppBundle\Admin\anexo1_contrato_contactos_telefonicosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios_ct" label="Especificaciones del Servicio"/>
      <argument>app.admin.anexo1.contrato.contactos.telefonicos</argument>
      <argument>AppBundle\Entity\anexo1_contrato_contactos_telefonicos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Especificaciones del Servicio</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.contactos.telefonicos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo1.contrato.mantenimiento.pizarra.pbx" class="AppBundle\Admin\anexo1_contrato_mantenimiento_pizarra_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Anexo 1 Contrato Mantenimiento Pizarras"/>
      <argument>app.admin.anexo1.contrato.mantenimiento.pizarra.pbx</argument>
      <argument>AppBundle\Entity\anexo1_contrato_mantenimiento_pizarra_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 1 Contrato Mantenimiento Pizarras</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo1.contrato.mantenimiento.pizarra.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo2.contrato.areas.internet" class="AppBundle\Admin\anexo2_contrato_areas_internetAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_areas" label="Aportes de las Partes"/>
      <argument>app.admin.anexo2.contrato.areas.internet</argument>
      <argument>AppBundle\Entity\anexo2_contrato_areas_internet</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Aportes de las Partes</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo2.contrato.areas.internet.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo2.contrato.arrendamiento.redes" class="AppBundle\Admin\anexo2_contrato_arrendamiento_redesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_redes" label="Relación de tramos de Redes"/>
      <argument>app.admin.anexo2.contrato.arrendamiento.redes</argument>
      <argument>AppBundle\Entity\anexo2_contrato_arrendamiento_redes</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Relación de tramos de Redes</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo2.contrato.arrendamiento.redes.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo2.contrato.instalacion.pizarra.pbx" class="AppBundle\Admin\anexo2_contrato_instalacion_pizarra_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_instalacion_pizarra" label="Equipos Contratados"/>
      <argument>app.admin.anexo2.contrato.instalacion.pizarra.pbx</argument>
      <argument>AppBundle\Entity\anexo2_contrato_instalacion_pizarra_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Equipos Contratados</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo2.contrato.instalacion.pizarra.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo2.contrato.recarga.por.pos" class="AppBundle\Admin\anexo2_contrato_recarga_por_posAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_recarga_pos" label="Puntos de Ventas del Cliente"/>
      <argument>app.admin.anexo2.contrato.recarga.por.pos</argument>
      <argument>AppBundle\Entity\anexo2_contrato_recarga_por_pos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Puntos de Ventas del Cliente</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo2.contrato.recarga.por.pos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.datos.cuentas.bancarias.etecsa" class="AppBundle\Admin\datos_cuentas_bancarias_etecsaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_agencia" label="Datos de las Cuentas Bancarias de ETECSA"/>
      <argument>app.admin.datos.cuentas.bancarias.etecsa</argument>
      <argument>AppBundle\Entity\datos_cuentas_bancarias_etecsa</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Datos de las Cuentas Bancarias de ETECSA</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.datos.cuentas.bancarias.etecsa.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo4.contrato.agencia" class="AppBundle\Admin\anexo4_contrato_agenciaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_agencia" label="Puntos de atencion al agente"/>
      <argument>app.admin.anexo4.contrato.agencia</argument>
      <argument>AppBundle\Entity\anexo4_contrato_agencia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Puntos de atencion al agente</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo4.contrato.agencia.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo4.arrendamiento.espacios" class="AppBundle\Admin\anexo4_arrendamiento_espaciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Anexo 4 Arrendamiento Espacios"/>
      <argument>app.admin.anexo4.arrendamiento.espacios</argument>
      <argument>AppBundle\Entity\anexo4_arrendamiento_espacios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 4 Arrendamiento Espacios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo4.arrendamiento.espacios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo4.contrato.compra.venta" class="AppBundle\Admin\anexo4_contrato_compra_ventaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta" label="Puntos de Comercialización por ETECSA"/>
      <argument>app.admin.anexo4.contrato.compra.venta</argument>
      <argument>AppBundle\Entity\anexo4_contrato_compra_venta</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Puntos de Comercialización por ETECSA</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo4.contrato.compra.venta.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo4.contrato.recarga.por.pos" class="AppBundle\Admin\anexo4_contrato_recarga_por_posAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_recarga_pos" label="Acta de Entrega"/>
      <argument>app.admin.anexo4.contrato.recarga.por.pos</argument>
      <argument>AppBundle\Entity\anexo4_contrato_recarga_por_pos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Acta de Entrega</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo4.contrato.recarga.por.pos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo5.contrato.agencia" class="AppBundle\Admin\anexo5_contrato_agenciaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_agencia" label="Puntos de comercialización del agente"/>
      <argument>app.admin.anexo5.contrato.agencia</argument>
      <argument>AppBundle\Entity\anexo5_contrato_agencia</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Puntos de comercialización del agente</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo5.contrato.agencia.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo5.arrendaminto.espacios" class="AppBundle\Admin\anexo5_arrendaminto_espaciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Anexo 5 Arrendamiento Espacios"/>
      <argument>app.admin.anexo5.arrendaminto.espacios</argument>
      <argument>AppBundle\Entity\anexo5_arrendaminto_espacios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Anexo 5 Arrendamiento Espacios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo5.arrendaminto.espacios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexo5.contrato.areas.internet" class="AppBundle\Admin\anexo5_contrato_areas_internetAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_areas" label="Punto de comercialización."/>
      <argument>app.admin.anexo5.contrato.areas.internet</argument>
      <argument>AppBundle\Entity\anexo5_contrato_areas_internet</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Punto de comercialización.</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexo5.contrato.areas.internet.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexocps.conexion.centrales.telefonicas" class="AppBundle\Admin\anexocps_conexion_centrales_telefonicasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios" label="Conexion Centrales Telefonicos"/>
      <argument>app.admin.anexocps.conexion.centrales.telefonicas</argument>
      <argument>AppBundle\Entity\anexocps_conexion_centrales_telefonicas</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Conexion Centrales Telefonicos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexocps.conexion.centrales.telefonicas.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexocps.levantamiento.redes.tecnicas" class="AppBundle\Admin\anexocps_levantamiento_redes_tecnicasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios" label="Levantamiento Redes Tecnicas"/>
      <argument>app.admin.anexocps.levantamiento.redes.tecnicas</argument>
      <argument>AppBundle\Entity\anexocps_levantamiento_redes_tecnicas</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Levantamiento Redes Tecnicas</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexocps.levantamiento.redes.tecnicas.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.anexocps.servicios.terceros" class="AppBundle\Admin\anexocps_servicios_tercerosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios" label="Servicios a Terceros"/>
      <argument>app.admin.anexocps.servicios.terceros</argument>
      <argument>AppBundle\Entity\anexocps_servicios_terceros</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Servicios a Terceros</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.anexocps.servicios.terceros.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.agencia.persona.juridica" class="AppBundle\Admin\contrato_agencia_persona_juridicaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_agencia" label="Contratos Agencia Persona Juridica"/>
      <argument>app.admin.contrato.agencia.persona.juridica</argument>
      <argument>AppBundle\Entity\contrato_agencia_persona_juridica</argument>
      <argument>AppBundle\Controller\ContratoAgenciaController</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Agencia Persona Juridica</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.agencia.persona.juridica.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.areas.internet" class="AppBundle\Admin\contrato_areas_internetAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_areas" label="Contratos Areas Internet"/>
      <argument>app.admin.contrato.areas.internet</argument>
      <argument>AppBundle\Entity\contrato_areas_internet</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Areas Internet</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.areas.internet.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.arrendamiento.espacios" class="AppBundle\Admin\contrato_arrendamiento_espaciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Contratos Arrendamiento Espacios"/>
      <argument>app.admin.contrato.arrendamiento.espacios</argument>
      <argument>AppBundle\Entity\contrato_arrendamiento_espacios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Arrendamiento Espacios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.arrendamiento.espacios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.arrendamiento.pizarra.privada.pbx" class="AppBundle\Admin\contrato_arrendamiento_pizarra_privada_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_pizarra" label="Contratos Arrendamiento Pizarras Privadas"/>
      <argument>app.admin.contrato.arrendamiento.pizarra.privada.pbx</argument>
      <argument>AppBundle\Entity\contrato_arrendamiento_pizarra_privada_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Arrendamiento Pizarras Privadas</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.arrendamiento.pizarra.privada.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.arrendamiento.redes" class="AppBundle\Admin\contrato_arrendamiento_redesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_redes" label="Contratos Arrendamiento de Redes"/>
      <argument>app.admin.contrato.arrendamiento.redes</argument>
      <argument>AppBundle\Entity\contrato_arrendamiento_redes</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Arrendamiento de Redes</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.arrendamiento.redes.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.compra.venta" class="AppBundle\Admin\contrato_compra_ventaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta" label="Contratos Compra Venta"/>
      <argument>app.admin.contrato.compra.venta</argument>
      <argument>AppBundle\Entity\contrato_compra_venta</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Compra Venta</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.compra.venta.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.instalacion.pizarra.pbx" class="AppBundle\Admin\contrato_instalacion_pizarra_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_instalacion_pizarra" label="Contratos Instalacion Pizarra"/>
      <argument>app.admin.contrato.instalacion.pizarra.pbx</argument>
      <argument>AppBundle\Entity\contrato_instalacion_pizarra_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Instalacion Pizarra</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.instalacion.pizarra.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.mantenimiento.pizarra.pbx" class="AppBundle\Admin\contrato_mantenimiento_pizarra_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Contratos Mantenimiento Pizarra"/>
      <argument>app.admin.contrato.mantenimiento.pizarra.pbx</argument>
      <argument>AppBundle\Entity\contrato_mantenimiento_pizarra_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Mantenimiento Pizarra</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.mantenimiento.pizarra.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.prestacion.servicios" class="AppBundle\Admin\contrato_prestacion_serviciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios" label="Contratos Prestacion Servicios"/>
      <argument>app.admin.contrato.prestacion.servicios</argument>
      <argument>AppBundle\Entity\contrato_prestacion_servicios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Prestacion Servicios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.prestacion.servicios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.recarga.por.pos" class="AppBundle\Admin\contrato_recarga_por_posAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_recarga_pos" label="Contratos Recarga por POS"/>
      <argument>app.admin.contrato.recarga.por.pos</argument>
      <argument>AppBundle\Entity\contrato_recarga_por_pos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Recarga por POS</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.recarga.por.pos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.descripcion.productos.servicios" class="AppBundle\Admin\descripcion_productos_serviciosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Descripcion Productos y Servicios"/>
      <argument>app.admin.descripcion.productos.servicios</argument>
      <argument>AppBundle\Entity\descripcion_productos_servicios</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Descripcion Productos y Servicios</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.descripcion.productos.servicios.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.facilidades.del.equipo" class="AppBundle\Admin\facilidades_del_equipoAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Facilidades del Equipo"/>
      <argument>app.admin.facilidades.del.equipo</argument>
      <argument>AppBundle\Entity\facilidades_del_equipo</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Facilidades del Equipo</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.facilidades.del.equipo.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.grupos.electrogenos" class="AppBundle\Admin\grupos_electrogenosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Grupos Electrógenos"/>
      <argument>app.admin.grupos.electrogenos</argument>
      <argument>AppBundle\Entity\grupos_electrogenos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Grupos Electrógenos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.grupos.electrogenos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.locales" class="AppBundle\Admin\localesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="locales"/>
      <argument>app.admin.locales</argument>
      <argument>AppBundle\Entity\locales</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>locales</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.locales.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.mantenimiento.correctivo" class="AppBundle\Admin\mantenimiento_correctivoAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Mantenimiento Correctivo"/>
      <argument>app.admin.mantenimiento.correctivo</argument>
      <argument>AppBundle\Entity\mantenimiento_correctivo</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Mantenimiento Correctivo</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.mantenimiento.correctivo.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.mantenimiento.preventivo" class="AppBundle\Admin\mantenimiento_preventivoAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Mantenimiento Preventivo"/>
      <argument>app.admin.mantenimiento.preventivo</argument>
      <argument>AppBundle\Entity\mantenimiento_preventivo</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Mantenimiento Preventivo</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.mantenimiento.preventivo.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.pizarra.pbx" class="AppBundle\Admin\pizarra_pbxAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="general" label="Pizarras PBX"/>
      <argument>app.admin.pizarra.pbx</argument>
      <argument>AppBundle\Entity\pizarra_pbx</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Pizarras PBX</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.pizarra.pbx.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.protecciones.tierra" class="AppBundle\Admin\protecciones_tierraAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Protecciones_tierra"/>
      <argument>app.admin.protecciones.tierra</argument>
      <argument>AppBundle\Entity\protecciones_tierra</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Protecciones_tierra</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.protecciones.tierra.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.antenas.a4" class="AppBundle\Admin\relacion_antenas_a4Admin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Antenas"/>
      <argument>app.admin.relacion.antenas.a4</argument>
      <argument>AppBundle\Entity\relacion_antenas_a4</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Antenas</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.antenas.a4.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.bastidores" class="AppBundle\Admin\relacion_bastidoresAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Bastidores"/>
      <argument>app.admin.relacion.bastidores</argument>
      <argument>AppBundle\Entity\relacion_bastidores</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Bastidores</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.bastidores.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.equipos" class="AppBundle\Admin\relacion_equiposAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Equipos"/>
      <argument>app.admin.relacion.equipos</argument>
      <argument>AppBundle\Entity\relacion_equipos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Equipos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.equipos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.iluminacion.tomacorriente" class="AppBundle\Admin\relacion_iluminacion_tomacorrienteAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="relacion_iluminacion_tomacorriente"/>
      <argument>app.admin.relacion.iluminacion.tomacorriente</argument>
      <argument>AppBundle\Entity\relacion_iluminacion_tomacorriente</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>relacion_iluminacion_tomacorriente</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.iluminacion.tomacorriente.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.mastiles.a4" class="AppBundle\Admin\relacion_mastiles_a4Admin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Mástiles"/>
      <argument>app.admin.relacion.mastiles.a4</argument>
      <argument>AppBundle\Entity\relacion_mastiles_a4</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Mástiles</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.mastiles.a4.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.terminaciones.bastidor" class="AppBundle\Admin\relacion_terminaciones_bastidorAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="relacion_terminaciones_bastidor"/>
      <argument>app.admin.relacion.terminaciones.bastidor</argument>
      <argument>AppBundle\Entity\relacion_terminaciones_bastidor</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>relacion_terminaciones_bastidor</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.terminaciones.bastidor.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.torres.a4" class="AppBundle\Admin\relacion_torres_a4Admin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Torres"/>
      <argument>app.admin.relacion.torres.a4</argument>
      <argument>AppBundle\Entity\relacion_torres_a4</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Torres</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.torres.a4.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.relacion.vias" class="AppBundle\Admin\relacion_viasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Vías"/>
      <argument>app.admin.relacion.vias</argument>
      <argument>AppBundle\Entity\relacion_vias</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Vías</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.relacion.vias.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.sistema.corriente.directa" class="AppBundle\Admin\sistema_corriente_directaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Sistemas de Corriente Directa"/>
      <argument>app.admin.sistema.corriente.directa</argument>
      <argument>AppBundle\Entity\sistema_corriente_directa</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Sistemas de Corriente Directa</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.sistema.corriente.directa.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.sistema.iluminacion.a5" class="AppBundle\Admin\sistema_iluminacion_a5Admin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Sistemas de Iluminación"/>
      <argument>app.admin.sistema.iluminacion.a5</argument>
      <argument>AppBundle\Entity\sistema_iluminacion_a5</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Sistemas de Iluminación</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.sistema.iluminacion.a5.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.sistemas.corriente.alterna" class="AppBundle\Admin\sistemas_corriente_alternaAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Sistemas de Corriente Alterna"/>
      <argument>app.admin.sistemas.corriente.alterna</argument>
      <argument>AppBundle\Entity\sistemas_corriente_alterna</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Sistemas de Corriente Alterna</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.sistemas.corriente.alterna.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tarifas.espacios.arrendados" class="AppBundle\Admin\tarifas_espacios_arrendadosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Tarifas de Espacios Arrendados"/>
      <argument>app.admin.tarifas.espacios.arrendados</argument>
      <argument>AppBundle\Entity\tarifas_espacios_arrendados</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tarifas de Espacios Arrendados</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tarifas.espacios.arrendados.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.terminaciones" class="AppBundle\Admin\terminacionesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Terminaciones"/>
      <argument>app.admin.terminaciones</argument>
      <argument>AppBundle\Entity\terminaciones</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Terminaciones</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.terminaciones.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tipos.de.mantenimientos" class="AppBundle\Admin\tipos_de_mantenimientosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Tipos de Mantenimientos"/>
      <argument>app.admin.tipos.de.mantenimientos</argument>
      <argument>AppBundle\Entity\tipos_de_mantenimientos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tipos de Mantenimientos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tipos.de.mantenimientos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tipos.distancias.arrendadas" class="AppBundle\Admin\tipos_distancias_arrendadasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_redes" label="Tipos de distancias arrendadas"/>
      <argument>app.admin.tipos.distancias.arrendadas</argument>
      <argument>AppBundle\Entity\tipos_distancias_arrendadas</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tipos de distancias arrendadas</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tipos.distancias.arrendadas.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tipos.mantenimientos.correctivos" class="AppBundle\Admin\tipos_mantenimientos_correctivosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_mantenimiento_pizarra" label="Tipos Mantenimientos Correctivos"/>
      <argument>app.admin.tipos.mantenimientos.correctivos</argument>
      <argument>AppBundle\Entity\tipos_mantenimientos_correctivos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tipos Mantenimientos Correctivos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tipos.mantenimientos.correctivos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tomacorrientes" class="AppBundle\Admin\tomacorrientesAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_arrendamiento_espacios" label="Tomacorrientes"/>
      <argument>app.admin.tomacorrientes</argument>
      <argument>AppBundle\Entity\tomacorrientes</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tomacorrientes</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tomacorrientes.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.descripcion.productos.contratados" class="AppBundle\Admin\descripcion_productos_contratadosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta_pizarra" label="Descripción Productos Contratados"/>
      <argument>app.admin.descripcion.productos.contratados</argument>
      <argument>AppBundle\Entity\descripcion_productos_contratados</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Descripción Productos Contratados</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.descripcion.productos.contratados.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.contactos.telefonicos" class="AppBundle\Admin\contrato_contactos_telefonicosAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios_ct" label="Contratos Contactos Telefonicos"/>
      <argument>app.admin.contrato.contactos.telefonicos</argument>
      <argument>AppBundle\Entity\contrato_contactos_telefonicos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Contactos Telefonicos</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.contactos.telefonicos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.equipamiento.gsm.pos" class="AppBundle\Admin\equipamiento_gsm_posAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_recarga_pos" label="Equipamiento GSM"/>
      <argument>app.admin.equipamiento.gsm.pos</argument>
      <argument>AppBundle\Entity\equipamiento_gsm_pos</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Equipamiento GSM</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.equipamiento.gsm.pos.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tarjetas.sim" class="AppBundle\Admin\tarjetas_simAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_recarga_pos" label="Tarjetas SIM"/>
      <argument>app.admin.tarjetas.sim</argument>
      <argument>AppBundle\Entity\tarjetas_sim</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tarjetas SIM</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tarjetas.sim.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.tarifas.conexion.pizarras" class="AppBundle\Admin\tarifas_conexion_pizarrasAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_prestacion_servicios" label="Tarifas Conexion Pizarras"/>
      <argument>app.admin.tarifas.conexion.pizarras</argument>
      <argument>AppBundle\Entity\tarifas_conexion_pizarras</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Tarifas Conexion Pizarras</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.tarifas.conexion.pizarras.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="app.admin.contrato.comp.vent.pizarra" class="AppBundle\Admin\contrato_comp_vent_pizarraAdmin" shared="false">
      <tag name="sonata.admin" manager_type="orm" group="contrato_compra_venta_pizarra" label="Contratos Compra Venta de Pizarras"/>
      <argument>app.admin.contrato.comp.vent.pizarra</argument>
      <argument>AppBundle\Entity\contrato_comp_vent_pizarra</argument>
      <argument>SonataAdminBundle:CRUD</argument>
      <call method="setManagerType">
        <argument>orm</argument>
      </call>
      <call method="setModelManager">
        <argument type="service" id="sonata.admin.manager.orm"/>
      </call>
      <call method="setFormContractor">
        <argument type="service" id="sonata.admin.builder.orm_form"/>
      </call>
      <call method="setShowBuilder">
        <argument type="service" id="sonata.admin.builder.orm_show"/>
      </call>
      <call method="setListBuilder">
        <argument type="service" id="sonata.admin.builder.orm_list"/>
      </call>
      <call method="setDatagridBuilder">
        <argument type="service" id="sonata.admin.builder.orm_datagrid"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector"/>
        <argument>false</argument>
      </call>
      <call method="setConfigurationPool">
        <argument type="service" id="sonata.admin.pool"/>
      </call>
      <call method="setRouteGenerator">
        <argument type="service" id="sonata.admin.route.default_generator"/>
      </call>
      <call method="setValidator">
        <argument type="service" id="validator"/>
      </call>
      <call method="setSecurityHandler">
        <argument type="service" id="sonata.admin.security.handler.role"/>
      </call>
      <call method="setMenuFactory">
        <argument type="service" id="knp_menu.factory"/>
      </call>
      <call method="setRouteBuilder">
        <argument type="service" id="sonata.admin.route.path_info"/>
      </call>
      <call method="setLabelTranslatorStrategy">
        <argument type="service" id="sonata.admin.label.strategy.native"/>
      </call>
      <call method="setPagerType">
        <argument>default</argument>
      </call>
      <call method="setLabel">
        <argument>Contratos Compra Venta de Pizarras</argument>
      </call>
      <call method="showMosaicButton">
        <argument>true</argument>
      </call>
      <call method="setTemplateRegistry">
        <argument type="service" id="app.admin.contrato.comp.vent.pizarra.template_registry"/>
      </call>
      <call method="setSecurityInformation">
        <argument type="collection">
          <argument key="EDIT" type="collection">
            <argument>EDIT</argument>
          </argument>
          <argument key="LIST" type="collection">
            <argument>LIST</argument>
          </argument>
          <argument key="CREATE" type="collection">
            <argument>CREATE</argument>
          </argument>
          <argument key="VIEW" type="collection">
            <argument>VIEW</argument>
          </argument>
          <argument key="DELETE" type="collection">
            <argument>DELETE</argument>
          </argument>
          <argument key="EXPORT" type="collection">
            <argument>EXPORT</argument>
          </argument>
          <argument key="ALL" type="collection">
            <argument>ALL</argument>
          </argument>
        </argument>
      </call>
      <call method="initialize"/>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.event.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="sonata.admin.lock.extension"/>
      </call>
      <call method="setFormTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/form_admin_fields.html.twig</argument>
        </argument>
      </call>
      <call method="setFilterTheme">
        <argument type="collection">
          <argument>@SonataDoctrineORMAdmin/Form/filter_admin_fields.html.twig</argument>
        </argument>
      </call>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.cli_dumper"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
    </service>
    <service id="var_dumper.cli_dumper" class="Symfony\Component\VarDumper\Dumper\CliDumper">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="2_fc18c43d7ba78dd1a1ec08e89bbb366518c7312f2cbec6475edf1edb36996820" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id="1_fc18c43d7ba78dd1a1ec08e89bbb366518c7312f2cbec6475edf1edb36996820" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="collection">
        <argument key="data_collector.request" type="collection">
          <argument>request</argument>
          <argument>@WebProfiler/Collector/request.html.twig</argument>
        </argument>
        <argument key="data_collector.time" type="collection">
          <argument>time</argument>
          <argument>@WebProfiler/Collector/time.html.twig</argument>
        </argument>
        <argument key="data_collector.memory" type="collection">
          <argument>memory</argument>
          <argument>@WebProfiler/Collector/memory.html.twig</argument>
        </argument>
        <argument key="data_collector.ajax" type="collection">
          <argument>ajax</argument>
          <argument>@WebProfiler/Collector/ajax.html.twig</argument>
        </argument>
        <argument key="data_collector.form" type="collection">
          <argument>form</argument>
          <argument>@WebProfiler/Collector/form.html.twig</argument>
        </argument>
        <argument key="data_collector.exception" type="collection">
          <argument>exception</argument>
          <argument>@WebProfiler/Collector/exception.html.twig</argument>
        </argument>
        <argument key="data_collector.logger" type="collection">
          <argument>logger</argument>
          <argument>@WebProfiler/Collector/logger.html.twig</argument>
        </argument>
        <argument key="data_collector.events" type="collection">
          <argument>events</argument>
          <argument>@WebProfiler/Collector/events.html.twig</argument>
        </argument>
        <argument key="data_collector.router" type="collection">
          <argument>router</argument>
          <argument>@WebProfiler/Collector/router.html.twig</argument>
        </argument>
        <argument key="data_collector.cache" type="collection">
          <argument>cache</argument>
          <argument>@WebProfiler/Collector/cache.html.twig</argument>
        </argument>
        <argument key="data_collector.translation" type="collection">
          <argument>translation</argument>
          <argument>@WebProfiler/Collector/translation.html.twig</argument>
        </argument>
        <argument key="data_collector.security" type="collection">
          <argument>security</argument>
          <argument>@Security/Collector/security.html.twig</argument>
        </argument>
        <argument key="data_collector.twig" type="collection">
          <argument>twig</argument>
          <argument>@WebProfiler/Collector/twig.html.twig</argument>
        </argument>
        <argument key="data_collector.doctrine" type="collection">
          <argument>db</argument>
          <argument>@Doctrine/Collector/db.html.twig</argument>
        </argument>
        <argument key="swiftmailer.data_collector" type="collection">
          <argument>swiftmailer</argument>
          <argument>@Swiftmailer/Collector/swiftmailer.html.twig</argument>
        </argument>
        <argument key="data_collector.dump" type="collection">
          <argument>dump</argument>
          <argument>@Debug/Profiler/dump.html.twig</argument>
        </argument>
        <argument key="sonata.block.data_collector" type="collection">
          <argument>block</argument>
          <argument>@SonataBlock/Profiler/block.html.twig</argument>
        </argument>
        <argument key="data_collector.config" type="collection">
          <argument>config</argument>
          <argument>@WebProfiler/Collector/config.html.twig</argument>
        </argument>
      </argument>
      <argument>bottom</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id="1_fc18c43d7ba78dd1a1ec08e89bbb366518c7312f2cbec6475edf1edb36996820"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="2_fc18c43d7ba78dd1a1ec08e89bbb366518c7312f2cbec6475edf1edb36996820"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument>bottom</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/(app(_[\w]+)?\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="sensio_distribution.security_checker" class="SensioLabs\Security\SecurityChecker"/>
    <service id="sensio_distribution.security_checker.command" class="SensioLabs\Security\Command\SecurityCheckerCommand">
      <tag name="console.command"/>
      <argument type="service" id="sensio_distribution.security_checker"/>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa/public</argument>
      <argument>dev</argument>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command"/>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa/public</argument>
      <argument>dev</argument>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command"/>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command"/>
    </service>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.AppBundle\Controller\Api\SecurityApiController" class="AppBundle\Controller\Api\SecurityApiController" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.AppBundle\Controller\Api\SecurityApiController" class="AppBundle\Controller\Api\SecurityApiController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="instanceof.Symfony\Bundle\FrameworkBundle\Controller\Controller.0.AppBundle\Controller\DefaultController" class="AppBundle\Controller\DefaultController" autowire="true" abstract="true"/>
    <service id="abstract.instanceof.AppBundle\Controller\DefaultController" class="AppBundle\Controller\DefaultController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id="service_locator.f8edfb1686193bafcb10278f2e28652d" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.182f5c5b079727c046caf1a16a7b23a8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="viewhandler" type="service" id="fos_rest.view_handler.default" on-invalid="ignore"/>
      </argument>
    </service>
    <service id="service_locator.d2d293931e538c2ae2613f859d2f7f39" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.d156cb775353debc88b5b97469687320" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.6b66e19a515052349ef84a701118a8e0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.c4674f18087954dadb3c24fd129d1265" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.4f8384c8862c511eefe34301cff90111" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="service_locator.717bc613acdb6c8c838334d17e5a2b7a" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="AppBundle\Controller\Api\SecurityApiController:setViewHandler" type="service" id="service_locator.182f5c5b079727c046caf1a16a7b23a8"/>
        <argument key="AppBundle\Controller\Api\SecurityApiController::setViewHandler" type="service" id="service_locator.182f5c5b079727c046caf1a16a7b23a8"/>
      </argument>
    </service>
    <service id="service_locator.20ccd3ddf0f78b2202986f924e362585" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id="service_locator.30c8909b27c8478a53c2a599f1152c9c" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Gregwar\CaptchaBundle\Type\CaptchaType" type="service" id="captcha.type"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\BooleanFilterType" type="service" id="lexik_form_filter.type.filter_boolean"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CheckboxFilterType" type="service" id="lexik_form_filter.type.filter_checkbox"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\ChoiceFilterType" type="service" id="lexik_form_filter.type.filter_choice"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CollectionAdapterFilterType" type="service" id="lexik_form_filter.type.filter_collection_adapter"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateFilterType" type="service" id="lexik_form_filter.type.filter_date"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateRangeFilterType" type="service" id="lexik_form_filter.type.filter_date_range"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeFilterType" type="service" id="lexik_form_filter.type.filter_datetime"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeRangeFilterType" type="service" id="lexik_form_filter.type.filter_datetime_range"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\EntityFilterType" type="service" id="lexik_form_filter.type.filter_entity"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberFilterType" type="service" id="lexik_form_filter.type.filter_number"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberRangeFilterType" type="service" id="lexik_form_filter.type.filter_number_range"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\SharedableFilterType" type="service" id="lexik_form_filter.type.filter_sharedable"/>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\TextFilterType" type="service" id="lexik_form_filter.type.filter_text"/>
        <argument key="Liip\ImagineBundle\Form\Type\ImageType" type="service" id="liip_imagine.form.type.image"/>
        <argument key="Mopa\Bundle\BootstrapBundle\Form\Type\FormActionsType" type="service" id="mopa_bootstrap.form.type.form_actions"/>
        <argument key="Mopa\Bundle\BootstrapBundle\Form\Type\TabType" type="service" id="mopa_bootstrap.form.type.tab"/>
        <argument key="AppBundle\Form\User\Type\ProfileAuthenticationFormType" type="service" id="application_sonata_user.profile.authentication.form.type"/>
        <argument key="AppBundle\Form\User\Type\ProfileFormType" type="service" id="application_user.profile.form.type"/>
        <argument key="AppBundle\Form\User\Type\RegistrationFormType" type="service" id="application_user.registration.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType" type="service" id="fos_user.change_password.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType" type="service" id="fos_user.group.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType" type="service" id="fos_user.profile.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType" type="service" id="fos_user.registration.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType" type="service" id="fos_user.resetting.form.type"/>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType" type="service" id="fos_user.username_form_type"/>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType" type="service" id="ivory_ck_editor.form.type"/>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType" type="service" id="sonata.admin.form.type.admin"/>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType" type="service" id="sonata.admin.doctrine_orm.form.type.choice_field_mask"/>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType" type="service" id="sonata.admin.form.type.collection"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType" type="service" id="sonata.admin.form.filter.type.choice"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType" type="service" id="sonata.admin.form.filter.type.daterange"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType" type="service" id="sonata.admin.form.filter.type.datetime_range"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType" type="service" id="sonata.admin.form.filter.type.datetime"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType" type="service" id="sonata.admin.form.filter.type.date"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType" type="service" id="sonata.admin.form.filter.type.default"/>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType" type="service" id="sonata.admin.form.filter.type.number"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType" type="service" id="sonata.admin.form.type.model_autocomplete"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType" type="service" id="sonata.admin.form.type.model_hidden"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType" type="service" id="sonata.admin.form.type.model_list"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType" type="service" id="sonata.admin.form.type.model_reference"/>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType" type="service" id="sonata.admin.form.type.model_choice"/>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType" type="service" id="sonata.block.form.type.container_template"/>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType" type="service" id="sonata.block.form.type.block"/>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCategoryType" type="service" id="sonata.classification.api.form.type.category"/>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCollectionType" type="service" id="sonata.classification.api.form.type.collection"/>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiContextType" type="service" id="sonata.classification.api.form.type.context"/>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiTagType" type="service" id="sonata.classification.api.form.type.tag"/>
        <argument key="Sonata\ClassificationBundle\Form\Type\CategorySelectorType" type="service" id="sonata.classification.form.type.category_selector"/>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType" type="service" id="sonata.core.form.type.boolean"/>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType" type="service" id="sonata.core.form.type.collection"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType" type="service" id="sonata.core.form.type.color_selector"/>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType" type="service" id="sonata.core.form.type.color"/>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType" type="service" id="sonata.core.form.type.date_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType" type="service" id="sonata.core.form.type.date_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType" type="service" id="sonata.core.form.type.date_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType" type="service" id="sonata.core.form.type.datetime_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType" type="service" id="sonata.core.form.type.datetime_range_picker"/>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType" type="service" id="sonata.core.form.type.datetime_range"/>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType" type="service" id="sonata.core.form.type.equal"/>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType" type="service" id="sonata.core.form.type.array"/>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType" type="service" id="sonata.core.form.type.translatable_choice"/>
        <argument key="Sonata\FormatterBundle\Form\Type\FormatterType" type="service" id="sonata.formatter.form.type.selector"/>
        <argument key="Sonata\FormatterBundle\Form\Type\SimpleFormatterType" type="service" id="sonata.formatter.form.type.simple"/>
        <argument key="Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType" type="service" id="sonata.media.api.form.type.doctrine.media"/>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType" type="service" id="sonata.media.api.form.type.gallery_has_media"/>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryType" type="service" id="sonata.media.api.form.type.gallery"/>
        <argument key="Sonata\MediaBundle\Form\Type\ApiMediaType" type="service" id="sonata.media.api.form.type.media"/>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType" type="service" id="sonata.media.form.type.media"/>
        <argument key="Sonata\UserBundle\Form\Type\ApiGroupType" type="service" id="sonata.user.api.form.type.group"/>
        <argument key="Sonata\UserBundle\Form\Type\ApiUserType" type="service" id="sonata.user.api.form.type.user"/>
        <argument key="Sonata\UserBundle\Form\Type\ProfileType" type="service" id="sonata.user.profile.form.type"/>
        <argument key="Sonata\UserBundle\Form\Type\RegistrationFormType" type="service" id="sonata.user.registration.form.type"/>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType" type="service" id="sonata.user.form.type.security_roles"/>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType" type="service" id="sonata.user.form.gender_list"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.templating" class="Symfony\Bridge\Monolog\Logger">
      <argument>templating</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.server_log"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id="service_locator.6f24348b77840ec12a20c22a3f985cf7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="security.access.decision_manager.delegate" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.access.authenticated_voter"/>
        <argument type="service" id="security.access.role_hierarchy_voter"/>
        <argument type="service" id="security.access.expression_voter"/>
      </argument>
      <argument>unanimous</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="service_locator.e29cefb79ad8454e4f2f441657799a44" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="list" type="service" id="knp_menu.renderer.list"/>
        <argument key="twig" type="service" id="knp_menu.renderer.twig"/>
      </argument>
    </service>
    <service id="data_dog_audit.admin.audit_log.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.user.admin.user.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.user.admin.group.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.media.admin.media.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">@SonataMedia/MediaAdmin/list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">@SonataMedia/MediaAdmin/edit.html.twig</argument>
        <argument key="base_list_field">@SonataAdmin/CRUD/base_list_flat_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataMedia/MediaAdmin/inner_row_media.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataMedia/MediaAdmin/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.media.admin.gallery.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">@SonataMedia/GalleryAdmin/list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.media.admin.gallery_has_media.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.classification.admin.category.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">@SonataClassification/CategoryAdmin/list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
        <argument key="tree">@SonataClassification/CategoryAdmin/tree.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.classification.admin.tag.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.classification.admin.collection.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="sonata.classification.admin.context.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.empresa.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.organismos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.personas.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.areas.internet.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.espacios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.pizarras.privadas.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.arrendamiento.redes.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.compra.venta.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.compra.venta.pizarra.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.contactos.telefonicos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo1.contrato.mantenimiento.pizarra.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo2.contrato.areas.internet.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo2.contrato.arrendamiento.redes.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo2.contrato.instalacion.pizarra.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo2.contrato.recarga.por.pos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.datos.cuentas.bancarias.etecsa.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo4.contrato.agencia.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo4.arrendamiento.espacios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo4.contrato.compra.venta.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo4.contrato.recarga.por.pos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo5.contrato.agencia.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo5.arrendaminto.espacios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexo5.contrato.areas.internet.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexocps.conexion.centrales.telefonicas.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexocps.levantamiento.redes.tecnicas.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.anexocps.servicios.terceros.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.agencia.persona.juridica.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.areas.internet.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.arrendamiento.espacios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.arrendamiento.pizarra.privada.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.arrendamiento.redes.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.compra.venta.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.instalacion.pizarra.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.mantenimiento.pizarra.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.prestacion.servicios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.recarga.por.pos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.descripcion.productos.servicios.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.facilidades.del.equipo.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.grupos.electrogenos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.locales.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.mantenimiento.correctivo.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.mantenimiento.preventivo.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.pizarra.pbx.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.protecciones.tierra.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.antenas.a4.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.bastidores.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.equipos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.iluminacion.tomacorriente.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.mastiles.a4.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.terminaciones.bastidor.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.torres.a4.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.relacion.vias.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.sistema.corriente.directa.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.sistema.iluminacion.a5.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.sistemas.corriente.alterna.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tarifas.espacios.arrendados.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.terminaciones.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tipos.de.mantenimientos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tipos.distancias.arrendadas.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tipos.mantenimientos.correctivos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tomacorrientes.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.descripcion.productos.contratados.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.contactos.telefonicos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.equipamiento.gsm.pos.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tarjetas.sim.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.tarifas.conexion.pizarras.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="app.admin.contrato.comp.vent.pizarra.template_registry" class="Sonata\AdminBundle\Templating\TemplateRegistry">
      <tag name="sonata.admin.template_registry"/>
      <argument type="collection">
        <argument key="history_revision_timestamp">@SonataIntl/CRUD/history_revision_timestamp.html.twig</argument>
        <argument key="user_block">@SonataUser/Admin/Core/user_block.html.twig</argument>
        <argument key="layout">AppBundle:Admin:standard_layout.html.twig</argument>
        <argument key="ajax">SonataAdminBundle::ajax_layout.html.twig</argument>
        <argument key="list">SonataAdminBundle:CRUD:list.html.twig</argument>
        <argument key="show">SonataAdminBundle:CRUD:show.html.twig</argument>
        <argument key="edit">SonataAdminBundle:CRUD:edit.html.twig</argument>
        <argument key="base_list_field">AppBundle:Admin:CRUD/base_list_field.html.twig</argument>
        <argument key="dashboard">AppBundle:Admin:dashboard.html.twig</argument>
        <argument key="add_block">@SonataAdmin/Core/add_block.html.twig</argument>
        <argument key="search">@SonataAdmin/Core/search.html.twig</argument>
        <argument key="filter">@SonataAdmin/Form/filter_admin_fields.html.twig</argument>
        <argument key="show_compare">@SonataAdmin/CRUD/show_compare.html.twig</argument>
        <argument key="preview">@SonataAdmin/CRUD/preview.html.twig</argument>
        <argument key="history">@SonataAdmin/CRUD/history.html.twig</argument>
        <argument key="acl">@SonataAdmin/CRUD/acl.html.twig</argument>
        <argument key="action">@SonataAdmin/CRUD/action.html.twig</argument>
        <argument key="select">@SonataAdmin/CRUD/list__select.html.twig</argument>
        <argument key="list_block">@SonataAdmin/Block/block_admin_list.html.twig</argument>
        <argument key="search_result_block">@SonataAdmin/Block/block_search_result.html.twig</argument>
        <argument key="short_object_description">@SonataAdmin/Helper/short-object-description.html.twig</argument>
        <argument key="delete">@SonataAdmin/CRUD/delete.html.twig</argument>
        <argument key="batch">@SonataAdmin/CRUD/list__batch.html.twig</argument>
        <argument key="batch_confirmation">@SonataAdmin/CRUD/batch_confirmation.html.twig</argument>
        <argument key="inner_list_row">@SonataAdmin/CRUD/list_inner_row.html.twig</argument>
        <argument key="outer_list_rows_mosaic">@SonataAdmin/CRUD/list_outer_rows_mosaic.html.twig</argument>
        <argument key="outer_list_rows_list">@SonataAdmin/CRUD/list_outer_rows_list.html.twig</argument>
        <argument key="outer_list_rows_tree">@SonataAdmin/CRUD/list_outer_rows_tree.html.twig</argument>
        <argument key="pager_links">@SonataAdmin/Pager/links.html.twig</argument>
        <argument key="pager_results">@SonataAdmin/Pager/results.html.twig</argument>
        <argument key="tab_menu_template">@SonataAdmin/Core/tab_menu_template.html.twig</argument>
        <argument key="knp_menu_template">@SonataAdmin/Menu/sonata_menu.html.twig</argument>
        <argument key="action_create">@SonataAdmin/CRUD/dashboard__action_create.html.twig</argument>
        <argument key="button_acl">@SonataAdmin/Button/acl_button.html.twig</argument>
        <argument key="button_create">@SonataAdmin/Button/create_button.html.twig</argument>
        <argument key="button_edit">@SonataAdmin/Button/edit_button.html.twig</argument>
        <argument key="button_history">@SonataAdmin/Button/history_button.html.twig</argument>
        <argument key="button_list">@SonataAdmin/Button/list_button.html.twig</argument>
        <argument key="button_show">@SonataAdmin/Button/show_button.html.twig</argument>
      </argument>
    </service>
    <service id="fos_rest.request_matcher.6d27357678da78ac461e8b851ac5bf83a1f9471f9d410dff7d760712cb7770b80848bf9c" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/_profiler|_wdt/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.2364365e6bb6bfd5cadeda231e59db9139fadac2b673beb794ba3c0068839a899dc3c386" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="fos_rest.request_matcher.69e9d3fd562e0ecffc5bce0c68d3b7a673d187934b742bc76452558275bbd7611198d478" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="nelmio_api_doc.parser.form_type_parser" class="Nelmio\ApiDocBundle\Parser\FormTypeParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="form.factory"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.parser.validation_parser" class="Nelmio\ApiDocBundle\Parser\ValidationParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="validator"/>
    </service>
    <service id="nelmio_api_doc.parser.jms_metadata_parser" class="Nelmio\ApiDocBundle\Parser\JmsMetadataParser">
      <tag name="nelmio_api_doc.extractor.parser"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.cache_naming_strategy"/>
      <argument type="service" id="nelmio_api_doc.doc_comment_extractor"/>
    </service>
    <service id="form.extension" class="Sonata\CoreBundle\Form\Extension\DependencyInjectionExtension">
      <argument type="service" id="service_container"/>
      <argument type="collection">
        <argument key="AppBundle\Form\User\Type\RegistrationFormType">application_user.registration.form.type</argument>
        <argument key="AppBundle\Form\User\Type\ProfileFormType">application_user.profile.form.type</argument>
        <argument key="AppBundle\Form\User\Type\ProfileAuthenticationFormType">application_sonata_user.profile.authentication.form.type</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType">form.type.form</argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType">form.type.choice</argument>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType">form.type.entity</argument>
        <argument key="FOS\UserBundle\Form\Type\UsernameFormType">fos_user.username_form_type</argument>
        <argument key="FOS\UserBundle\Form\Type\ProfileFormType">fos_user.profile.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\RegistrationFormType">fos_user.registration.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ChangePasswordFormType">fos_user.change_password.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\ResettingFormType">fos_user.resetting.form.type</argument>
        <argument key="FOS\UserBundle\Form\Type\GroupFormType">fos_user.group.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\SecurityRolesType">sonata.user.form.type.security_roles</argument>
        <argument key="Sonata\UserBundle\Form\Type\ProfileType">sonata.user.profile.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\UserGenderListType">sonata.user.form.gender_list</argument>
        <argument key="Sonata\UserBundle\Form\Type\RegistrationFormType">sonata.user.registration.form.type</argument>
        <argument key="Sonata\UserBundle\Form\Type\ApiGroupType">sonata.user.api.form.type.group</argument>
        <argument key="Sonata\UserBundle\Form\Type\ApiUserType">sonata.user.api.form.type.user</argument>
        <argument key="Sonata\MediaBundle\Form\Type\MediaType">sonata.media.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType">sonata.media.api.form.type.doctrine.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiMediaType">sonata.media.api.form.type.media</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryType">sonata.media.api.form.type.gallery</argument>
        <argument key="Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType">sonata.media.api.form.type.gallery_has_media</argument>
        <argument key="Ivory\CKEditorBundle\Form\Type\CKEditorType">ivory_ck_editor.form.type</argument>
        <argument key="Sonata\AdminBundle\Form\Type\AdminType">sonata.admin.form.type.admin</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelType">sonata.admin.form.type.model_choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelListType">sonata.admin.form.type.model_list</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelReferenceType">sonata.admin.form.type.model_reference</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelHiddenType">sonata.admin.form.type.model_hidden</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ModelAutocompleteType">sonata.admin.form.type.model_autocomplete</argument>
        <argument key="Sonata\AdminBundle\Form\Type\CollectionType">sonata.admin.form.type.collection</argument>
        <argument key="Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType">sonata.admin.doctrine_orm.form.type.choice_field_mask</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\NumberType">sonata.admin.form.filter.type.number</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\ChoiceType">sonata.admin.form.filter.type.choice</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DefaultType">sonata.admin.form.filter.type.default</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateType">sonata.admin.form.filter.type.date</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateRangeType">sonata.admin.form.filter.type.daterange</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeType">sonata.admin.form.filter.type.datetime</argument>
        <argument key="Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType">sonata.admin.form.filter.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ImmutableArrayType">sonata.core.form.type.array</argument>
        <argument key="Sonata\CoreBundle\Form\Type\BooleanType">sonata.core.form.type.boolean</argument>
        <argument key="Sonata\CoreBundle\Form\Type\CollectionType">sonata.core.form.type.collection</argument>
        <argument key="Sonata\CoreBundle\Form\Type\TranslatableChoiceType">sonata.core.form.type.translatable_choice</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangeType">sonata.core.form.type.date_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangeType">sonata.core.form.type.datetime_range</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DatePickerType">sonata.core.form.type.date_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimePickerType">sonata.core.form.type.datetime_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateRangePickerType">sonata.core.form.type.date_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\DateTimeRangePickerType">sonata.core.form.type.datetime_range_picker</argument>
        <argument key="Sonata\CoreBundle\Form\Type\EqualType">sonata.core.form.type.equal</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorSelectorType">sonata.core.form.type.color_selector</argument>
        <argument key="Sonata\CoreBundle\Form\Type\ColorType">sonata.core.form.type.color</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\FormatterType">sonata.formatter.form.type.selector</argument>
        <argument key="Sonata\FormatterBundle\Form\Type\SimpleFormatterType">sonata.formatter.form.type.simple</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ServiceListType">sonata.block.form.type.block</argument>
        <argument key="Sonata\BlockBundle\Form\Type\ContainerTemplateType">sonata.block.form.type.container_template</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\CategorySelectorType">sonata.classification.form.type.category_selector</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCategoryType">sonata.classification.api.form.type.category</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiCollectionType">sonata.classification.api.form.type.collection</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiTagType">sonata.classification.api.form.type.tag</argument>
        <argument key="Sonata\ClassificationBundle\Form\Type\ApiContextType">sonata.classification.api.form.type.context</argument>
        <argument key="Mopa\Bundle\BootstrapBundle\Form\Type\TabType">mopa_bootstrap.form.type.tab</argument>
        <argument key="Mopa\Bundle\BootstrapBundle\Form\Type\FormActionsType">mopa_bootstrap.form.type.form_actions</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\TextFilterType">lexik_form_filter.type.filter_text</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberFilterType">lexik_form_filter.type.filter_number</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\NumberRangeFilterType">lexik_form_filter.type.filter_number_range</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CheckboxFilterType">lexik_form_filter.type.filter_checkbox</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\BooleanFilterType">lexik_form_filter.type.filter_boolean</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\ChoiceFilterType">lexik_form_filter.type.filter_choice</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateFilterType">lexik_form_filter.type.filter_date</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateRangeFilterType">lexik_form_filter.type.filter_date_range</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeFilterType">lexik_form_filter.type.filter_datetime</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\DateTimeRangeFilterType">lexik_form_filter.type.filter_datetime_range</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\CollectionAdapterFilterType">lexik_form_filter.type.filter_collection_adapter</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\SharedableFilterType">lexik_form_filter.type.filter_sharedable</argument>
        <argument key="Lexik\Bundle\FormFilterBundle\Filter\Form\Type\EntityFilterType">lexik_form_filter.type.filter_entity</argument>
        <argument key="Liip\ImagineBundle\Form\Type\ImageType">liip_imagine.form.type.image</argument>
        <argument key="Gregwar\CaptchaBundle\Type\CaptchaType">captcha.type</argument>
      </argument>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="collection">
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.upload.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>sonata.admin.form.extension.field</argument>
          <argument>fos_rest.form.extension.csrf_disable</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
          <argument>mopa_bootstrap.form.type_extension.embed_form</argument>
          <argument>mopa_bootstrap.form.type_extension.static_text</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
          <argument>lexik_form_filter.type_extension.filter_extension</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ButtonType" type="collection">
          <argument>mopa_bootstrap.form.type_extension.offset_button</argument>
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateType" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\DateTimeType" type="collection">
          <argument>mopa_bootstrap.form.type_extension.datetime</argument>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\TimeType" type="collection">
          <argument>mopa_bootstrap.form.type_extension.time</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument>form.type_guesser.validator</argument>
        <argument>form.type_guesser.doctrine</argument>
      </argument>
      <argument type="collection">
        <argument key="fos_user_username">FOS\UserBundle\Form\Type\UsernameFormType</argument>
        <argument key="fos_user_profile">FOS\UserBundle\Form\Type\ProfileFormType</argument>
        <argument key="fos_user_registration">FOS\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="fos_user_change_password">FOS\UserBundle\Form\Type\ChangePasswordFormType</argument>
        <argument key="fos_user_resetting">FOS\UserBundle\Form\Type\ResettingFormType</argument>
        <argument key="fos_user_group">FOS\UserBundle\Form\Type\GroupFormType</argument>
        <argument key="sonata_security_roles">Sonata\UserBundle\Form\Type\SecurityRolesType</argument>
        <argument key="sonata_user_profile">Sonata\UserBundle\Form\Type\ProfileType</argument>
        <argument key="sonata_user_gender">Sonata\UserBundle\Form\Type\UserGenderListType</argument>
        <argument key="sonata_user_registration">Sonata\UserBundle\Form\Type\RegistrationFormType</argument>
        <argument key="sonata_user_api_form_group">Sonata\UserBundle\Form\Type\ApiGroupType</argument>
        <argument key="sonata_user_api_form_user">Sonata\UserBundle\Form\Type\ApiUserType</argument>
        <argument key="sonata_media_type">Sonata\MediaBundle\Form\Type\MediaType</argument>
        <argument key="sonata_media_api_form_media">Sonata\MediaBundle\Form\Type\ApiMediaType</argument>
        <argument key="sonata_media_api_form_doctrine_media">Sonata\MediaBundle\Form\Type\ApiDoctrineMediaType</argument>
        <argument key="sonata_media_api_form_gallery">Sonata\MediaBundle\Form\Type\ApiGalleryType</argument>
        <argument key="sonata_media_api_form_gallery_has_media">Sonata\MediaBundle\Form\Type\ApiGalleryHasMediaType</argument>
        <argument key="sonata_type_admin">Sonata\AdminBundle\Form\Type\AdminType</argument>
        <argument key="sonata_type_model">Sonata\AdminBundle\Form\Type\ModelType</argument>
        <argument key="sonata_type_model_list">Sonata\AdminBundle\Form\Type\ModelListType</argument>
        <argument key="sonata_type_model_reference">Sonata\AdminBundle\Form\Type\ModelReferenceType</argument>
        <argument key="sonata_type_model_hidden">Sonata\AdminBundle\Form\Type\ModelHiddenType</argument>
        <argument key="sonata_type_model_autocomplete">Sonata\AdminBundle\Form\Type\ModelAutocompleteType</argument>
        <argument key="sonata_type_native_collection">Sonata\AdminBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_choice_field_mask">Sonata\AdminBundle\Form\Type\ChoiceFieldMaskType</argument>
        <argument key="sonata_type_filter_number">Sonata\AdminBundle\Form\Type\Filter\NumberType</argument>
        <argument key="sonata_type_filter_choice">Sonata\AdminBundle\Form\Type\Filter\ChoiceType</argument>
        <argument key="sonata_type_filter_default">Sonata\AdminBundle\Form\Type\Filter\DefaultType</argument>
        <argument key="sonata_type_filter_date">Sonata\AdminBundle\Form\Type\Filter\DateType</argument>
        <argument key="sonata_type_filter_date_range">Sonata\AdminBundle\Form\Type\Filter\DateRangeType</argument>
        <argument key="sonata_type_filter_datetime">Sonata\AdminBundle\Form\Type\Filter\DateTimeType</argument>
        <argument key="sonata_type_filter_datetime_range">Sonata\AdminBundle\Form\Type\Filter\DateTimeRangeType</argument>
        <argument key="tab">Mopa\Bundle\BootstrapBundle\Form\Type\TabType</argument>
        <argument key="form">Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument key="birthday">Symfony\Component\Form\Extension\Core\Type\BirthdayType</argument>
        <argument key="checkbox">Symfony\Component\Form\Extension\Core\Type\CheckboxType</argument>
        <argument key="choice">Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument key="collection">Symfony\Component\Form\Extension\Core\Type\CollectionType</argument>
        <argument key="country">Symfony\Component\Form\Extension\Core\Type\CountryType</argument>
        <argument key="date">Symfony\Component\Form\Extension\Core\Type\DateType</argument>
        <argument key="datetime">Symfony\Component\Form\Extension\Core\Type\DateTimeType</argument>
        <argument key="email">Symfony\Component\Form\Extension\Core\Type\EmailType</argument>
        <argument key="file">Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument key="hidden">Symfony\Component\Form\Extension\Core\Type\HiddenType</argument>
        <argument key="integer">Symfony\Component\Form\Extension\Core\Type\IntegerType</argument>
        <argument key="language">Symfony\Component\Form\Extension\Core\Type\LanguageType</argument>
        <argument key="locale">Symfony\Component\Form\Extension\Core\Type\LocaleType</argument>
        <argument key="money">Symfony\Component\Form\Extension\Core\Type\MoneyType</argument>
        <argument key="number">Symfony\Component\Form\Extension\Core\Type\NumberType</argument>
        <argument key="password">Symfony\Component\Form\Extension\Core\Type\PasswordType</argument>
        <argument key="percent">Symfony\Component\Form\Extension\Core\Type\PercentType</argument>
        <argument key="radio">Symfony\Component\Form\Extension\Core\Type\RadioType</argument>
        <argument key="repeated">Symfony\Component\Form\Extension\Core\Type\RepeatedType</argument>
        <argument key="search">Symfony\Component\Form\Extension\Core\Type\SearchType</argument>
        <argument key="textarea">Symfony\Component\Form\Extension\Core\Type\TextareaType</argument>
        <argument key="text">Symfony\Component\Form\Extension\Core\Type\TextType</argument>
        <argument key="time">Symfony\Component\Form\Extension\Core\Type\TimeType</argument>
        <argument key="timezone">Symfony\Component\Form\Extension\Core\Type\TimezoneType</argument>
        <argument key="url">Symfony\Component\Form\Extension\Core\Type\UrlType</argument>
        <argument key="button">Symfony\Component\Form\Extension\Core\Type\ButtonType</argument>
        <argument key="submit">Symfony\Component\Form\Extension\Core\Type\SubmitType</argument>
        <argument key="reset">Symfony\Component\Form\Extension\Core\Type\ResetType</argument>
        <argument key="currency">Symfony\Component\Form\Extension\Core\Type\CurrencyType</argument>
        <argument key="entity">Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument key="sonata_type_immutable_array">Sonata\CoreBundle\Form\Type\ImmutableArrayType</argument>
        <argument key="sonata_type_boolean">Sonata\CoreBundle\Form\Type\BooleanType</argument>
        <argument key="sonata_type_collection">Sonata\CoreBundle\Form\Type\CollectionType</argument>
        <argument key="sonata_type_translatable_choice">Sonata\CoreBundle\Form\Type\TranslatableChoiceType</argument>
        <argument key="sonata_type_date_range">Sonata\CoreBundle\Form\Type\DateRangeType</argument>
        <argument key="sonata_type_datetime_range">Sonata\CoreBundle\Form\Type\DateTimeRangeType</argument>
        <argument key="sonata_type_date_picker">Sonata\CoreBundle\Form\Type\DatePickerType</argument>
        <argument key="sonata_type_datetime_picker">Sonata\CoreBundle\Form\Type\DateTimePickerType</argument>
        <argument key="sonata_type_date_range_picker">Sonata\CoreBundle\Form\Type\DateRangePickerType</argument>
        <argument key="sonata_type_datetime_range_picker">Sonata\CoreBundle\Form\Type\DateTimeRangePickerType</argument>
        <argument key="sonata_type_equal">Sonata\CoreBundle\Form\Type\EqualType</argument>
        <argument key="sonata_type_color">Sonata\CoreBundle\Form\Type\ColorType</argument>
        <argument key="sonata_type_color_selector">Sonata\CoreBundle\Form\Type\ColorSelectorType</argument>
        <argument key="ckeditor">Ivory\CKEditorBundle\Form\Type\CKEditorType</argument>
        <argument key="sonata_formatter_type">Sonata\FormatterBundle\Form\Type\FormatterType</argument>
        <argument key="sonata_simple_formatter_type">Sonata\FormatterBundle\Form\Type\SimpleFormatterType</argument>
        <argument key="sonata_block_service_choice">Sonata\BlockBundle\Form\Type\ServiceListType</argument>
        <argument key="sonata_type_container_template_choice">Sonata\BlockBundle\Form\Type\ContainerTemplateType</argument>
        <argument key="sonata_classification_api_form_category">Sonata\ClassificationBundle\Form\Type\ApiCategoryType</argument>
        <argument key="sonata_classification_api_form_collection">Sonata\ClassificationBundle\Form\Type\ApiCollectionType</argument>
        <argument key="sonata_classification_api_form_tag">Sonata\ClassificationBundle\Form\Type\ApiTagType</argument>
        <argument key="sonata_classification_api_form_context">Sonata\ClassificationBundle\Form\Type\ApiContextType</argument>
        <argument key="sonata_category_selector">Sonata\ClassificationBundle\Form\Type\CategorySelectorType</argument>
      </argument>
      <argument type="collection">
        <argument key="form" type="collection">
          <argument>sonata.admin.form.extension.field</argument>
          <argument>mopa_bootstrap.form.type_extension.help</argument>
          <argument>mopa_bootstrap.form.type_extension.legend</argument>
          <argument>mopa_bootstrap.form.type_extension.error</argument>
          <argument>mopa_bootstrap.form.type_extension.widget</argument>
          <argument>mopa_bootstrap.form.type_extension.horizontal</argument>
          <argument>mopa_bootstrap.form.type_extension.widget_collection</argument>
          <argument>mopa_bootstrap.form.type_extension.tabbed</argument>
          <argument>form.type_extension.form.http_foundation</argument>
          <argument>form.type_extension.form.validator</argument>
          <argument>form.type_extension.csrf</argument>
          <argument>form.type_extension.form.data_collector</argument>
          <argument>nelmio_api_doc.form.extension.description_form_type_extension</argument>
        </argument>
        <argument key="choice" type="collection">
          <argument>sonata.admin.form.extension.choice</argument>
        </argument>
        <argument key="button" type="collection">
          <argument>mopa_bootstrap.form.type_extension.button</argument>
        </argument>
        <argument key="date" type="collection">
          <argument>mopa_bootstrap.form.type_extension.date</argument>
        </argument>
        <argument key="repeated" type="collection">
          <argument>form.type_extension.repeated.validator</argument>
        </argument>
        <argument key="submit" type="collection">
          <argument>form.type_extension.submit.validator</argument>
        </argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="controller_name_converter"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="argument_resolver.request_attribute"/>
        <argument type="service" id="argument_resolver.request"/>
        <argument type="service" id="argument_resolver.session"/>
        <argument type="service" id="security.user_value_resolver"/>
        <argument type="service" id="argument_resolver.service"/>
        <argument type="service" id="argument_resolver.default"/>
        <argument type="service" id="argument_resolver.variadic"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="JMS\SecurityExtraBundle\Security\Authorization\RememberingAccessDecisionManager" public="false">
      <argument type="service" id="security.access.decision_manager.delegate"/>
    </service>
    <service id="service_locator.26ac001b3ede28481ac0de703666b4d7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id="service_locator.c636d5b8b2a3fc0aab283c6eda73cd95" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Sonata\CoreBundle\Validator\InlineValidator" type="service" id="sonata.core.validator.inline"/>
        <argument key="Sonata\FormatterBundle\Validator\Constraints\FormatterValidator" type="service" id="sonata.formatter.validator.formatter"/>
        <argument key="Sonata\MediaBundle\Validator\FormatValidator" type="service" id="sonata.media.validator.format"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="sonata.admin.validator.inline" type="service" id="sonata.admin.validator.inline"/>
        <argument key="sonata.core.validator.inline" type="service" id="sonata.core.validator.inline"/>
        <argument key="sonata.formatter.validator.formatter" type="service" id="sonata.formatter.validator.formatter"/>
        <argument key="sonata.media.validator.format" type="service" id="sonata.media.validator.format"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" lazy="true">
      <argument>alB2hdG7Ew</argument>
      <argument>0</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>UQHQOm4FRg</argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>gYNnUNxsPB</argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>bl9TOCf5H2</argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" lazy="true">
      <argument>Jp55HRqNCG</argument>
      <argument>0</argument>
      <argument>YkkUqWmXPJq7yPM+oP3Y3s</argument>
      <argument>D:\ESTUDIO\siunic_etecsa\siunic_etecsa\var\cache\dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="service_locator.1ecb5190ba61ab773cdad8cb2cc65478" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Bridge\Twig\Form\TwigRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="service_locator.30d2eb941138ac7443d6cbf6f10bad0f" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hateoas.event_subscriber.json" type="service" id="hateoas.event_subscriber.json"/>
        <argument key="hateoas.event_subscriber.xml" type="service" id="hateoas.event_subscriber.xml"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id="service_locator.9fe5127d9c35c80f407d2a894c6f88cd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.serializer.exception_normalizer.jms" type="service" id="fos_rest.serializer.exception_normalizer.jms"/>
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler"/>
        <argument key="jms_serializer.php_collection_handler" type="service" id="jms_serializer.php_collection_handler"/>
        <argument key="sonata.classification.serializer.handler.category" type="service" id="sonata.classification.serializer.handler.category"/>
        <argument key="sonata.classification.serializer.handler.collection" type="service" id="sonata.classification.serializer.handler.collection"/>
        <argument key="sonata.classification.serializer.handler.context" type="service" id="sonata.classification.serializer.handler.context"/>
        <argument key="sonata.classification.serializer.handler.tag" type="service" id="sonata.classification.serializer.handler.tag"/>
        <argument key="sonata.media.serializer.handler.gallery" type="service" id="sonata.media.serializer.handler.gallery"/>
        <argument key="sonata.media.serializer.handler.media" type="service" id="sonata.media.serializer.handler.media"/>
        <argument key="sonata.user.serializer.handler.user" type="service" id="sonata.user.serializer.handler.user"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="cache.app_clearer" alias="cache.default_clearer"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="templating.loader" alias="templating.loader.filesystem"/>
    <service id="templating" alias="templating.engine.twig"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="validator" public="false"/>
    <service id="translator" alias="translator.data_collector"/>
    <service id="cache.default_redis_provider" alias="c66c8daa4fa4dead6a562ed2c4bdb322" public="false"/>
    <service id="cache.default_memcached_provider" alias="8464c6758298cf75d30c4f689fb7886d" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="router" alias="router.default"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="security.firewall" public="false"/>
    <service id="security.user.provider.concrete.fos_userbundle" alias="fos_user.user_provider.username" public="false"/>
    <service id="security.user_checker.admin" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.api_docs" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.api_login" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.api_token_refresh" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.api" alias="security.user_checker" public="false"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.smtp"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Symfony\Bridge\Doctrine\RegistryInterface" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\Common\Persistence\ObjectManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine_cache.providers.doctrine.orm.default_metadata_cache"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine_cache.providers.doctrine.orm.default_result_cache"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine_cache.providers.doctrine.orm.default_query_cache"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="security.extra.metadata_driver" alias="security.extra.driver_chain"/>
    <service id="Knp\Menu\FactoryInterface" alias="knp_menu.factory" public="false"/>
    <service id="Knp\Menu\Matcher\MatcherInterface" alias="knp_menu.matcher" public="false"/>
    <service id="Knp\Menu\Util\MenuManipulator" alias="knp_menu.manipulator" public="false"/>
    <service id="markdown.parser" alias="markdown.parser.max"/>
    <service id="Knp\Bundle\MarkdownBundle\MarkdownParserInterface" alias="markdown.parser.max"/>
    <service id="Michelf\MarkdownInterface" alias="markdown.parser.max"/>
    <service id="Knp\Component\Pager\PaginatorInterface" alias="knp_paginator"/>
    <service id="fos_user.doctrine_registry" alias="doctrine" public="false"/>
    <service id="FOS\UserBundle\Security\LoginManagerInterface" alias="fos_user.security.login_manager" public="false"/>
    <service id="FOS\UserBundle\Util\TokenGeneratorInterface" alias="fos_user.util.token_generator.default" public="false"/>
    <service id="FOS\UserBundle\Util\PasswordUpdaterInterface" alias="fos_user.util.password_updater" public="false"/>
    <service id="FOS\UserBundle\Util\CanonicalFieldsUpdater" alias="fos_user.util.canonical_fields_updater" public="false"/>
    <service id="FOS\UserBundle\Model\UserManagerInterface" alias="sonata.user.orm.user_manager" public="false"/>
    <service id="fos_user.util.email_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.username_canonicalizer" alias="fos_user.util.canonicalizer.default"/>
    <service id="fos_user.util.token_generator" alias="fos_user.util.token_generator.default"/>
    <service id="fos_user.user_manager" alias="sonata.user.orm.user_manager"/>
    <service id="fos_user.group_manager" alias="sonata.user.orm.group_manager"/>
    <service id="FOS\UserBundle\Model\GroupManagerInterface" alias="sonata.user.orm.group_manager" public="false"/>
    <service id="fos_user.mailer" alias="fos_user.mailer.default"/>
    <service id="fos_user.session" alias="session" public="false"/>
    <service id="sonata.user.user_manager" alias="sonata.user.orm.user_manager"/>
    <service id="sonata.user.group_manager" alias="sonata.user.orm.group_manager"/>
    <service id="sonata.user.profile.form.handler" alias="sonata.user.profile.form.handler.default"/>
    <service id="sonata.media.manager.category" alias="sonata.media.manager.category.default"/>
    <service id="sonata.media.adapter.image.default" alias="sonata.media.adapter.image.gd"/>
    <service id="sonata.media.resizer.default" alias="sonata.media.resizer.simple"/>
    <service id="Sonata\AdminBundle\Admin\Pool" alias="sonata.admin.pool"/>
    <service id="sonata.admin.security.handler" alias="sonata.admin.security.handler.role"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.router" alias="router.default"/>
    <service id="fos_rest.templating" alias="templating.engine.twig"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="fos_rest.validator" alias="validator"/>
    <service id="hateoas.configuration.provider.resolver" alias="hateoas.configuration.provider.resolver.chain"/>
    <service id="hateoas.configuration.metadata.cache" alias="hateoas.configuration.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.cache_naming_strategy"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory"/>
    <service id="jms_serializer" alias="jms_serializer.serializer"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.expression"/>
    <service id="sonata.intl.timezone_detector" alias="sonata.intl.timezone_detector.chain"/>
    <service id="sonata.intl.locale_detector" alias="sonata.intl.locale_detector.request_stack"/>
    <service id="sonata.block.context_manager" alias="sonata.block.context_manager.default"/>
    <service id="sonata.block.cache.handler" alias="sonata.block.cache.handler.default"/>
    <service id="sonata.block.renderer" alias="sonata.block.renderer.default"/>
    <service id="Lexik\Bundle\FormFilterBundle\Filter\FilterBuilderUpdater" alias="lexik_form_filter.query_builder_updater" public="false"/>
    <service id="Lexik\Bundle\FormFilterBundle\Filter\FilterBuilderUpdaterInterface" alias="lexik_form_filter.query_builder_updater" public="false"/>
    <service id="liip_imagine" alias="liip_imagine.gd"/>
    <service id="lexik_jwt_authentication.jwt_token_authenticator" alias="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.default"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.default"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.default"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.openssl"/>
    <service id="Symfony\Component\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="Symfony\Bundle\FrameworkBundle\Templating\EngineInterface" alias="templating.engine.twig" public="false"/>
    <service id="console.command.symfony_bundle_securitybundle_command_userpasswordencodercommand" alias="security.console.user_password_encoder_command"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverruncommand" alias="web_server.command.server_run"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstartcommand" alias="web_server.command.server_start"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstopcommand" alias="web_server.command.server_stop"/>
    <service id="console.command.symfony_bundle_webserverbundle_command_serverstatuscommand" alias="web_server.command.server_status"/>
    <service id="twig.loader" alias="twig.loader.filesystem"/>
    <service id="knp_menu.menu_provider" alias="knp_menu.menu_provider.chain"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.jms"/>
    <service id="gesdinet.jwtrefreshtoken.entity_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="service_locator.b8d2046fb854cde05549fb309e1a80d2" alias="1_ecb9f3e5e09550c3de1e21744ccf95010c2dd68e0ba4f80f5f0f48d6d8300efe" public="false"/>
    <service id="translator.logging.inner" alias="translator.default" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.logging" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager"/>
    <service id="fos_rest.serializer.jms_handler_registry" alias="jms_serializer.handler_registry"/>
  </services>
</container>
